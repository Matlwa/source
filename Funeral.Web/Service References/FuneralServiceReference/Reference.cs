//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Funeral.Web.FuneralServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FuneralServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Funeral.Services")]
    [System.SerializableAttribute()]
    public partial class FuneralServiceFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FuneralServiceReference.IFuneralServices")]
    public interface IFuneralServices {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectFuneralManageServiceByParlID", ReplyAction="http://tempuri.org/IFuneralServices/SelectFuneralManageServiceByParlIDResponse")]
        Funeral.Model.FuneralServiceManageModel[] SelectFuneralManageServiceByParlID(System.Guid ParlourId, int PageSize, int PageNum, string Keyword, string SortBy, string SortOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectFuneralManageServiceByParlID", ReplyAction="http://tempuri.org/IFuneralServices/SelectFuneralManageServiceByParlIDResponse")]
        System.Threading.Tasks.Task<Funeral.Model.FuneralServiceManageModel[]> SelectFuneralManageServiceByParlIDAsync(System.Guid ParlourId, int PageSize, int PageNum, string Keyword, string SortBy, string SortOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveFuneralManageService", ReplyAction="http://tempuri.org/IFuneralServices/SaveFuneralManageServiceResponse")]
        int SaveFuneralManageService(Funeral.Model.FuneralServiceManageModel Model1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveFuneralManageService", ReplyAction="http://tempuri.org/IFuneralServices/SaveFuneralManageServiceResponse")]
        System.Threading.Tasks.Task<int> SaveFuneralManageServiceAsync(Funeral.Model.FuneralServiceManageModel Model1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectFuneralManageServiceByParlANdID", ReplyAction="http://tempuri.org/IFuneralServices/SelectFuneralManageServiceByParlANdIDResponse" +
            "")]
        Funeral.Model.FuneralServiceManageModel SelectFuneralManageServiceByParlANdID(int pkiServiceID, System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectFuneralManageServiceByParlANdID", ReplyAction="http://tempuri.org/IFuneralServices/SelectFuneralManageServiceByParlANdIDResponse" +
            "")]
        System.Threading.Tasks.Task<Funeral.Model.FuneralServiceManageModel> SelectFuneralManageServiceByParlANdIDAsync(int pkiServiceID, System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/DeleteFuneralManageServiceById", ReplyAction="http://tempuri.org/IFuneralServices/DeleteFuneralManageServiceByIdResponse")]
        int DeleteFuneralManageServiceById(int pkiServiceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/DeleteFuneralManageServiceById", ReplyAction="http://tempuri.org/IFuneralServices/DeleteFuneralManageServiceByIdResponse")]
        System.Threading.Tasks.Task<int> DeleteFuneralManageServiceByIdAsync(int pkiServiceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetAllApplicationList", ReplyAction="http://tempuri.org/IFuneralServices/GetAllApplicationListResponse")]
        Funeral.Model.ApplicationSettingsModel[] GetAllApplicationList(System.Guid parlourid, int param, int AppID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetAllApplicationList", ReplyAction="http://tempuri.org/IFuneralServices/GetAllApplicationListResponse")]
        System.Threading.Tasks.Task<Funeral.Model.ApplicationSettingsModel[]> GetAllApplicationListAsync(System.Guid parlourid, int param, int AppID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetAllApplicationList2", ReplyAction="http://tempuri.org/IFuneralServices/GetAllApplicationList2Response")]
        Funeral.Model.ApplicationSettingsModel GetAllApplicationList2(System.Guid parlourid, int param, int AppID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetAllApplicationList2", ReplyAction="http://tempuri.org/IFuneralServices/GetAllApplicationList2Response")]
        System.Threading.Tasks.Task<Funeral.Model.ApplicationSettingsModel> GetAllApplicationList2Async(System.Guid parlourid, int param, int AppID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetSuperUserAccessByID", ReplyAction="http://tempuri.org/IFuneralServices/GetSuperUserAccessByIDResponse")]
        Funeral.Model.SecureUserGroupsModel[] GetSuperUserAccessByID(int ID, System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetSuperUserAccessByID", ReplyAction="http://tempuri.org/IFuneralServices/GetSuperUserAccessByIDResponse")]
        System.Threading.Tasks.Task<Funeral.Model.SecureUserGroupsModel[]> GetSuperUserAccessByIDAsync(int ID, System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveClaims", ReplyAction="http://tempuri.org/IFuneralServices/SaveClaimsResponse")]
        int SaveClaims(Funeral.Model.ClaimsModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveClaims", ReplyAction="http://tempuri.org/IFuneralServices/SaveClaimsResponse")]
        System.Threading.Tasks.Task<int> SaveClaimsAsync(Funeral.Model.ClaimsModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectAllClaimsByParlourId", ReplyAction="http://tempuri.org/IFuneralServices/SelectAllClaimsByParlourIdResponse")]
        Funeral.Model.ClaimsModel[] SelectAllClaimsByParlourId(System.Guid ParlourId, int PageSize, int PageNum, string Keyword, string SortBy, string SortOrder, System.DateTime DateFrom, System.DateTime DateTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectAllClaimsByParlourId", ReplyAction="http://tempuri.org/IFuneralServices/SelectAllClaimsByParlourIdResponse")]
        System.Threading.Tasks.Task<Funeral.Model.ClaimsModel[]> SelectAllClaimsByParlourIdAsync(System.Guid ParlourId, int PageSize, int PageNum, string Keyword, string SortBy, string SortOrder, System.DateTime DateFrom, System.DateTime DateTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/ClaimsDelete", ReplyAction="http://tempuri.org/IFuneralServices/ClaimsDeleteResponse")]
        int ClaimsDelete(int ID, string UserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/ClaimsDelete", ReplyAction="http://tempuri.org/IFuneralServices/ClaimsDeleteResponse")]
        System.Threading.Tasks.Task<int> ClaimsDeleteAsync(int ID, string UserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectAllClaimsBySearch", ReplyAction="http://tempuri.org/IFuneralServices/SelectAllClaimsBySearchResponse")]
        Funeral.Model.ClaimsViewModel SelectAllClaimsBySearch(System.Guid ParlourId, int PageSize, int PageNum, string Keyword, string SortBy, string SortOrder, bool ClaimingForMember, bool ApplyWaitingPeriod);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectAllClaimsBySearch", ReplyAction="http://tempuri.org/IFuneralServices/SelectAllClaimsBySearchResponse")]
        System.Threading.Tasks.Task<Funeral.Model.ClaimsViewModel> SelectAllClaimsBySearchAsync(System.Guid ParlourId, int PageSize, int PageNum, string Keyword, string SortBy, string SortOrder, bool ClaimingForMember, bool ApplyWaitingPeriod);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetClaimsbyMemeberNumber", ReplyAction="http://tempuri.org/IFuneralServices/GetClaimsbyMemeberNumberResponse")]
        Funeral.Model.ClaimsModel[] GetClaimsbyMemeberNumber(int MemeberNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetClaimsbyMemeberNumber", ReplyAction="http://tempuri.org/IFuneralServices/GetClaimsbyMemeberNumberResponse")]
        System.Threading.Tasks.Task<Funeral.Model.ClaimsModel[]> GetClaimsbyMemeberNumberAsync(int MemeberNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectClaimsBypkid", ReplyAction="http://tempuri.org/IFuneralServices/SelectClaimsBypkidResponse")]
        Funeral.Model.ClaimsModel SelectClaimsBypkid(int ID, System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectClaimsBypkid", ReplyAction="http://tempuri.org/IFuneralServices/SelectClaimsBypkidResponse")]
        System.Threading.Tasks.Task<Funeral.Model.ClaimsModel> SelectClaimsBypkidAsync(int ID, System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectMembersAndDependencies1", ReplyAction="http://tempuri.org/IFuneralServices/SelectMembersAndDependencies1Response")]
        Funeral.Model.MembersModel[] SelectMembersAndDependencies1(System.Guid ParlourId, bool MainMem, string Keyword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectMembersAndDependencies1", ReplyAction="http://tempuri.org/IFuneralServices/SelectMembersAndDependencies1Response")]
        System.Threading.Tasks.Task<Funeral.Model.MembersModel[]> SelectMembersAndDependencies1Async(System.Guid ParlourId, bool MainMem, string Keyword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectMembersAndDependencies2", ReplyAction="http://tempuri.org/IFuneralServices/SelectMembersAndDependencies2Response")]
        Funeral.Model.FamilyDependencyModel[] SelectMembersAndDependencies2(System.Guid ParlourId, bool MainMem, string Keyword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectMembersAndDependencies2", ReplyAction="http://tempuri.org/IFuneralServices/SelectMembersAndDependencies2Response")]
        System.Threading.Tasks.Task<Funeral.Model.FamilyDependencyModel[]> SelectMembersAndDependencies2Async(System.Guid ParlourId, bool MainMem, string Keyword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/selectMemberByPkidAndParlor", ReplyAction="http://tempuri.org/IFuneralServices/selectMemberByPkidAndParlorResponse")]
        Funeral.Model.MembersModel selectMemberByPkidAndParlor(System.Guid ParlourId, int MemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/selectMemberByPkidAndParlor", ReplyAction="http://tempuri.org/IFuneralServices/selectMemberByPkidAndParlorResponse")]
        System.Threading.Tasks.Task<Funeral.Model.MembersModel> selectMemberByPkidAndParlorAsync(System.Guid ParlourId, int MemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetPlanDetailsByPlanId", ReplyAction="http://tempuri.org/IFuneralServices/GetPlanDetailsByPlanIdResponse")]
        Funeral.Model.PlanModel GetPlanDetailsByPlanId(int planid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetPlanDetailsByPlanId", ReplyAction="http://tempuri.org/IFuneralServices/GetPlanDetailsByPlanIdResponse")]
        System.Threading.Tasks.Task<Funeral.Model.PlanModel> GetPlanDetailsByPlanIdAsync(int planid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/UpdateMemberNumber", ReplyAction="http://tempuri.org/IFuneralServices/UpdateMemberNumberResponse")]
        int UpdateMemberNumber(int ID, string MemberNumber, string Claimnumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/UpdateMemberNumber", ReplyAction="http://tempuri.org/IFuneralServices/UpdateMemberNumberResponse")]
        System.Threading.Tasks.Task<int> UpdateMemberNumberAsync(int ID, string MemberNumber, string Claimnumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/UpdateClaimStatus", ReplyAction="http://tempuri.org/IFuneralServices/UpdateClaimStatusResponse")]
        int UpdateClaimStatus(int ID, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/UpdateClaimStatus", ReplyAction="http://tempuri.org/IFuneralServices/UpdateClaimStatusResponse")]
        System.Threading.Tasks.Task<int> UpdateClaimStatusAsync(int ID, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveClaimSupportedDocument", ReplyAction="http://tempuri.org/IFuneralServices/SaveClaimSupportedDocumentResponse")]
        int SaveClaimSupportedDocument(Funeral.Model.ClaimDocumentModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveClaimSupportedDocument", ReplyAction="http://tempuri.org/IFuneralServices/SaveClaimSupportedDocumentResponse")]
        System.Threading.Tasks.Task<int> SaveClaimSupportedDocumentAsync(Funeral.Model.ClaimDocumentModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectClaimDocumentsByClaimId", ReplyAction="http://tempuri.org/IFuneralServices/SelectClaimDocumentsByClaimIdResponse")]
        Funeral.Model.ClaimDocumentModel[] SelectClaimDocumentsByClaimId(int fkiClaimID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectClaimDocumentsByClaimId", ReplyAction="http://tempuri.org/IFuneralServices/SelectClaimDocumentsByClaimIdResponse")]
        System.Threading.Tasks.Task<Funeral.Model.ClaimDocumentModel[]> SelectClaimDocumentsByClaimIdAsync(int fkiClaimID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/DeleteClaimsdocumentById", ReplyAction="http://tempuri.org/IFuneralServices/DeleteClaimsdocumentByIdResponse")]
        int DeleteClaimsdocumentById(int pkiClaimPictureID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/DeleteClaimsdocumentById", ReplyAction="http://tempuri.org/IFuneralServices/DeleteClaimsdocumentByIdResponse")]
        System.Threading.Tasks.Task<int> DeleteClaimsdocumentByIdAsync(int pkiClaimPictureID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectClaimsDocumentsByPKId", ReplyAction="http://tempuri.org/IFuneralServices/SelectClaimsDocumentsByPKIdResponse")]
        Funeral.Model.ClaimDocumentModel SelectClaimsDocumentsByPKId(int DocumentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectClaimsDocumentsByPKId", ReplyAction="http://tempuri.org/IFuneralServices/SelectClaimsDocumentsByPKIdResponse")]
        System.Threading.Tasks.Task<Funeral.Model.ClaimDocumentModel> SelectClaimsDocumentsByPKIdAsync(int DocumentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetInvoiceByid", ReplyAction="http://tempuri.org/IFuneralServices/GetInvoiceByidResponse")]
        Funeral.Model.NewMemberInvoiceModel GetInvoiceByid(int InvoiceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetInvoiceByid", ReplyAction="http://tempuri.org/IFuneralServices/GetInvoiceByidResponse")]
        System.Threading.Tasks.Task<Funeral.Model.NewMemberInvoiceModel> GetInvoiceByidAsync(int InvoiceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/PolicyStatusPieChart", ReplyAction="http://tempuri.org/IFuneralServices/PolicyStatusPieChartResponse")]
        System.Data.DataTable PolicyStatusPieChart(System.Guid parlourid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/PolicyStatusPieChart", ReplyAction="http://tempuri.org/IFuneralServices/PolicyStatusPieChartResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> PolicyStatusPieChartAsync(System.Guid parlourid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectPolicyPremiumByParlourId", ReplyAction="http://tempuri.org/IFuneralServices/SelectPolicyPremiumByParlourIdResponse")]
        Funeral.Model.PolicyPremiumDashboardModel[] SelectPolicyPremiumByParlourId(System.Guid ParlourId, int PageSize, int PageNum, string Keyword, string SortBy, string SortOrder, bool isAdmin, bool isSuperUser, string UserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectPolicyPremiumByParlourId", ReplyAction="http://tempuri.org/IFuneralServices/SelectPolicyPremiumByParlourIdResponse")]
        System.Threading.Tasks.Task<Funeral.Model.PolicyPremiumDashboardModel[]> SelectPolicyPremiumByParlourIdAsync(System.Guid ParlourId, int PageSize, int PageNum, string Keyword, string SortBy, string SortOrder, bool isAdmin, bool isSuperUser, string UserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/TombStonesPaymentSave", ReplyAction="http://tempuri.org/IFuneralServices/TombStonesPaymentSaveResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Funeral.Web.FuneralServiceReference.FuneralServiceFault), Action="http://tempuri.org/IFuneralServices/TombStonesPaymentSaveFuneralServiceFaultFault" +
            "", Name="FuneralServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Funeral.Services")]
        int TombStonesPaymentSave(Funeral.Model.TombStonesPaymentModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/TombStonesPaymentSave", ReplyAction="http://tempuri.org/IFuneralServices/TombStonesPaymentSaveResponse")]
        System.Threading.Tasks.Task<int> TombStonesPaymentSaveAsync(Funeral.Model.TombStonesPaymentModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/TombStonesPaymentSelect", ReplyAction="http://tempuri.org/IFuneralServices/TombStonesPaymentSelectResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Funeral.Web.FuneralServiceReference.FuneralServiceFault), Action="http://tempuri.org/IFuneralServices/TombStonesPaymentSelectFuneralServiceFaultFau" +
            "lt", Name="FuneralServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Funeral.Services")]
        Funeral.Model.TombStonesPaymentModel TombStonesPaymentSelect(System.Guid ParlourId, int InvoiceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/TombStonesPaymentSelect", ReplyAction="http://tempuri.org/IFuneralServices/TombStonesPaymentSelectResponse")]
        System.Threading.Tasks.Task<Funeral.Model.TombStonesPaymentModel> TombStonesPaymentSelectAsync(System.Guid ParlourId, int InvoiceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/TombStonesPaymentSelectByTombstoneId", ReplyAction="http://tempuri.org/IFuneralServices/TombStonesPaymentSelectByTombstoneIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Funeral.Web.FuneralServiceReference.FuneralServiceFault), Action="http://tempuri.org/IFuneralServices/TombStonesPaymentSelectByTombstoneIdFuneralSe" +
            "rviceFaultFault", Name="FuneralServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Funeral.Services")]
        Funeral.Model.TombStonesPaymentModel[] TombStonesPaymentSelectByTombstoneId(System.Guid ParlourId, int TombstoneId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/TombStonesPaymentSelectByTombstoneId", ReplyAction="http://tempuri.org/IFuneralServices/TombStonesPaymentSelectByTombstoneIdResponse")]
        System.Threading.Tasks.Task<Funeral.Model.TombStonesPaymentModel[]> TombStonesPaymentSelectByTombstoneIdAsync(System.Guid ParlourId, int TombstoneId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetPrintCounter", ReplyAction="http://tempuri.org/IFuneralServices/GetPrintCounterResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Funeral.Web.FuneralServiceReference.FuneralServiceFault), Action="http://tempuri.org/IFuneralServices/GetPrintCounterFuneralServiceFaultFault", Name="FuneralServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Funeral.Services")]
        int GetPrintCounter(int invoiceId, System.Guid parlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetPrintCounter", ReplyAction="http://tempuri.org/IFuneralServices/GetPrintCounterResponse")]
        System.Threading.Tasks.Task<int> GetPrintCounterAsync(int invoiceId, System.Guid parlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetAllPackage", ReplyAction="http://tempuri.org/IFuneralServices/GetAllPackageResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Funeral.Web.FuneralServiceReference.FuneralServiceFault), Action="http://tempuri.org/IFuneralServices/GetAllPackageFuneralServiceFaultFault", Name="FuneralServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Funeral.Services")]
        Funeral.Model.PackageServiceModel[] GetAllPackage(System.Guid parlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetAllPackage", ReplyAction="http://tempuri.org/IFuneralServices/GetAllPackageResponse")]
        System.Threading.Tasks.Task<Funeral.Model.PackageServiceModel[]> GetAllPackageAsync(System.Guid parlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetPackageService", ReplyAction="http://tempuri.org/IFuneralServices/GetPackageServiceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Funeral.Web.FuneralServiceReference.FuneralServiceFault), Action="http://tempuri.org/IFuneralServices/GetPackageServiceFuneralServiceFaultFault", Name="FuneralServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Funeral.Services")]
        Funeral.Model.PackageServicesSelectionModel[] GetPackageService(System.Guid parlourId, string PackageName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetPackageService", ReplyAction="http://tempuri.org/IFuneralServices/GetPackageServiceResponse")]
        System.Threading.Tasks.Task<Funeral.Model.PackageServicesSelectionModel[]> GetPackageServiceAsync(System.Guid parlourId, string PackageName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SavePackage", ReplyAction="http://tempuri.org/IFuneralServices/SavePackageResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Funeral.Web.FuneralServiceReference.FuneralServiceFault), Action="http://tempuri.org/IFuneralServices/SavePackageFuneralServiceFaultFault", Name="FuneralServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Funeral.Services")]
        int SavePackage(Funeral.Model.PackageServiceModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SavePackage", ReplyAction="http://tempuri.org/IFuneralServices/SavePackageResponse")]
        System.Threading.Tasks.Task<int> SavePackageAsync(Funeral.Model.PackageServiceModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SavePackageService", ReplyAction="http://tempuri.org/IFuneralServices/SavePackageServiceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Funeral.Web.FuneralServiceReference.FuneralServiceFault), Action="http://tempuri.org/IFuneralServices/SavePackageServiceFuneralServiceFaultFault", Name="FuneralServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Funeral.Services")]
        int SavePackageService(Funeral.Model.PackageServiceModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SavePackageService", ReplyAction="http://tempuri.org/IFuneralServices/SavePackageServiceResponse")]
        System.Threading.Tasks.Task<int> SavePackageServiceAsync(Funeral.Model.PackageServiceModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/DeletePackageService", ReplyAction="http://tempuri.org/IFuneralServices/DeletePackageServiceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Funeral.Web.FuneralServiceReference.FuneralServiceFault), Action="http://tempuri.org/IFuneralServices/DeletePackageServiceFuneralServiceFaultFault", Name="FuneralServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Funeral.Services")]
        void DeletePackageService(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/DeletePackageService", ReplyAction="http://tempuri.org/IFuneralServices/DeletePackageServiceResponse")]
        System.Threading.Tasks.Task DeletePackageServiceAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetPackageServiceByPackgeId", ReplyAction="http://tempuri.org/IFuneralServices/GetPackageServiceByPackgeIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Funeral.Web.FuneralServiceReference.FuneralServiceFault), Action="http://tempuri.org/IFuneralServices/GetPackageServiceByPackgeIdFuneralServiceFaul" +
            "tFault", Name="FuneralServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Funeral.Services")]
        Funeral.Model.PackageServicesSelectionModel[] GetPackageServiceByPackgeId(System.Guid ParlourId, int PackgeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetPackageServiceByPackgeId", ReplyAction="http://tempuri.org/IFuneralServices/GetPackageServiceByPackgeIdResponse")]
        System.Threading.Tasks.Task<Funeral.Model.PackageServicesSelectionModel[]> GetPackageServiceByPackgeIdAsync(System.Guid ParlourId, int PackgeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetTombstoneAllPackage", ReplyAction="http://tempuri.org/IFuneralServices/GetTombstoneAllPackageResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Funeral.Web.FuneralServiceReference.FuneralServiceFault), Action="http://tempuri.org/IFuneralServices/GetTombstoneAllPackageFuneralServiceFaultFaul" +
            "t", Name="FuneralServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Funeral.Services")]
        Funeral.Model.TombstonePackageModel[] GetTombstoneAllPackage(System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetTombstoneAllPackage", ReplyAction="http://tempuri.org/IFuneralServices/GetTombstoneAllPackageResponse")]
        System.Threading.Tasks.Task<Funeral.Model.TombstonePackageModel[]> GetTombstoneAllPackageAsync(System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveTombstonePackage", ReplyAction="http://tempuri.org/IFuneralServices/SaveTombstonePackageResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Funeral.Web.FuneralServiceReference.FuneralServiceFault), Action="http://tempuri.org/IFuneralServices/SaveTombstonePackageFuneralServiceFaultFault", Name="FuneralServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Funeral.Services")]
        int SaveTombstonePackage(Funeral.Model.TombstonePackageModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveTombstonePackage", ReplyAction="http://tempuri.org/IFuneralServices/SaveTombstonePackageResponse")]
        System.Threading.Tasks.Task<int> SaveTombstonePackageAsync(Funeral.Model.TombstonePackageModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveTombstonePackageService", ReplyAction="http://tempuri.org/IFuneralServices/SaveTombstonePackageServiceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Funeral.Web.FuneralServiceReference.FuneralServiceFault), Action="http://tempuri.org/IFuneralServices/SaveTombstonePackageServiceFuneralServiceFaul" +
            "tFault", Name="FuneralServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Funeral.Services")]
        int SaveTombstonePackageService(Funeral.Model.TombstonePackageModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveTombstonePackageService", ReplyAction="http://tempuri.org/IFuneralServices/SaveTombstonePackageServiceResponse")]
        System.Threading.Tasks.Task<int> SaveTombstonePackageServiceAsync(Funeral.Model.TombstonePackageModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/DeleteTombstonePackageService", ReplyAction="http://tempuri.org/IFuneralServices/DeleteTombstonePackageServiceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Funeral.Web.FuneralServiceReference.FuneralServiceFault), Action="http://tempuri.org/IFuneralServices/DeleteTombstonePackageServiceFuneralServiceFa" +
            "ultFault", Name="FuneralServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Funeral.Services")]
        void DeleteTombstonePackageService(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/DeleteTombstonePackageService", ReplyAction="http://tempuri.org/IFuneralServices/DeleteTombstonePackageServiceResponse")]
        System.Threading.Tasks.Task DeleteTombstonePackageServiceAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetTombstonePackageServiceByPackgeId", ReplyAction="http://tempuri.org/IFuneralServices/GetTombstonePackageServiceByPackgeIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Funeral.Web.FuneralServiceReference.FuneralServiceFault), Action="http://tempuri.org/IFuneralServices/GetTombstonePackageServiceByPackgeIdFuneralSe" +
            "rviceFaultFault", Name="FuneralServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Funeral.Services")]
        Funeral.Model.TombstonePackageModel[] GetTombstonePackageServiceByPackgeId(System.Guid ParlourId, int PackgeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetTombstonePackageServiceByPackgeId", ReplyAction="http://tempuri.org/IFuneralServices/GetTombstonePackageServiceByPackgeIdResponse")]
        System.Threading.Tasks.Task<Funeral.Model.TombstonePackageModel[]> GetTombstonePackageServiceByPackgeIdAsync(System.Guid ParlourId, int PackgeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/DeletePackage", ReplyAction="http://tempuri.org/IFuneralServices/DeletePackageResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Funeral.Web.FuneralServiceReference.FuneralServiceFault), Action="http://tempuri.org/IFuneralServices/DeletePackageFuneralServiceFaultFault", Name="FuneralServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Funeral.Services")]
        void DeletePackage(int Id, System.Guid parlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/DeletePackage", ReplyAction="http://tempuri.org/IFuneralServices/DeletePackageResponse")]
        System.Threading.Tasks.Task DeletePackageAsync(int Id, System.Guid parlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/JoiningFees", ReplyAction="http://tempuri.org/IFuneralServices/JoiningFeesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Funeral.Web.FuneralServiceReference.FuneralServiceFault), Action="http://tempuri.org/IFuneralServices/JoiningFeesFuneralServiceFaultFault", Name="FuneralServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Funeral.Services")]
        Funeral.Model.JoiningFeeModel JoiningFees(int memberId, System.Guid parlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/JoiningFees", ReplyAction="http://tempuri.org/IFuneralServices/JoiningFeesResponse")]
        System.Threading.Tasks.Task<Funeral.Model.JoiningFeeModel> JoiningFeesAsync(int memberId, System.Guid parlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveCustomDetails", ReplyAction="http://tempuri.org/IFuneralServices/SaveCustomDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Funeral.Web.FuneralServiceReference.FuneralServiceFault), Action="http://tempuri.org/IFuneralServices/SaveCustomDetailsFuneralServiceFaultFault", Name="FuneralServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Funeral.Services")]
        int SaveCustomDetails(Funeral.Model.CustomDetails model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveCustomDetails", ReplyAction="http://tempuri.org/IFuneralServices/SaveCustomDetailsResponse")]
        System.Threading.Tasks.Task<int> SaveCustomDetailsAsync(Funeral.Model.CustomDetails model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/UpdateCustomDetails", ReplyAction="http://tempuri.org/IFuneralServices/UpdateCustomDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Funeral.Web.FuneralServiceReference.FuneralServiceFault), Action="http://tempuri.org/IFuneralServices/UpdateCustomDetailsFuneralServiceFaultFault", Name="FuneralServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Funeral.Services")]
        void UpdateCustomDetails(Funeral.Model.CustomDetails model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/UpdateCustomDetails", ReplyAction="http://tempuri.org/IFuneralServices/UpdateCustomDetailsResponse")]
        System.Threading.Tasks.Task UpdateCustomDetailsAsync(Funeral.Model.CustomDetails model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetCustomDetails", ReplyAction="http://tempuri.org/IFuneralServices/GetCustomDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Funeral.Web.FuneralServiceReference.FuneralServiceFault), Action="http://tempuri.org/IFuneralServices/GetCustomDetailsFuneralServiceFaultFault", Name="FuneralServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Funeral.Services")]
        Funeral.Model.CustomDetails GetCustomDetails(System.Guid ParlourId, int Id, int CustomType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetCustomDetails", ReplyAction="http://tempuri.org/IFuneralServices/GetCustomDetailsResponse")]
        System.Threading.Tasks.Task<Funeral.Model.CustomDetails> GetCustomDetailsAsync(System.Guid ParlourId, int Id, int CustomType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetAllCustomDetailsByParlourId", ReplyAction="http://tempuri.org/IFuneralServices/GetAllCustomDetailsByParlourIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Funeral.Web.FuneralServiceReference.FuneralServiceFault), Action="http://tempuri.org/IFuneralServices/GetAllCustomDetailsByParlourIdFuneralServiceF" +
            "aultFault", Name="FuneralServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Funeral.Services")]
        Funeral.Model.CustomDetails[] GetAllCustomDetailsByParlourId(System.Guid ParlourId, int CustomType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetAllCustomDetailsByParlourId", ReplyAction="http://tempuri.org/IFuneralServices/GetAllCustomDetailsByParlourIdResponse")]
        System.Threading.Tasks.Task<Funeral.Model.CustomDetails[]> GetAllCustomDetailsByParlourIdAsync(System.Guid ParlourId, int CustomType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/DeleteCustomDetails", ReplyAction="http://tempuri.org/IFuneralServices/DeleteCustomDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Funeral.Web.FuneralServiceReference.FuneralServiceFault), Action="http://tempuri.org/IFuneralServices/DeleteCustomDetailsFuneralServiceFaultFault", Name="FuneralServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Funeral.Services")]
        void DeleteCustomDetails(Funeral.Model.CustomDetails model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/DeleteCustomDetails", ReplyAction="http://tempuri.org/IFuneralServices/DeleteCustomDetailsResponse")]
        System.Threading.Tasks.Task DeleteCustomDetailsAsync(Funeral.Model.CustomDetails model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/tblRightGetAll", ReplyAction="http://tempuri.org/IFuneralServices/tblRightGetAllResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Funeral.Web.FuneralServiceReference.FuneralServiceFault), Action="http://tempuri.org/IFuneralServices/tblRightGetAllFuneralServiceFaultFault", Name="FuneralServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Funeral.Services")]
        Funeral.Model.RightsModel[] tblRightGetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/tblRightGetAll", ReplyAction="http://tempuri.org/IFuneralServices/tblRightGetAllResponse")]
        System.Threading.Tasks.Task<Funeral.Model.RightsModel[]> tblRightGetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SavetblRight", ReplyAction="http://tempuri.org/IFuneralServices/SavetblRightResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Funeral.Web.FuneralServiceReference.FuneralServiceFault), Action="http://tempuri.org/IFuneralServices/SavetblRightFuneralServiceFaultFault", Name="FuneralServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Funeral.Services")]
        int SavetblRight(Funeral.Model.RightsModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SavetblRight", ReplyAction="http://tempuri.org/IFuneralServices/SavetblRightResponse")]
        System.Threading.Tasks.Task<int> SavetblRightAsync(Funeral.Model.RightsModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelecttblRightById", ReplyAction="http://tempuri.org/IFuneralServices/SelecttblRightByIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Funeral.Web.FuneralServiceReference.FuneralServiceFault), Action="http://tempuri.org/IFuneralServices/SelecttblRightByIdFuneralServiceFaultFault", Name="FuneralServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Funeral.Services")]
        Funeral.Model.RightsModel SelecttblRightById(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelecttblRightById", ReplyAction="http://tempuri.org/IFuneralServices/SelecttblRightByIdResponse")]
        System.Threading.Tasks.Task<Funeral.Model.RightsModel> SelecttblRightByIdAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetRightsByGroupId", ReplyAction="http://tempuri.org/IFuneralServices/GetRightsByGroupIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Funeral.Web.FuneralServiceReference.FuneralServiceFault), Action="http://tempuri.org/IFuneralServices/GetRightsByGroupIdFuneralServiceFaultFault", Name="FuneralServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Funeral.Services")]
        Funeral.Model.NewRightsModel[] GetRightsByGroupId(System.Guid ParlourId, int GroupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetRightsByGroupId", ReplyAction="http://tempuri.org/IFuneralServices/GetRightsByGroupIdResponse")]
        System.Threading.Tasks.Task<Funeral.Model.NewRightsModel[]> GetRightsByGroupIdAsync(System.Guid ParlourId, int GroupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetAllActiveTblPages", ReplyAction="http://tempuri.org/IFuneralServices/GetAllActiveTblPagesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Funeral.Web.FuneralServiceReference.FuneralServiceFault), Action="http://tempuri.org/IFuneralServices/GetAllActiveTblPagesFuneralServiceFaultFault", Name="FuneralServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Funeral.Services")]
        Funeral.Model.tblPageModel[] GetAllActiveTblPages();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetAllActiveTblPages", ReplyAction="http://tempuri.org/IFuneralServices/GetAllActiveTblPagesResponse")]
        System.Threading.Tasks.Task<Funeral.Model.tblPageModel[]> GetAllActiveTblPagesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveTblRights", ReplyAction="http://tempuri.org/IFuneralServices/SaveTblRightsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Funeral.Web.FuneralServiceReference.FuneralServiceFault), Action="http://tempuri.org/IFuneralServices/SaveTblRightsFuneralServiceFaultFault", Name="FuneralServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Funeral.Services")]
        int SaveTblRights(Funeral.Model.NewRightsModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveTblRights", ReplyAction="http://tempuri.org/IFuneralServices/SaveTblRightsResponse")]
        System.Threading.Tasks.Task<int> SaveTblRightsAsync(Funeral.Model.NewRightsModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/LoadSideMenu", ReplyAction="http://tempuri.org/IFuneralServices/LoadSideMenuResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Funeral.Web.FuneralServiceReference.FuneralServiceFault), Action="http://tempuri.org/IFuneralServices/LoadSideMenuFuneralServiceFaultFault", Name="FuneralServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Funeral.Services")]
        Funeral.Model.tblPageModel[] LoadSideMenu(System.Guid ParlourId, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/LoadSideMenu", ReplyAction="http://tempuri.org/IFuneralServices/LoadSideMenuResponse")]
        System.Threading.Tasks.Task<Funeral.Model.tblPageModel[]> LoadSideMenuAsync(System.Guid ParlourId, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/OtherPaymentsSave", ReplyAction="http://tempuri.org/IFuneralServices/OtherPaymentsSaveResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Funeral.Web.FuneralServiceReference.FuneralServiceFault), Action="http://tempuri.org/IFuneralServices/OtherPaymentsSaveFuneralServiceFaultFault", Name="FuneralServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Funeral.Services")]
        int OtherPaymentsSave(Funeral.Model.OtherPaymentModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/OtherPaymentsSave", ReplyAction="http://tempuri.org/IFuneralServices/OtherPaymentsSaveResponse")]
        System.Threading.Tasks.Task<int> OtherPaymentsSaveAsync(Funeral.Model.OtherPaymentModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/OtherPaymentSelectByMemberId", ReplyAction="http://tempuri.org/IFuneralServices/OtherPaymentSelectByMemberIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Funeral.Web.FuneralServiceReference.FuneralServiceFault), Action="http://tempuri.org/IFuneralServices/OtherPaymentSelectByMemberIdFuneralServiceFau" +
            "ltFault", Name="FuneralServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Funeral.Services")]
        Funeral.Model.OtherPaymentModel[] OtherPaymentSelectByMemberId(int MemberId, System.Guid Parlourid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/OtherPaymentSelectByMemberId", ReplyAction="http://tempuri.org/IFuneralServices/OtherPaymentSelectByMemberIdResponse")]
        System.Threading.Tasks.Task<Funeral.Model.OtherPaymentModel[]> OtherPaymentSelectByMemberIdAsync(int MemberId, System.Guid Parlourid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetOtherPayment", ReplyAction="http://tempuri.org/IFuneralServices/GetOtherPaymentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Funeral.Web.FuneralServiceReference.FuneralServiceFault), Action="http://tempuri.org/IFuneralServices/GetOtherPaymentFuneralServiceFaultFault", Name="FuneralServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Funeral.Services")]
        Funeral.Model.OtherPaymentModel GetOtherPayment(int InvoiceId, System.Guid Parlourid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetOtherPayment", ReplyAction="http://tempuri.org/IFuneralServices/GetOtherPaymentResponse")]
        System.Threading.Tasks.Task<Funeral.Model.OtherPaymentModel> GetOtherPaymentAsync(int InvoiceId, System.Guid Parlourid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectAllUnderwriterByParlourId", ReplyAction="http://tempuri.org/IFuneralServices/SelectAllUnderwriterByParlourIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Funeral.Web.FuneralServiceReference.FuneralServiceFault), Action="http://tempuri.org/IFuneralServices/SelectAllUnderwriterByParlourIdFuneralService" +
            "FaultFault", Name="FuneralServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Funeral.Services")]
        Funeral.Model.UnderwriterModel[] SelectAllUnderwriterByParlourId(System.Guid ParlourId, int PageSize, int PageNum, string Keyword, string SortBy, string SortOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectAllUnderwriterByParlourId", ReplyAction="http://tempuri.org/IFuneralServices/SelectAllUnderwriterByParlourIdResponse")]
        System.Threading.Tasks.Task<Funeral.Model.UnderwriterModel[]> SelectAllUnderwriterByParlourIdAsync(System.Guid ParlourId, int PageSize, int PageNum, string Keyword, string SortBy, string SortOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveUnderwriter", ReplyAction="http://tempuri.org/IFuneralServices/SaveUnderwriterResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Funeral.Web.FuneralServiceReference.FuneralServiceFault), Action="http://tempuri.org/IFuneralServices/SaveUnderwriterFuneralServiceFaultFault", Name="FuneralServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Funeral.Services")]
        int SaveUnderwriter(Funeral.Model.UnderwriterModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveUnderwriter", ReplyAction="http://tempuri.org/IFuneralServices/SaveUnderwriterResponse")]
        System.Threading.Tasks.Task<int> SaveUnderwriterAsync(Funeral.Model.UnderwriterModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectUnderwriterBypkid", ReplyAction="http://tempuri.org/IFuneralServices/SelectUnderwriterBypkidResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Funeral.Web.FuneralServiceReference.FuneralServiceFault), Action="http://tempuri.org/IFuneralServices/SelectUnderwriterBypkidFuneralServiceFaultFau" +
            "lt", Name="FuneralServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Funeral.Services")]
        Funeral.Model.UnderwriterModel SelectUnderwriterBypkid(int ID, System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectUnderwriterBypkid", ReplyAction="http://tempuri.org/IFuneralServices/SelectUnderwriterBypkidResponse")]
        System.Threading.Tasks.Task<Funeral.Model.UnderwriterModel> SelectUnderwriterBypkidAsync(int ID, System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/DeleteUnderwriterByID", ReplyAction="http://tempuri.org/IFuneralServices/DeleteUnderwriterByIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Funeral.Web.FuneralServiceReference.FuneralServiceFault), Action="http://tempuri.org/IFuneralServices/DeleteUnderwriterByIDFuneralServiceFaultFault" +
            "", Name="FuneralServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Funeral.Services")]
        int DeleteUnderwriterByID(int PkiUnderwriterId, string UserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/DeleteUnderwriterByID", ReplyAction="http://tempuri.org/IFuneralServices/DeleteUnderwriterByIDResponse")]
        System.Threading.Tasks.Task<int> DeleteUnderwriterByIDAsync(int PkiUnderwriterId, string UserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectUnderwriterByName", ReplyAction="http://tempuri.org/IFuneralServices/SelectUnderwriterByNameResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Funeral.Web.FuneralServiceReference.FuneralServiceFault), Action="http://tempuri.org/IFuneralServices/SelectUnderwriterByNameFuneralServiceFaultFau" +
            "lt", Name="FuneralServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Funeral.Services")]
        Funeral.Model.UnderwriterModel SelectUnderwriterByName(string UnderwriterName, System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectUnderwriterByName", ReplyAction="http://tempuri.org/IFuneralServices/SelectUnderwriterByNameResponse")]
        System.Threading.Tasks.Task<Funeral.Model.UnderwriterModel> SelectUnderwriterByNameAsync(string UnderwriterName, System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectUnderwriterNotDeleted", ReplyAction="http://tempuri.org/IFuneralServices/SelectUnderwriterNotDeletedResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Funeral.Web.FuneralServiceReference.FuneralServiceFault), Action="http://tempuri.org/IFuneralServices/SelectUnderwriterNotDeletedFuneralServiceFaul" +
            "tFault", Name="FuneralServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Funeral.Services")]
        Funeral.Model.UnderwriterModel[] SelectUnderwriterNotDeleted();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectUnderwriterNotDeleted", ReplyAction="http://tempuri.org/IFuneralServices/SelectUnderwriterNotDeletedResponse")]
        System.Threading.Tasks.Task<Funeral.Model.UnderwriterModel[]> SelectUnderwriterNotDeletedAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetStatus", ReplyAction="http://tempuri.org/IFuneralServices/GetStatusResponse")]
        Funeral.Model.StatusModel[] GetStatus(string associatedTable);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetStatus", ReplyAction="http://tempuri.org/IFuneralServices/GetStatusResponse")]
        System.Threading.Tasks.Task<Funeral.Model.StatusModel[]> GetStatusAsync(string associatedTable);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/MemberStatusChangeReason", ReplyAction="http://tempuri.org/IFuneralServices/MemberStatusChangeReasonResponse")]
        void MemberStatusChangeReason(Funeral.Model.ChangeStatusReason model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/MemberStatusChangeReason", ReplyAction="http://tempuri.org/IFuneralServices/MemberStatusChangeReasonResponse")]
        System.Threading.Tasks.Task MemberStatusChangeReasonAsync(Funeral.Model.ChangeStatusReason model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/UpdateMemberStatus", ReplyAction="http://tempuri.org/IFuneralServices/UpdateMemberStatusResponse")]
        void UpdateMemberStatus(System.Guid parlourId, int id, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/UpdateMemberStatus", ReplyAction="http://tempuri.org/IFuneralServices/UpdateMemberStatusResponse")]
        System.Threading.Tasks.Task UpdateMemberStatusAsync(System.Guid parlourId, int id, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveOrderMember", ReplyAction="http://tempuri.org/IFuneralServices/SaveOrderMemberResponse")]
        void SaveOrderMember(Funeral.Model.MembersModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveOrderMember", ReplyAction="http://tempuri.org/IFuneralServices/SaveOrderMemberResponse")]
        System.Threading.Tasks.Task SaveOrderMemberAsync(Funeral.Model.MembersModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetDealershipsLookup", ReplyAction="http://tempuri.org/IFuneralServices/GetDealershipsLookupResponse")]
        Funeral.Model.DealershipLookupModel[] GetDealershipsLookup();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetDealershipsLookup", ReplyAction="http://tempuri.org/IFuneralServices/GetDealershipsLookupResponse")]
        System.Threading.Tasks.Task<Funeral.Model.DealershipLookupModel[]> GetDealershipsLookupAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetAllDealershipsLookup", ReplyAction="http://tempuri.org/IFuneralServices/GetAllDealershipsLookupResponse")]
        Funeral.Model.DealershipLookupModel[] GetAllDealershipsLookup();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetAllDealershipsLookup", ReplyAction="http://tempuri.org/IFuneralServices/GetAllDealershipsLookupResponse")]
        System.Threading.Tasks.Task<Funeral.Model.DealershipLookupModel[]> GetAllDealershipsLookupAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetStatusTypeLookup", ReplyAction="http://tempuri.org/IFuneralServices/GetStatusTypeLookupResponse")]
        Funeral.Model.StatusTypeLookupModel[] GetStatusTypeLookup();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetStatusTypeLookup", ReplyAction="http://tempuri.org/IFuneralServices/GetStatusTypeLookupResponse")]
        System.Threading.Tasks.Task<Funeral.Model.StatusTypeLookupModel[]> GetStatusTypeLookupAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetDealerTypeLookup", ReplyAction="http://tempuri.org/IFuneralServices/GetDealerTypeLookupResponse")]
        Funeral.Model.DealerTypeLookupModel[] GetDealerTypeLookup();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetDealerTypeLookup", ReplyAction="http://tempuri.org/IFuneralServices/GetDealerTypeLookupResponse")]
        System.Threading.Tasks.Task<Funeral.Model.DealerTypeLookupModel[]> GetDealerTypeLookupAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetProvinceDropDown", ReplyAction="http://tempuri.org/IFuneralServices/GetProvinceDropDownResponse")]
        Funeral.Model.ProvinceLookpmodel[] GetProvinceDropDown();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetProvinceDropDown", ReplyAction="http://tempuri.org/IFuneralServices/GetProvinceDropDownResponse")]
        System.Threading.Tasks.Task<Funeral.Model.ProvinceLookpmodel[]> GetProvinceDropDownAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetDealershipsDropDown", ReplyAction="http://tempuri.org/IFuneralServices/GetDealershipsDropDownResponse")]
        Funeral.Model.DealershipLookupModel[] GetDealershipsDropDown();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetDealershipsDropDown", ReplyAction="http://tempuri.org/IFuneralServices/GetDealershipsDropDownResponse")]
        System.Threading.Tasks.Task<Funeral.Model.DealershipLookupModel[]> GetDealershipsDropDownAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/DealerCommStatusDropDown", ReplyAction="http://tempuri.org/IFuneralServices/DealerCommStatusDropDownResponse")]
        Funeral.Model.DealerCommunicationStatusTypeModel[] DealerCommStatusDropDown();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/DealerCommStatusDropDown", ReplyAction="http://tempuri.org/IFuneralServices/DealerCommStatusDropDownResponse")]
        System.Threading.Tasks.Task<Funeral.Model.DealerCommunicationStatusTypeModel[]> DealerCommStatusDropDownAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/CheckDealershipExists", ReplyAction="http://tempuri.org/IFuneralServices/CheckDealershipExistsResponse")]
        string CheckDealershipExists(Funeral.Model.DealershipModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/CheckDealershipExists", ReplyAction="http://tempuri.org/IFuneralServices/CheckDealershipExistsResponse")]
        System.Threading.Tasks.Task<string> CheckDealershipExistsAsync(Funeral.Model.DealershipModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectDealer", ReplyAction="http://tempuri.org/IFuneralServices/SelectDealerResponse")]
        Funeral.Model.DealersViewModel SelectDealer(int DealerId, int PageSize, int PageNum, string Keyword, string SortBy, string SortOrder, string Username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectDealer", ReplyAction="http://tempuri.org/IFuneralServices/SelectDealerResponse")]
        System.Threading.Tasks.Task<Funeral.Model.DealersViewModel> SelectDealerAsync(int DealerId, int PageSize, int PageNum, string Keyword, string SortBy, string SortOrder, string Username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetDealersList", ReplyAction="http://tempuri.org/IFuneralServices/GetDealersListResponse")]
        Funeral.Model.DealersViewModel GetDealersList(string Username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetDealersList", ReplyAction="http://tempuri.org/IFuneralServices/GetDealersListResponse")]
        System.Threading.Tasks.Task<Funeral.Model.DealersViewModel> GetDealersListAsync(string Username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetDailyDealers", ReplyAction="http://tempuri.org/IFuneralServices/GetDailyDealersResponse")]
        Funeral.Model.DealersViewModel GetDailyDealers(string Username, string Date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetDailyDealers", ReplyAction="http://tempuri.org/IFuneralServices/GetDailyDealersResponse")]
        System.Threading.Tasks.Task<Funeral.Model.DealersViewModel> GetDailyDealersAsync(string Username, string Date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetDealerById", ReplyAction="http://tempuri.org/IFuneralServices/GetDealerByIdResponse")]
        Funeral.Model.DealerModel GetDealerById(int DealerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetDealerById", ReplyAction="http://tempuri.org/IFuneralServices/GetDealerByIdResponse")]
        System.Threading.Tasks.Task<Funeral.Model.DealerModel> GetDealerByIdAsync(int DealerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectAllDealerships", ReplyAction="http://tempuri.org/IFuneralServices/SelectAllDealershipsResponse")]
        Funeral.Model.DealershipViewModel SelectAllDealerships(string Username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectAllDealerships", ReplyAction="http://tempuri.org/IFuneralServices/SelectAllDealershipsResponse")]
        System.Threading.Tasks.Task<Funeral.Model.DealershipViewModel> SelectAllDealershipsAsync(string Username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectDealership", ReplyAction="http://tempuri.org/IFuneralServices/SelectDealershipResponse")]
        Funeral.Model.DealershipViewModel SelectDealership(int PageSize, int PageNum, string Keyword, string Username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectDealership", ReplyAction="http://tempuri.org/IFuneralServices/SelectDealershipResponse")]
        System.Threading.Tasks.Task<Funeral.Model.DealershipViewModel> SelectDealershipAsync(int PageSize, int PageNum, string Keyword, string Username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetDealerTotal", ReplyAction="http://tempuri.org/IFuneralServices/GetDealerTotalResponse")]
        string GetDealerTotal(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetDealerTotal", ReplyAction="http://tempuri.org/IFuneralServices/GetDealerTotalResponse")]
        System.Threading.Tasks.Task<string> GetDealerTotalAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectMemberAddonProducts", ReplyAction="http://tempuri.org/IFuneralServices/SelectMemberAddonProductsResponse")]
        Funeral.Model.MemberAddonProductsModel[] SelectMemberAddonProducts(int MemberID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectMemberAddonProducts", ReplyAction="http://tempuri.org/IFuneralServices/SelectMemberAddonProductsResponse")]
        System.Threading.Tasks.Task<Funeral.Model.MemberAddonProductsModel[]> SelectMemberAddonProductsAsync(int MemberID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/MemberAddonProductsRemove", ReplyAction="http://tempuri.org/IFuneralServices/MemberAddonProductsRemoveResponse")]
        void MemberAddonProductsRemove(System.Guid MemberID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/MemberAddonProductsRemove", ReplyAction="http://tempuri.org/IFuneralServices/MemberAddonProductsRemoveResponse")]
        System.Threading.Tasks.Task MemberAddonProductsRemoveAsync(System.Guid MemberID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/MemberListBindAddonProduct", ReplyAction="http://tempuri.org/IFuneralServices/MemberListBindAddonProductResponse")]
        Funeral.Model.AddonProductsModal[] MemberListBindAddonProduct(System.Guid pkiProductID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/MemberListBindAddonProduct", ReplyAction="http://tempuri.org/IFuneralServices/MemberListBindAddonProductResponse")]
        System.Threading.Tasks.Task<Funeral.Model.AddonProductsModal[]> MemberListBindAddonProductAsync(System.Guid pkiProductID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectMembarAddonProductBypkiMemberProductID", ReplyAction="http://tempuri.org/IFuneralServices/SelectMembarAddonProductBypkiMemberProductIDR" +
            "esponse")]
        Funeral.Model.MemberAddonProductsModel[] SelectMembarAddonProductBypkiMemberProductID(System.Guid MemberID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectMembarAddonProductBypkiMemberProductID", ReplyAction="http://tempuri.org/IFuneralServices/SelectMembarAddonProductBypkiMemberProductIDR" +
            "esponse")]
        System.Threading.Tasks.Task<Funeral.Model.MemberAddonProductsModel[]> SelectMembarAddonProductBypkiMemberProductIDAsync(System.Guid MemberID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/AddonProductUpdateMember", ReplyAction="http://tempuri.org/IFuneralServices/AddonProductUpdateMemberResponse")]
        int AddonProductUpdateMember(Funeral.Model.MemberAddonProductsModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/AddonProductUpdateMember", ReplyAction="http://tempuri.org/IFuneralServices/AddonProductUpdateMemberResponse")]
        System.Threading.Tasks.Task<int> AddonProductUpdateMemberAsync(Funeral.Model.MemberAddonProductsModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveSupportDocument", ReplyAction="http://tempuri.org/IFuneralServices/SaveSupportDocumentResponse")]
        int SaveSupportDocument(Funeral.Model.SupportedDocumentModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveSupportDocument", ReplyAction="http://tempuri.org/IFuneralServices/SaveSupportDocumentResponse")]
        System.Threading.Tasks.Task<int> SaveSupportDocumentAsync(Funeral.Model.SupportedDocumentModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectSupportDocumentsByMemberId", ReplyAction="http://tempuri.org/IFuneralServices/SelectSupportDocumentsByMemberIdResponse")]
        Funeral.Model.SupportedDocumentModel[] SelectSupportDocumentsByMemberId(int MemberID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectSupportDocumentsByMemberId", ReplyAction="http://tempuri.org/IFuneralServices/SelectSupportDocumentsByMemberIdResponse")]
        System.Threading.Tasks.Task<Funeral.Model.SupportedDocumentModel[]> SelectSupportDocumentsByMemberIdAsync(int MemberID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetAllFamilyDependencyTypes", ReplyAction="http://tempuri.org/IFuneralServices/GetAllFamilyDependencyTypesResponse")]
        Funeral.Model.FamilyDependencyTypeModel[] GetAllFamilyDependencyTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetAllFamilyDependencyTypes", ReplyAction="http://tempuri.org/IFuneralServices/GetAllFamilyDependencyTypesResponse")]
        System.Threading.Tasks.Task<Funeral.Model.FamilyDependencyTypeModel[]> GetAllFamilyDependencyTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveVehicle", ReplyAction="http://tempuri.org/IFuneralServices/SaveVehicleResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Funeral.Web.FuneralServiceReference.FuneralServiceFault), Action="http://tempuri.org/IFuneralServices/SaveVehicleFuneralServiceFaultFault", Name="FuneralServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Funeral.Services")]
        int SaveVehicle(Funeral.Model.VehiclesModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveVehicle", ReplyAction="http://tempuri.org/IFuneralServices/SaveVehicleResponse")]
        System.Threading.Tasks.Task<int> SaveVehicleAsync(Funeral.Model.VehiclesModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetVehicleByVinNo", ReplyAction="http://tempuri.org/IFuneralServices/GetVehicleByVinNoResponse")]
        Funeral.Model.VehiclesModel GetVehicleByVinNo(string VinNo, System.Guid ParlourId, int MemberID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetVehicleByVinNo", ReplyAction="http://tempuri.org/IFuneralServices/GetVehicleByVinNoResponse")]
        System.Threading.Tasks.Task<Funeral.Model.VehiclesModel> GetVehicleByVinNoAsync(string VinNo, System.Guid ParlourId, int MemberID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetVehicleByMemberID", ReplyAction="http://tempuri.org/IFuneralServices/GetVehicleByMemberIDResponse")]
        Funeral.Model.VehiclesModel[] GetVehicleByMemberID(int MemberId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetVehicleByMemberID", ReplyAction="http://tempuri.org/IFuneralServices/GetVehicleByMemberIDResponse")]
        System.Threading.Tasks.Task<Funeral.Model.VehiclesModel[]> GetVehicleByMemberIDAsync(int MemberId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/UpdateFamilyDependency", ReplyAction="http://tempuri.org/IFuneralServices/UpdateFamilyDependencyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Funeral.Web.FuneralServiceReference.FuneralServiceFault), Action="http://tempuri.org/IFuneralServices/UpdateFamilyDependencyFuneralServiceFaultFaul" +
            "t", Name="FuneralServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Funeral.Services")]
        int UpdateFamilyDependency(Funeral.Model.FamilyDependencyModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/UpdateFamilyDependency", ReplyAction="http://tempuri.org/IFuneralServices/UpdateFamilyDependencyResponse")]
        System.Threading.Tasks.Task<int> UpdateFamilyDependencyAsync(Funeral.Model.FamilyDependencyModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/UpdateVehicle", ReplyAction="http://tempuri.org/IFuneralServices/UpdateVehicleResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Funeral.Web.FuneralServiceReference.FuneralServiceFault), Action="http://tempuri.org/IFuneralServices/UpdateVehicleFuneralServiceFaultFault", Name="FuneralServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Funeral.Services")]
        int UpdateVehicle(Funeral.Model.VehiclesModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/UpdateVehicle", ReplyAction="http://tempuri.org/IFuneralServices/UpdateVehicleResponse")]
        System.Threading.Tasks.Task<int> UpdateVehicleAsync(Funeral.Model.VehiclesModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectVehicleByVehicleId", ReplyAction="http://tempuri.org/IFuneralServices/SelectVehicleByVehicleIdResponse")]
        Funeral.Model.VehiclesModel SelectVehicleByVehicleId(int pkiVehicleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectVehicleByVehicleId", ReplyAction="http://tempuri.org/IFuneralServices/SelectVehicleByVehicleIdResponse")]
        System.Threading.Tasks.Task<Funeral.Model.VehiclesModel> SelectVehicleByVehicleIdAsync(int pkiVehicleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectRelationship", ReplyAction="http://tempuri.org/IFuneralServices/SelectRelationshipResponse")]
        Funeral.Model.RelationShipModel[] SelectRelationship();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectRelationship", ReplyAction="http://tempuri.org/IFuneralServices/SelectRelationshipResponse")]
        System.Threading.Tasks.Task<Funeral.Model.RelationShipModel[]> SelectRelationshipAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/DeleteDependentById", ReplyAction="http://tempuri.org/IFuneralServices/DeleteDependentByIdResponse")]
        bool DeleteDependentById(int dependentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/DeleteDependentById", ReplyAction="http://tempuri.org/IFuneralServices/DeleteDependentByIdResponse")]
        System.Threading.Tasks.Task<bool> DeleteDependentByIdAsync(int dependentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/DeleteSUpportdocumentById", ReplyAction="http://tempuri.org/IFuneralServices/DeleteSUpportdocumentByIdResponse")]
        bool DeleteSUpportdocumentById(int DocumentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/DeleteSUpportdocumentById", ReplyAction="http://tempuri.org/IFuneralServices/DeleteSUpportdocumentByIdResponse")]
        System.Threading.Tasks.Task<bool> DeleteSUpportdocumentByIdAsync(int DocumentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetAllBank", ReplyAction="http://tempuri.org/IFuneralServices/GetAllBankResponse")]
        Funeral.Model.BankModel[] GetAllBank();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetAllBank", ReplyAction="http://tempuri.org/IFuneralServices/GetAllBankResponse")]
        System.Threading.Tasks.Task<Funeral.Model.BankModel[]> GetAllBankAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectBankByID", ReplyAction="http://tempuri.org/IFuneralServices/SelectBankByIDResponse")]
        Funeral.Model.BankModel SelectBankByID(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectBankByID", ReplyAction="http://tempuri.org/IFuneralServices/SelectBankByIDResponse")]
        System.Threading.Tasks.Task<Funeral.Model.BankModel> SelectBankByIDAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetLastBank", ReplyAction="http://tempuri.org/IFuneralServices/GetLastBankResponse")]
        Funeral.Model.BankModel[] GetLastBank();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetLastBank", ReplyAction="http://tempuri.org/IFuneralServices/GetLastBankResponse")]
        System.Threading.Tasks.Task<Funeral.Model.BankModel[]> GetLastBankAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetMemberNumber", ReplyAction="http://tempuri.org/IFuneralServices/GetMemberNumberResponse")]
        string GetMemberNumber(System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetMemberNumber", ReplyAction="http://tempuri.org/IFuneralServices/GetMemberNumberResponse")]
        System.Threading.Tasks.Task<string> GetMemberNumberAsync(System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/AccountTypeSelectAll", ReplyAction="http://tempuri.org/IFuneralServices/AccountTypeSelectAllResponse")]
        Funeral.Model.AccountTypeModel[] AccountTypeSelectAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/AccountTypeSelectAll", ReplyAction="http://tempuri.org/IFuneralServices/AccountTypeSelectAllResponse")]
        System.Threading.Tasks.Task<Funeral.Model.AccountTypeModel[]> AccountTypeSelectAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetCountry", ReplyAction="http://tempuri.org/IFuneralServices/GetCountryResponse")]
        Funeral.Model.CountryModel[] GetCountry();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetCountry", ReplyAction="http://tempuri.org/IFuneralServices/GetCountryResponse")]
        System.Threading.Tasks.Task<Funeral.Model.CountryModel[]> GetCountryAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SumPremium", ReplyAction="http://tempuri.org/IFuneralServices/SumPremiumResponse")]
        double SumPremium(int fkiMemberid, System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SumPremium", ReplyAction="http://tempuri.org/IFuneralServices/SumPremiumResponse")]
        System.Threading.Tasks.Task<double> SumPremiumAsync(int fkiMemberid, System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetAllPayentMembers", ReplyAction="http://tempuri.org/IFuneralServices/GetAllPayentMembersResponse")]
        Funeral.Model.MembersPaymentViewModel GetAllPayentMembers(System.Guid ParlourId, string PolicyNo, string IDNumber, int PageSize, int PageNum, string SortBy, string SortOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetAllPayentMembers", ReplyAction="http://tempuri.org/IFuneralServices/GetAllPayentMembersResponse")]
        System.Threading.Tasks.Task<Funeral.Model.MembersPaymentViewModel> GetAllPayentMembersAsync(System.Guid ParlourId, string PolicyNo, string IDNumber, int PageSize, int PageNum, string SortBy, string SortOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetMemberPaymnetDetailsByID", ReplyAction="http://tempuri.org/IFuneralServices/GetMemberPaymnetDetailsByIDResponse")]
        Funeral.Model.MembersPaymentDetailsModel GetMemberPaymnetDetailsByID(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetMemberPaymnetDetailsByID", ReplyAction="http://tempuri.org/IFuneralServices/GetMemberPaymnetDetailsByIDResponse")]
        System.Threading.Tasks.Task<Funeral.Model.MembersPaymentDetailsModel> GetMemberPaymnetDetailsByIDAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetMemberPlanDetailsWithBalance", ReplyAction="http://tempuri.org/IFuneralServices/GetMemberPlanDetailsWithBalanceResponse")]
        Funeral.Model.MembersPaymentDetailsModel GetMemberPlanDetailsWithBalance(string MemberNo, System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetMemberPlanDetailsWithBalance", ReplyAction="http://tempuri.org/IFuneralServices/GetMemberPlanDetailsWithBalanceResponse")]
        System.Threading.Tasks.Task<Funeral.Model.MembersPaymentDetailsModel> GetMemberPlanDetailsWithBalanceAsync(string MemberNo, System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetMemberPlanDetailsWithByMemberNo", ReplyAction="http://tempuri.org/IFuneralServices/GetMemberPlanDetailsWithByMemberNoResponse")]
        Funeral.Model.MembersPaymentDetailsModel GetMemberPlanDetailsWithByMemberNo(string MemberNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetMemberPlanDetailsWithByMemberNo", ReplyAction="http://tempuri.org/IFuneralServices/GetMemberPlanDetailsWithByMemberNoResponse")]
        System.Threading.Tasks.Task<Funeral.Model.MembersPaymentDetailsModel> GetMemberPlanDetailsWithByMemberNoAsync(string MemberNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/AddPayments", ReplyAction="http://tempuri.org/IFuneralServices/AddPaymentsResponse")]
        int AddPayments(Funeral.Model.MembersPaymentDetailsModel model, bool IsJoiningFee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/AddPayments", ReplyAction="http://tempuri.org/IFuneralServices/AddPaymentsResponse")]
        System.Threading.Tasks.Task<int> AddPaymentsAsync(Funeral.Model.MembersPaymentDetailsModel model, bool IsJoiningFee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/AddReversalPayments", ReplyAction="http://tempuri.org/IFuneralServices/AddReversalPaymentsResponse")]
        int AddReversalPayments(int InvoiceId, string UserId, System.Guid Parlourid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/AddReversalPayments", ReplyAction="http://tempuri.org/IFuneralServices/AddReversalPaymentsResponse")]
        System.Threading.Tasks.Task<int> AddReversalPaymentsAsync(int InvoiceId, string UserId, System.Guid Parlourid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/AddFuneralPayments", ReplyAction="http://tempuri.org/IFuneralServices/AddFuneralPaymentsResponse")]
        int AddFuneralPayments(Funeral.Model.FuneralPaymentsModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/AddFuneralPayments", ReplyAction="http://tempuri.org/IFuneralServices/AddFuneralPaymentsResponse")]
        System.Threading.Tasks.Task<int> AddFuneralPaymentsAsync(Funeral.Model.FuneralPaymentsModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/ReturnFuneralPayments", ReplyAction="http://tempuri.org/IFuneralServices/ReturnFuneralPaymentsResponse")]
        Funeral.Model.FuneralPaymentsModel[] ReturnFuneralPayments(System.Guid parlourid, string pIntFnrlID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/ReturnFuneralPayments", ReplyAction="http://tempuri.org/IFuneralServices/ReturnFuneralPaymentsResponse")]
        System.Threading.Tasks.Task<Funeral.Model.FuneralPaymentsModel[]> ReturnFuneralPaymentsAsync(System.Guid parlourid, string pIntFnrlID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/ReturnMemberPayment", ReplyAction="http://tempuri.org/IFuneralServices/ReturnMemberPaymentResponse")]
        Funeral.Model.FuneralPaymentsModel[] ReturnMemberPayment(string intMemberID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/ReturnMemberPayment", ReplyAction="http://tempuri.org/IFuneralServices/ReturnMemberPaymentResponse")]
        System.Threading.Tasks.Task<Funeral.Model.FuneralPaymentsModel[]> ReturnMemberPaymentAsync(string intMemberID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetDistinctPolicyStatusList", ReplyAction="http://tempuri.org/IFuneralServices/GetDistinctPolicyStatusListResponse")]
        string[] GetDistinctPolicyStatusList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetDistinctPolicyStatusList", ReplyAction="http://tempuri.org/IFuneralServices/GetDistinctPolicyStatusListResponse")]
        System.Threading.Tasks.Task<string[]> GetDistinctPolicyStatusListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetAllAgent", ReplyAction="http://tempuri.org/IFuneralServices/GetAllAgentResponse")]
        Funeral.Model.AgentModel[] GetAllAgent(System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetAllAgent", ReplyAction="http://tempuri.org/IFuneralServices/GetAllAgentResponse")]
        System.Threading.Tasks.Task<Funeral.Model.AgentModel[]> GetAllAgentAsync(System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/InsertSendReminder", ReplyAction="http://tempuri.org/IFuneralServices/InsertSendReminderResponse")]
        int InsertSendReminder(Funeral.Model.SendReminderModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/InsertSendReminder", ReplyAction="http://tempuri.org/IFuneralServices/InsertSendReminderResponse")]
        System.Threading.Tasks.Task<int> InsertSendReminderAsync(Funeral.Model.SendReminderModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveQuotation", ReplyAction="http://tempuri.org/IFuneralServices/SaveQuotationResponse")]
        int SaveQuotation(Funeral.Model.QuotationModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveQuotation", ReplyAction="http://tempuri.org/IFuneralServices/SaveQuotationResponse")]
        System.Threading.Tasks.Task<int> SaveQuotationAsync(Funeral.Model.QuotationModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/UpdateQuotation", ReplyAction="http://tempuri.org/IFuneralServices/UpdateQuotationResponse")]
        int UpdateQuotation(Funeral.Model.QuotationModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/UpdateQuotation", ReplyAction="http://tempuri.org/IFuneralServices/UpdateQuotationResponse")]
        System.Threading.Tasks.Task<int> UpdateQuotationAsync(Funeral.Model.QuotationModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/DeleteQuotation", ReplyAction="http://tempuri.org/IFuneralServices/DeleteQuotationResponse")]
        int DeleteQuotation(int ID, string UserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/DeleteQuotation", ReplyAction="http://tempuri.org/IFuneralServices/DeleteQuotationResponse")]
        System.Threading.Tasks.Task<int> DeleteQuotationAsync(int ID, string UserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectQuotationByQuotationId", ReplyAction="http://tempuri.org/IFuneralServices/SelectQuotationByQuotationIdResponse")]
        Funeral.Model.QuotationModel SelectQuotationByQuotationId(int ID, System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectQuotationByQuotationId", ReplyAction="http://tempuri.org/IFuneralServices/SelectQuotationByQuotationIdResponse")]
        System.Threading.Tasks.Task<Funeral.Model.QuotationModel> SelectQuotationByQuotationIdAsync(int ID, System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetAllQuotationByParlourId", ReplyAction="http://tempuri.org/IFuneralServices/GetAllQuotationByParlourIdResponse")]
        Funeral.Model.QuotationModel[] GetAllQuotationByParlourId(System.Guid ParlourId, int PageSize, int PageNum, string Keyword, string SortBy, string SortOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetAllQuotationByParlourId", ReplyAction="http://tempuri.org/IFuneralServices/GetAllQuotationByParlourIdResponse")]
        System.Threading.Tasks.Task<Funeral.Model.QuotationModel[]> GetAllQuotationByParlourIdAsync(System.Guid ParlourId, int PageSize, int PageNum, string Keyword, string SortBy, string SortOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetQuotationNumberByID", ReplyAction="http://tempuri.org/IFuneralServices/GetQuotationNumberByIDResponse")]
        Funeral.Model.QuotationModel[] GetQuotationNumberByID(System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetQuotationNumberByID", ReplyAction="http://tempuri.org/IFuneralServices/GetQuotationNumberByIDResponse")]
        System.Threading.Tasks.Task<Funeral.Model.QuotationModel[]> GetQuotationNumberByIDAsync(System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetAllQuotationServices", ReplyAction="http://tempuri.org/IFuneralServices/GetAllQuotationServicesResponse")]
        Funeral.Model.QuotationServicesModel[] GetAllQuotationServices(System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetAllQuotationServices", ReplyAction="http://tempuri.org/IFuneralServices/GetAllQuotationServicesResponse")]
        System.Threading.Tasks.Task<Funeral.Model.QuotationServicesModel[]> GetAllQuotationServicesAsync(System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetServiceByID", ReplyAction="http://tempuri.org/IFuneralServices/GetServiceByIDResponse")]
        Funeral.Model.QuotationServicesModel GetServiceByID(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetServiceByID", ReplyAction="http://tempuri.org/IFuneralServices/GetServiceByIDResponse")]
        System.Threading.Tasks.Task<Funeral.Model.QuotationServicesModel> GetServiceByIDAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveService", ReplyAction="http://tempuri.org/IFuneralServices/SaveServiceResponse")]
        int SaveService(Funeral.Model.QuotationServicesModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveService", ReplyAction="http://tempuri.org/IFuneralServices/SaveServiceResponse")]
        System.Threading.Tasks.Task<int> SaveServiceAsync(Funeral.Model.QuotationServicesModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectServiceByQoutationID", ReplyAction="http://tempuri.org/IFuneralServices/SelectServiceByQoutationIDResponse")]
        Funeral.Model.QuotationServicesModel[] SelectServiceByQoutationID(int QuotationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectServiceByQoutationID", ReplyAction="http://tempuri.org/IFuneralServices/SelectServiceByQoutationIDResponse")]
        System.Threading.Tasks.Task<Funeral.Model.QuotationServicesModel[]> SelectServiceByQoutationIDAsync(int QuotationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/DeleteServiceByID", ReplyAction="http://tempuri.org/IFuneralServices/DeleteServiceByIDResponse")]
        int DeleteServiceByID(int pkiQuotationSelectionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/DeleteServiceByID", ReplyAction="http://tempuri.org/IFuneralServices/DeleteServiceByIDResponse")]
        System.Threading.Tasks.Task<int> DeleteServiceByIDAsync(int pkiQuotationSelectionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetQuotationNumberByID2", ReplyAction="http://tempuri.org/IFuneralServices/GetQuotationNumberByID2Response")]
        Funeral.Model.QuotationModel GetQuotationNumberByID2(System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetQuotationNumberByID2", ReplyAction="http://tempuri.org/IFuneralServices/GetQuotationNumberByID2Response")]
        System.Threading.Tasks.Task<Funeral.Model.QuotationModel> GetQuotationNumberByID2Async(System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/UpdateAllData", ReplyAction="http://tempuri.org/IFuneralServices/UpdateAllDataResponse")]
        int UpdateAllData(int QuotationID, string Notes, string QuotationNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/UpdateAllData", ReplyAction="http://tempuri.org/IFuneralServices/UpdateAllDataResponse")]
        System.Threading.Tasks.Task<int> UpdateAllDataAsync(int QuotationID, string Notes, string QuotationNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveDiscountAndAmount", ReplyAction="http://tempuri.org/IFuneralServices/SaveDiscountAndAmountResponse")]
        int SaveDiscountAndAmount(Funeral.Model.QuotationDiscountModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveDiscountAndAmount", ReplyAction="http://tempuri.org/IFuneralServices/SaveDiscountAndAmountResponse")]
        System.Threading.Tasks.Task<int> SaveDiscountAndAmountAsync(Funeral.Model.QuotationDiscountModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetAllQuotationDiscounts", ReplyAction="http://tempuri.org/IFuneralServices/GetAllQuotationDiscountsResponse")]
        Funeral.Model.QuotationDiscountModel GetAllQuotationDiscounts(int QuotationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetAllQuotationDiscounts", ReplyAction="http://tempuri.org/IFuneralServices/GetAllQuotationDiscountsResponse")]
        System.Threading.Tasks.Task<Funeral.Model.QuotationDiscountModel> GetAllQuotationDiscountsAsync(int QuotationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectServiceByQouAndID", ReplyAction="http://tempuri.org/IFuneralServices/SelectServiceByQouAndIDResponse")]
        Funeral.Model.QuotationServicesModel SelectServiceByQouAndID(int QuotationID, int pkiQuotationSelectionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectServiceByQouAndID", ReplyAction="http://tempuri.org/IFuneralServices/SelectServiceByQouAndIDResponse")]
        System.Threading.Tasks.Task<Funeral.Model.QuotationServicesModel> SelectServiceByQouAndIDAsync(int QuotationID, int pkiQuotationSelectionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveQuotationMessage", ReplyAction="http://tempuri.org/IFuneralServices/SaveQuotationMessageResponse")]
        int SaveQuotationMessage(Funeral.Model.QuotationMessageModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveQuotationMessage", ReplyAction="http://tempuri.org/IFuneralServices/SaveQuotationMessageResponse")]
        System.Threading.Tasks.Task<int> SaveQuotationMessageAsync(Funeral.Model.QuotationMessageModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectQuotationMessageByID", ReplyAction="http://tempuri.org/IFuneralServices/SelectQuotationMessageByIDResponse")]
        Funeral.Model.QuotationMessageModel SelectQuotationMessageByID(int QuotationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectQuotationMessageByID", ReplyAction="http://tempuri.org/IFuneralServices/SelectQuotationMessageByIDResponse")]
        System.Threading.Tasks.Task<Funeral.Model.QuotationMessageModel> SelectQuotationMessageByIDAsync(int QuotationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveQuotationTaxAndDiscount", ReplyAction="http://tempuri.org/IFuneralServices/SaveQuotationTaxAndDiscountResponse")]
        int SaveQuotationTaxAndDiscount(int QuotationID, decimal Tax, decimal Discount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveQuotationTaxAndDiscount", ReplyAction="http://tempuri.org/IFuneralServices/SaveQuotationTaxAndDiscountResponse")]
        System.Threading.Tasks.Task<int> SaveQuotationTaxAndDiscountAsync(int QuotationID, decimal Tax, decimal Discount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/QuotationStatus", ReplyAction="http://tempuri.org/IFuneralServices/QuotationStatusResponse")]
        int QuotationStatus(int QuotationID, System.Guid parlourid, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/QuotationStatus", ReplyAction="http://tempuri.org/IFuneralServices/QuotationStatusResponse")]
        System.Threading.Tasks.Task<int> QuotationStatusAsync(int QuotationID, System.Guid parlourid, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectAllFuneralByParlourId", ReplyAction="http://tempuri.org/IFuneralServices/SelectAllFuneralByParlourIdResponse")]
        Funeral.Model.FuneralModel[] SelectAllFuneralByParlourId(System.Guid ParlourId, int PageSize, int PageNum, string Keyword, string SortBy, string SortOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectAllFuneralByParlourId", ReplyAction="http://tempuri.org/IFuneralServices/SelectAllFuneralByParlourIdResponse")]
        System.Threading.Tasks.Task<Funeral.Model.FuneralModel[]> SelectAllFuneralByParlourIdAsync(System.Guid ParlourId, int PageSize, int PageNum, string Keyword, string SortBy, string SortOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/FuneralDelete", ReplyAction="http://tempuri.org/IFuneralServices/FuneralDeleteResponse")]
        int FuneralDelete(int ID, string UserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/FuneralDelete", ReplyAction="http://tempuri.org/IFuneralServices/FuneralDeleteResponse")]
        System.Threading.Tasks.Task<int> FuneralDeleteAsync(int ID, string UserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveFuneral", ReplyAction="http://tempuri.org/IFuneralServices/SaveFuneralResponse")]
        int SaveFuneral(Funeral.Model.FuneralModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveFuneral", ReplyAction="http://tempuri.org/IFuneralServices/SaveFuneralResponse")]
        System.Threading.Tasks.Task<int> SaveFuneralAsync(Funeral.Model.FuneralModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectFuneralBypkid", ReplyAction="http://tempuri.org/IFuneralServices/SelectFuneralBypkidResponse")]
        Funeral.Model.FuneralModel SelectFuneralBypkid(int ID, System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectFuneralBypkid", ReplyAction="http://tempuri.org/IFuneralServices/SelectFuneralBypkidResponse")]
        System.Threading.Tasks.Task<Funeral.Model.FuneralModel> SelectFuneralBypkidAsync(int ID, System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectFuneralByMemberNo", ReplyAction="http://tempuri.org/IFuneralServices/SelectFuneralByMemberNoResponse")]
        Funeral.Model.FuneralModel SelectFuneralByMemberNo(string MemberNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectFuneralByMemberNo", ReplyAction="http://tempuri.org/IFuneralServices/SelectFuneralByMemberNoResponse")]
        System.Threading.Tasks.Task<Funeral.Model.FuneralModel> SelectFuneralByMemberNoAsync(string MemberNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveFuneralService", ReplyAction="http://tempuri.org/IFuneralServices/SaveFuneralServiceResponse")]
        int SaveFuneralService(Funeral.Model.FuneralServiceSelectModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveFuneralService", ReplyAction="http://tempuri.org/IFuneralServices/SaveFuneralServiceResponse")]
        System.Threading.Tasks.Task<int> SaveFuneralServiceAsync(Funeral.Model.FuneralServiceSelectModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectServiceByFuneralID", ReplyAction="http://tempuri.org/IFuneralServices/SelectServiceByFuneralIDResponse")]
        Funeral.Model.FuneralServiceSelectModel[] SelectServiceByFuneralID(int fkiFuneralID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectServiceByFuneralID", ReplyAction="http://tempuri.org/IFuneralServices/SelectServiceByFuneralIDResponse")]
        System.Threading.Tasks.Task<Funeral.Model.FuneralServiceSelectModel[]> SelectServiceByFuneralIDAsync(int fkiFuneralID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectServiceByFunAndID", ReplyAction="http://tempuri.org/IFuneralServices/SelectServiceByFunAndIDResponse")]
        Funeral.Model.FuneralServiceSelectModel SelectServiceByFunAndID(int fkiFuneralID, int pkiFuneralServiceSelectionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectServiceByFunAndID", ReplyAction="http://tempuri.org/IFuneralServices/SelectServiceByFunAndIDResponse")]
        System.Threading.Tasks.Task<Funeral.Model.FuneralServiceSelectModel> SelectServiceByFunAndIDAsync(int fkiFuneralID, int pkiFuneralServiceSelectionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/DeleteFuneralServiceByID", ReplyAction="http://tempuri.org/IFuneralServices/DeleteFuneralServiceByIDResponse")]
        int DeleteFuneralServiceByID(int pkiFuneralServiceSelectionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/DeleteFuneralServiceByID", ReplyAction="http://tempuri.org/IFuneralServices/DeleteFuneralServiceByIDResponse")]
        System.Threading.Tasks.Task<int> DeleteFuneralServiceByIDAsync(int pkiFuneralServiceSelectionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetInvoiceNumberByID", ReplyAction="http://tempuri.org/IFuneralServices/GetInvoiceNumberByIDResponse")]
        Funeral.Model.FuneralModel GetInvoiceNumberByID(System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetInvoiceNumberByID", ReplyAction="http://tempuri.org/IFuneralServices/GetInvoiceNumberByIDResponse")]
        System.Threading.Tasks.Task<Funeral.Model.FuneralModel> GetInvoiceNumberByIDAsync(System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/UpdateAllFuneralData", ReplyAction="http://tempuri.org/IFuneralServices/UpdateAllFuneralDataResponse")]
        int UpdateAllFuneralData(int pkiFuneralID, string Notes, decimal DisCount, decimal Tax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/UpdateAllFuneralData", ReplyAction="http://tempuri.org/IFuneralServices/UpdateAllFuneralDataResponse")]
        System.Threading.Tasks.Task<int> UpdateAllFuneralDataAsync(int pkiFuneralID, string Notes, decimal DisCount, decimal Tax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveFuneralSupportedDocument", ReplyAction="http://tempuri.org/IFuneralServices/SaveFuneralSupportedDocumentResponse")]
        int SaveFuneralSupportedDocument(Funeral.Model.FuneralDocumentModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveFuneralSupportedDocument", ReplyAction="http://tempuri.org/IFuneralServices/SaveFuneralSupportedDocumentResponse")]
        System.Threading.Tasks.Task<int> SaveFuneralSupportedDocumentAsync(Funeral.Model.FuneralDocumentModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectFuneralDocumentsByMemberId", ReplyAction="http://tempuri.org/IFuneralServices/SelectFuneralDocumentsByMemberIdResponse")]
        Funeral.Model.FuneralDocumentModel[] SelectFuneralDocumentsByMemberId(int fkiFuneralID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectFuneralDocumentsByMemberId", ReplyAction="http://tempuri.org/IFuneralServices/SelectFuneralDocumentsByMemberIdResponse")]
        System.Threading.Tasks.Task<Funeral.Model.FuneralDocumentModel[]> SelectFuneralDocumentsByMemberIdAsync(int fkiFuneralID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/DeleteFuneraldocumentById", ReplyAction="http://tempuri.org/IFuneralServices/DeleteFuneraldocumentByIdResponse")]
        int DeleteFuneraldocumentById(int pkiFuneralPictureID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/DeleteFuneraldocumentById", ReplyAction="http://tempuri.org/IFuneralServices/DeleteFuneraldocumentByIdResponse")]
        System.Threading.Tasks.Task<int> DeleteFuneraldocumentByIdAsync(int pkiFuneralPictureID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectFuneralDocumentsByPKId", ReplyAction="http://tempuri.org/IFuneralServices/SelectFuneralDocumentsByPKIdResponse")]
        Funeral.Model.FuneralDocumentModel SelectFuneralDocumentsByPKId(int DocumentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectFuneralDocumentsByPKId", ReplyAction="http://tempuri.org/IFuneralServices/SelectFuneralDocumentsByPKIdResponse")]
        System.Threading.Tasks.Task<Funeral.Model.FuneralDocumentModel> SelectFuneralDocumentsByPKIdAsync(int DocumentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveTermsAndCondition", ReplyAction="http://tempuri.org/IFuneralServices/SaveTermsAndConditionResponse")]
        int SaveTermsAndCondition(Funeral.Model.ApplicationTnCModel Model1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveTermsAndCondition", ReplyAction="http://tempuri.org/IFuneralServices/SaveTermsAndConditionResponse")]
        System.Threading.Tasks.Task<int> SaveTermsAndConditionAsync(Funeral.Model.ApplicationTnCModel Model1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectApplicationTermsAndCondition", ReplyAction="http://tempuri.org/IFuneralServices/SelectApplicationTermsAndConditionResponse")]
        Funeral.Model.ApplicationTnCModel SelectApplicationTermsAndCondition(System.Guid parlourid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectApplicationTermsAndCondition", ReplyAction="http://tempuri.org/IFuneralServices/SelectApplicationTermsAndConditionResponse")]
        System.Threading.Tasks.Task<Funeral.Model.ApplicationTnCModel> SelectApplicationTermsAndConditionAsync(System.Guid parlourid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectAllTombStoneByParlourId", ReplyAction="http://tempuri.org/IFuneralServices/SelectAllTombStoneByParlourIdResponse")]
        Funeral.Model.TombStoneModel[] SelectAllTombStoneByParlourId(System.Guid ParlourId, int PageSize, int PageNum, string Keyword, string SortBy, string SortOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectAllTombStoneByParlourId", ReplyAction="http://tempuri.org/IFuneralServices/SelectAllTombStoneByParlourIdResponse")]
        System.Threading.Tasks.Task<Funeral.Model.TombStoneModel[]> SelectAllTombStoneByParlourIdAsync(System.Guid ParlourId, int PageSize, int PageNum, string Keyword, string SortBy, string SortOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/TombStoneDelete", ReplyAction="http://tempuri.org/IFuneralServices/TombStoneDeleteResponse")]
        int TombStoneDelete(int ID, string UserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/TombStoneDelete", ReplyAction="http://tempuri.org/IFuneralServices/TombStoneDeleteResponse")]
        System.Threading.Tasks.Task<int> TombStoneDeleteAsync(int ID, string UserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveTombStone", ReplyAction="http://tempuri.org/IFuneralServices/SaveTombStoneResponse")]
        int SaveTombStone(Funeral.Model.TombStoneModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveTombStone", ReplyAction="http://tempuri.org/IFuneralServices/SaveTombStoneResponse")]
        System.Threading.Tasks.Task<int> SaveTombStoneAsync(Funeral.Model.TombStoneModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectTombStoneByParlAndPki", ReplyAction="http://tempuri.org/IFuneralServices/SelectTombStoneByParlAndPkiResponse")]
        Funeral.Model.TombStoneModel SelectTombStoneByParlAndPki(int pkiTombstoneID, System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectTombStoneByParlAndPki", ReplyAction="http://tempuri.org/IFuneralServices/SelectTombStoneByParlAndPkiResponse")]
        System.Threading.Tasks.Task<Funeral.Model.TombStoneModel> SelectTombStoneByParlAndPkiAsync(int pkiTombstoneID, System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/UploadTombImage", ReplyAction="http://tempuri.org/IFuneralServices/UploadTombImageResponse")]
        int UploadTombImage(string ImageName, string ImagePath, int pkiTombstoneID, System.Guid parlourid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/UploadTombImage", ReplyAction="http://tempuri.org/IFuneralServices/UploadTombImageResponse")]
        System.Threading.Tasks.Task<int> UploadTombImageAsync(string ImageName, string ImagePath, int pkiTombstoneID, System.Guid parlourid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetInvoiceNumOfTombByParlID", ReplyAction="http://tempuri.org/IFuneralServices/GetInvoiceNumOfTombByParlIDResponse")]
        Funeral.Model.TombStoneModel GetInvoiceNumOfTombByParlID(System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetInvoiceNumOfTombByParlID", ReplyAction="http://tempuri.org/IFuneralServices/GetInvoiceNumOfTombByParlIDResponse")]
        System.Threading.Tasks.Task<Funeral.Model.TombStoneModel> GetInvoiceNumOfTombByParlIDAsync(System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectServiceByTombStoneID", ReplyAction="http://tempuri.org/IFuneralServices/SelectServiceByTombStoneIDResponse")]
        Funeral.Model.TombStoneServiceSelectModel[] SelectServiceByTombStoneID(int fkiTombstoneID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectServiceByTombStoneID", ReplyAction="http://tempuri.org/IFuneralServices/SelectServiceByTombStoneIDResponse")]
        System.Threading.Tasks.Task<Funeral.Model.TombStoneServiceSelectModel[]> SelectServiceByTombStoneIDAsync(int fkiTombstoneID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/DeleteTombstoneServiceByID", ReplyAction="http://tempuri.org/IFuneralServices/DeleteTombstoneServiceByIDResponse")]
        int DeleteTombstoneServiceByID(int pkiTombStoneSelectionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/DeleteTombstoneServiceByID", ReplyAction="http://tempuri.org/IFuneralServices/DeleteTombstoneServiceByIDResponse")]
        System.Threading.Tasks.Task<int> DeleteTombstoneServiceByIDAsync(int pkiTombStoneSelectionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectServiceByTombAndID", ReplyAction="http://tempuri.org/IFuneralServices/SelectServiceByTombAndIDResponse")]
        Funeral.Model.TombStoneServiceSelectModel SelectServiceByTombAndID(int fkiTombstoneID, int pkiTombStoneSelectionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectServiceByTombAndID", ReplyAction="http://tempuri.org/IFuneralServices/SelectServiceByTombAndIDResponse")]
        System.Threading.Tasks.Task<Funeral.Model.TombStoneServiceSelectModel> SelectServiceByTombAndIDAsync(int fkiTombstoneID, int pkiTombStoneSelectionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveTombStoneService", ReplyAction="http://tempuri.org/IFuneralServices/SaveTombStoneServiceResponse")]
        int SaveTombStoneService(Funeral.Model.TombStoneServiceSelectModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveTombStoneService", ReplyAction="http://tempuri.org/IFuneralServices/SaveTombStoneServiceResponse")]
        System.Threading.Tasks.Task<int> SaveTombStoneServiceAsync(Funeral.Model.TombStoneServiceSelectModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/UpdateAllTombStoneData", ReplyAction="http://tempuri.org/IFuneralServices/UpdateAllTombStoneDataResponse")]
        int UpdateAllTombStoneData(int pkiTombstoneID, decimal DisCount, decimal Tax, string InvoiceNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/UpdateAllTombStoneData", ReplyAction="http://tempuri.org/IFuneralServices/UpdateAllTombStoneDataResponse")]
        System.Threading.Tasks.Task<int> UpdateAllTombStoneDataAsync(int pkiTombstoneID, decimal DisCount, decimal Tax, string InvoiceNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/UpdateAutoPolicyNo", ReplyAction="http://tempuri.org/IFuneralServices/UpdateAutoPolicyNoResponse")]
        int UpdateAutoPolicyNo(Funeral.Model.ApplicationSettingsModel Model1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/UpdateAutoPolicyNo", ReplyAction="http://tempuri.org/IFuneralServices/UpdateAutoPolicyNoResponse")]
        System.Threading.Tasks.Task<int> UpdateAutoPolicyNoAsync(Funeral.Model.ApplicationSettingsModel Model1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/DoLogin", ReplyAction="http://tempuri.org/IFuneralServices/DoLoginResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Funeral.Web.FuneralServiceReference.FuneralServiceFault), Action="http://tempuri.org/IFuneralServices/DoLoginFuneralServiceFaultFault", Name="FuneralServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Funeral.Services")]
        Funeral.Model.AdminModel DoLogin(string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/DoLogin", ReplyAction="http://tempuri.org/IFuneralServices/DoLoginResponse")]
        System.Threading.Tasks.Task<Funeral.Model.AdminModel> DoLoginAsync(string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveMember", ReplyAction="http://tempuri.org/IFuneralServices/SaveMemberResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Funeral.Web.FuneralServiceReference.FuneralServiceFault), Action="http://tempuri.org/IFuneralServices/SaveMemberFuneralServiceFaultFault", Name="FuneralServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Funeral.Services")]
        int SaveMember(Funeral.Model.MembersModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveMember", ReplyAction="http://tempuri.org/IFuneralServices/SaveMemberResponse")]
        System.Threading.Tasks.Task<int> SaveMemberAsync(Funeral.Model.MembersModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveBank", ReplyAction="http://tempuri.org/IFuneralServices/SaveBankResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Funeral.Web.FuneralServiceReference.FuneralServiceFault), Action="http://tempuri.org/IFuneralServices/SaveBankFuneralServiceFaultFault", Name="FuneralServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Funeral.Services")]
        int SaveBank(Funeral.Model.BankModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveBank", ReplyAction="http://tempuri.org/IFuneralServices/SaveBankResponse")]
        System.Threading.Tasks.Task<int> SaveBankAsync(Funeral.Model.BankModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveApplication", ReplyAction="http://tempuri.org/IFuneralServices/SaveApplicationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Funeral.Web.FuneralServiceReference.FuneralServiceFault), Action="http://tempuri.org/IFuneralServices/SaveApplicationFuneralServiceFaultFault", Name="FuneralServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Funeral.Services")]
        Funeral.Model.ApplicationSettingsModel SaveApplication(Funeral.Model.ApplicationSettingsModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveApplication", ReplyAction="http://tempuri.org/IFuneralServices/SaveApplicationResponse")]
        System.Threading.Tasks.Task<Funeral.Model.ApplicationSettingsModel> SaveApplicationAsync(Funeral.Model.ApplicationSettingsModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveAgentInfo", ReplyAction="http://tempuri.org/IFuneralServices/SaveAgentInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Funeral.Web.FuneralServiceReference.FuneralServiceFault), Action="http://tempuri.org/IFuneralServices/SaveAgentInfoFuneralServiceFaultFault", Name="FuneralServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Funeral.Services")]
        Funeral.Model.AgentInfoSetupModel SaveAgentInfo(Funeral.Model.AgentInfoSetupModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveAgentInfo", ReplyAction="http://tempuri.org/IFuneralServices/SaveAgentInfoResponse")]
        System.Threading.Tasks.Task<Funeral.Model.AgentInfoSetupModel> SaveAgentInfoAsync(Funeral.Model.AgentInfoSetupModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveAdditionalApplication", ReplyAction="http://tempuri.org/IFuneralServices/SaveAdditionalApplicationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Funeral.Web.FuneralServiceReference.FuneralServiceFault), Action="http://tempuri.org/IFuneralServices/SaveAdditionalApplicationFuneralServiceFaultF" +
            "ault", Name="FuneralServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Funeral.Services")]
        Funeral.Model.AdditionalApplicationSettingsModel SaveAdditionalApplication(Funeral.Model.AdditionalApplicationSettingsModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveAdditionalApplication", ReplyAction="http://tempuri.org/IFuneralServices/SaveAdditionalApplicationResponse")]
        System.Threading.Tasks.Task<Funeral.Model.AdditionalApplicationSettingsModel> SaveAdditionalApplicationAsync(Funeral.Model.AdditionalApplicationSettingsModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveBankingDetail", ReplyAction="http://tempuri.org/IFuneralServices/SaveBankingDetailResponse")]
        Funeral.Model.BankingDetailSending SaveBankingDetail(Funeral.Model.BankingDetailSending Model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveBankingDetail", ReplyAction="http://tempuri.org/IFuneralServices/SaveBankingDetailResponse")]
        System.Threading.Tasks.Task<Funeral.Model.BankingDetailSending> SaveBankingDetailAsync(Funeral.Model.BankingDetailSending Model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveUserDetails", ReplyAction="http://tempuri.org/IFuneralServices/SaveUserDetailsResponse")]
        int SaveUserDetails(Funeral.Model.SecureUsersModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveUserDetails", ReplyAction="http://tempuri.org/IFuneralServices/SaveUserDetailsResponse")]
        System.Threading.Tasks.Task<int> SaveUserDetailsAsync(Funeral.Model.SecureUsersModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SavePlanDetails", ReplyAction="http://tempuri.org/IFuneralServices/SavePlanDetailsResponse")]
        int SavePlanDetails(Funeral.Model.PlanModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SavePlanDetails", ReplyAction="http://tempuri.org/IFuneralServices/SavePlanDetailsResponse")]
        System.Threading.Tasks.Task<int> SavePlanDetailsAsync(Funeral.Model.PlanModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveBranchDetails", ReplyAction="http://tempuri.org/IFuneralServices/SaveBranchDetailsResponse")]
        System.Guid SaveBranchDetails(Funeral.Model.BranchModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveBranchDetails", ReplyAction="http://tempuri.org/IFuneralServices/SaveBranchDetailsResponse")]
        System.Threading.Tasks.Task<System.Guid> SaveBranchDetailsAsync(Funeral.Model.BranchModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveSocietyDetails", ReplyAction="http://tempuri.org/IFuneralServices/SaveSocietyDetailsResponse")]
        int SaveSocietyDetails(Funeral.Model.SocietyModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveSocietyDetails", ReplyAction="http://tempuri.org/IFuneralServices/SaveSocietyDetailsResponse")]
        System.Threading.Tasks.Task<int> SaveSocietyDetailsAsync(Funeral.Model.SocietyModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveVendorDetails", ReplyAction="http://tempuri.org/IFuneralServices/SaveVendorDetailsResponse")]
        int SaveVendorDetails(Funeral.Model.VendorModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveVendorDetails", ReplyAction="http://tempuri.org/IFuneralServices/SaveVendorDetailsResponse")]
        System.Threading.Tasks.Task<int> SaveVendorDetailsAsync(Funeral.Model.VendorModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/UpdatesmsTemplate", ReplyAction="http://tempuri.org/IFuneralServices/UpdatesmsTemplateResponse")]
        int UpdatesmsTemplate(Funeral.Model.smsTempletModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/UpdatesmsTemplate", ReplyAction="http://tempuri.org/IFuneralServices/UpdatesmsTemplateResponse")]
        System.Threading.Tasks.Task<int> UpdatesmsTemplateAsync(Funeral.Model.smsTempletModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveExpensesDetails", ReplyAction="http://tempuri.org/IFuneralServices/SaveExpensesDetailsResponse")]
        int SaveExpensesDetails(Funeral.Model.ExpensesModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveExpensesDetails", ReplyAction="http://tempuri.org/IFuneralServices/SaveExpensesDetailsResponse")]
        System.Threading.Tasks.Task<int> SaveExpensesDetailsAsync(Funeral.Model.ExpensesModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveUserGroupDetails", ReplyAction="http://tempuri.org/IFuneralServices/SaveUserGroupDetailsResponse")]
        int SaveUserGroupDetails(Funeral.Model.SecureUserGroupsModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveUserGroupDetails", ReplyAction="http://tempuri.org/IFuneralServices/SaveUserGroupDetailsResponse")]
        System.Threading.Tasks.Task<int> SaveUserGroupDetailsAsync(Funeral.Model.SecureUserGroupsModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveSmsGroupDetails", ReplyAction="http://tempuri.org/IFuneralServices/SaveSmsGroupDetailsResponse")]
        int SaveSmsGroupDetails(Funeral.Model.smsSendingGroupModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveSmsGroupDetails", ReplyAction="http://tempuri.org/IFuneralServices/SaveSmsGroupDetailsResponse")]
        System.Threading.Tasks.Task<int> SaveSmsGroupDetailsAsync(Funeral.Model.smsSendingGroupModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveAddonProductDetails", ReplyAction="http://tempuri.org/IFuneralServices/SaveAddonProductDetailsResponse")]
        System.Guid SaveAddonProductDetails(Funeral.Model.AddonProductsModal model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveAddonProductDetails", ReplyAction="http://tempuri.org/IFuneralServices/SaveAddonProductDetailsResponse")]
        System.Threading.Tasks.Task<System.Guid> SaveAddonProductDetailsAsync(Funeral.Model.AddonProductsModal model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/DeleteMember", ReplyAction="http://tempuri.org/IFuneralServices/DeleteMemberResponse")]
        int DeleteMember(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/DeleteMember", ReplyAction="http://tempuri.org/IFuneralServices/DeleteMemberResponse")]
        System.Threading.Tasks.Task<int> DeleteMemberAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/MemberDeleteLogical", ReplyAction="http://tempuri.org/IFuneralServices/MemberDeleteLogicalResponse")]
        int MemberDeleteLogical(int id, string UserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/MemberDeleteLogical", ReplyAction="http://tempuri.org/IFuneralServices/MemberDeleteLogicalResponse")]
        System.Threading.Tasks.Task<int> MemberDeleteLogicalAsync(int id, string UserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/DeleteUser", ReplyAction="http://tempuri.org/IFuneralServices/DeleteUserResponse")]
        int DeleteUser(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/DeleteUser", ReplyAction="http://tempuri.org/IFuneralServices/DeleteUserResponse")]
        System.Threading.Tasks.Task<int> DeleteUserAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/DeletePlan", ReplyAction="http://tempuri.org/IFuneralServices/DeletePlanResponse")]
        int DeletePlan(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/DeletePlan", ReplyAction="http://tempuri.org/IFuneralServices/DeletePlanResponse")]
        System.Threading.Tasks.Task<int> DeletePlanAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/DeleteCompany", ReplyAction="http://tempuri.org/IFuneralServices/DeleteCompanyResponse")]
        int DeleteCompany(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/DeleteCompany", ReplyAction="http://tempuri.org/IFuneralServices/DeleteCompanyResponse")]
        System.Threading.Tasks.Task<int> DeleteCompanyAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/DeleteAgent", ReplyAction="http://tempuri.org/IFuneralServices/DeleteAgentResponse")]
        int DeleteAgent(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/DeleteAgent", ReplyAction="http://tempuri.org/IFuneralServices/DeleteAgentResponse")]
        System.Threading.Tasks.Task<int> DeleteAgentAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/DeleteBranch", ReplyAction="http://tempuri.org/IFuneralServices/DeleteBranchResponse")]
        int DeleteBranch(System.Guid ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/DeleteBranch", ReplyAction="http://tempuri.org/IFuneralServices/DeleteBranchResponse")]
        System.Threading.Tasks.Task<int> DeleteBranchAsync(System.Guid ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/DeleteBank", ReplyAction="http://tempuri.org/IFuneralServices/DeleteBankResponse")]
        int DeleteBank(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/DeleteBank", ReplyAction="http://tempuri.org/IFuneralServices/DeleteBankResponse")]
        System.Threading.Tasks.Task<int> DeleteBankAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/DeleteSociety", ReplyAction="http://tempuri.org/IFuneralServices/DeleteSocietyResponse")]
        int DeleteSociety(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/DeleteSociety", ReplyAction="http://tempuri.org/IFuneralServices/DeleteSocietyResponse")]
        System.Threading.Tasks.Task<int> DeleteSocietyAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/DeleteVendor", ReplyAction="http://tempuri.org/IFuneralServices/DeleteVendorResponse")]
        int DeleteVendor(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/DeleteVendor", ReplyAction="http://tempuri.org/IFuneralServices/DeleteVendorResponse")]
        System.Threading.Tasks.Task<int> DeleteVendorAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/DeleteExpenses", ReplyAction="http://tempuri.org/IFuneralServices/DeleteExpensesResponse")]
        int DeleteExpenses(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/DeleteExpenses", ReplyAction="http://tempuri.org/IFuneralServices/DeleteExpensesResponse")]
        System.Threading.Tasks.Task<int> DeleteExpensesAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/DeleteAddonProduct", ReplyAction="http://tempuri.org/IFuneralServices/DeleteAddonProductResponse")]
        int DeleteAddonProduct(System.Guid ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/DeleteAddonProduct", ReplyAction="http://tempuri.org/IFuneralServices/DeleteAddonProductResponse")]
        System.Threading.Tasks.Task<int> DeleteAddonProductAsync(System.Guid ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/EditUserbyID", ReplyAction="http://tempuri.org/IFuneralServices/EditUserbyIDResponse")]
        Funeral.Model.SecureUsersModel EditUserbyID(int ID, System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/EditUserbyID", ReplyAction="http://tempuri.org/IFuneralServices/EditUserbyIDResponse")]
        System.Threading.Tasks.Task<Funeral.Model.SecureUsersModel> EditUserbyIDAsync(int ID, System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/EditPlanbyID", ReplyAction="http://tempuri.org/IFuneralServices/EditPlanbyIDResponse")]
        Funeral.Model.PlanModel EditPlanbyID(int ID, System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/EditPlanbyID", ReplyAction="http://tempuri.org/IFuneralServices/EditPlanbyIDResponse")]
        System.Threading.Tasks.Task<Funeral.Model.PlanModel> EditPlanbyIDAsync(int ID, System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/EditBranchbyID", ReplyAction="http://tempuri.org/IFuneralServices/EditBranchbyIDResponse")]
        Funeral.Model.BranchModel EditBranchbyID(System.Guid ID, System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/EditBranchbyID", ReplyAction="http://tempuri.org/IFuneralServices/EditBranchbyIDResponse")]
        System.Threading.Tasks.Task<Funeral.Model.BranchModel> EditBranchbyIDAsync(System.Guid ID, System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/EditSocietybyID", ReplyAction="http://tempuri.org/IFuneralServices/EditSocietybyIDResponse")]
        Funeral.Model.SocietyModel EditSocietybyID(int ID, System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/EditSocietybyID", ReplyAction="http://tempuri.org/IFuneralServices/EditSocietybyIDResponse")]
        System.Threading.Tasks.Task<Funeral.Model.SocietyModel> EditSocietybyIDAsync(int ID, System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/EditVendorbyID", ReplyAction="http://tempuri.org/IFuneralServices/EditVendorbyIDResponse")]
        Funeral.Model.VendorModel EditVendorbyID(int ID, System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/EditVendorbyID", ReplyAction="http://tempuri.org/IFuneralServices/EditVendorbyIDResponse")]
        System.Threading.Tasks.Task<Funeral.Model.VendorModel> EditVendorbyIDAsync(int ID, System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetEmailTemplateByID", ReplyAction="http://tempuri.org/IFuneralServices/GetEmailTemplateByIDResponse")]
        Funeral.Model.smsTempletModel GetEmailTemplateByID(int ID, System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetEmailTemplateByID", ReplyAction="http://tempuri.org/IFuneralServices/GetEmailTemplateByIDResponse")]
        System.Threading.Tasks.Task<Funeral.Model.smsTempletModel> GetEmailTemplateByIDAsync(int ID, System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/EditExpensesbyID", ReplyAction="http://tempuri.org/IFuneralServices/EditExpensesbyIDResponse")]
        Funeral.Model.ExpensesModel EditExpensesbyID(int ID, System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/EditExpensesbyID", ReplyAction="http://tempuri.org/IFuneralServices/EditExpensesbyIDResponse")]
        System.Threading.Tasks.Task<Funeral.Model.ExpensesModel> EditExpensesbyIDAsync(int ID, System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/EditSecurUserbyID", ReplyAction="http://tempuri.org/IFuneralServices/EditSecurUserbyIDResponse")]
        Funeral.Model.SecureUserGroupsModel[] EditSecurUserbyID(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/EditSecurUserbyID", ReplyAction="http://tempuri.org/IFuneralServices/EditSecurUserbyIDResponse")]
        System.Threading.Tasks.Task<Funeral.Model.SecureUserGroupsModel[]> EditSecurUserbyIDAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/EditsmsGroupbyID", ReplyAction="http://tempuri.org/IFuneralServices/EditsmsGroupbyIDResponse")]
        Funeral.Model.smsSendingGroupModel[] EditsmsGroupbyID(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/EditsmsGroupbyID", ReplyAction="http://tempuri.org/IFuneralServices/EditsmsGroupbyIDResponse")]
        System.Threading.Tasks.Task<Funeral.Model.smsSendingGroupModel[]> EditsmsGroupbyIDAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetsmsGroupbyID", ReplyAction="http://tempuri.org/IFuneralServices/GetsmsGroupbyIDResponse")]
        Funeral.Model.smsSendingGroupModel GetsmsGroupbyID(int ID, System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetsmsGroupbyID", ReplyAction="http://tempuri.org/IFuneralServices/GetsmsGroupbyIDResponse")]
        System.Threading.Tasks.Task<Funeral.Model.smsSendingGroupModel> GetsmsGroupbyIDAsync(int ID, System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/EditAddonProductbyID", ReplyAction="http://tempuri.org/IFuneralServices/EditAddonProductbyIDResponse")]
        Funeral.Model.AddonProductsModal EditAddonProductbyID(System.Guid ID, System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/EditAddonProductbyID", ReplyAction="http://tempuri.org/IFuneralServices/EditAddonProductbyIDResponse")]
        System.Threading.Tasks.Task<Funeral.Model.AddonProductsModal> EditAddonProductbyIDAsync(System.Guid ID, System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetMemberByID", ReplyAction="http://tempuri.org/IFuneralServices/GetMemberByIDResponse")]
        Funeral.Model.MembersModel GetMemberByID(int ID, System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetMemberByID", ReplyAction="http://tempuri.org/IFuneralServices/GetMemberByIDResponse")]
        System.Threading.Tasks.Task<Funeral.Model.MembersModel> GetMemberByIDAsync(int ID, System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetMemberByIDNum", ReplyAction="http://tempuri.org/IFuneralServices/GetMemberByIDNumResponse")]
        Funeral.Model.MembersModel GetMemberByIDNum(string ID, System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetMemberByIDNum", ReplyAction="http://tempuri.org/IFuneralServices/GetMemberByIDNumResponse")]
        System.Threading.Tasks.Task<Funeral.Model.MembersModel> GetMemberByIDNumAsync(string ID, System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetUserByID", ReplyAction="http://tempuri.org/IFuneralServices/GetUserByIDResponse")]
        Funeral.Model.SecureUsersModel GetUserByID(string UserID, System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetUserByID", ReplyAction="http://tempuri.org/IFuneralServices/GetUserByIDResponse")]
        System.Threading.Tasks.Task<Funeral.Model.SecureUsersModel> GetUserByIDAsync(string UserID, System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetPlanByID", ReplyAction="http://tempuri.org/IFuneralServices/GetPlanByIDResponse")]
        Funeral.Model.PlanModel GetPlanByID(string UserID, System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetPlanByID", ReplyAction="http://tempuri.org/IFuneralServices/GetPlanByIDResponse")]
        System.Threading.Tasks.Task<Funeral.Model.PlanModel> GetPlanByIDAsync(string UserID, System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetUserAccessByID", ReplyAction="http://tempuri.org/IFuneralServices/GetUserAccessByIDResponse")]
        Funeral.Model.SecureUserGroupsModel GetUserAccessByID(int UserID, System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetUserAccessByID", ReplyAction="http://tempuri.org/IFuneralServices/GetUserAccessByIDResponse")]
        System.Threading.Tasks.Task<Funeral.Model.SecureUserGroupsModel> GetUserAccessByIDAsync(int UserID, System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetBranchByID", ReplyAction="http://tempuri.org/IFuneralServices/GetBranchByIDResponse")]
        Funeral.Model.BranchModel GetBranchByID(string UserID, System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetBranchByID", ReplyAction="http://tempuri.org/IFuneralServices/GetBranchByIDResponse")]
        System.Threading.Tasks.Task<Funeral.Model.BranchModel> GetBranchByIDAsync(string UserID, System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetAddonProductByID", ReplyAction="http://tempuri.org/IFuneralServices/GetAddonProductByIDResponse")]
        Funeral.Model.AddonProductsModal GetAddonProductByID(string UserID, System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetAddonProductByID", ReplyAction="http://tempuri.org/IFuneralServices/GetAddonProductByIDResponse")]
        System.Threading.Tasks.Task<Funeral.Model.AddonProductsModal> GetAddonProductByIDAsync(string UserID, System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetSocietyByID", ReplyAction="http://tempuri.org/IFuneralServices/GetSocietyByIDResponse")]
        Funeral.Model.SocietyModel GetSocietyByID(string UserID, System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetSocietyByID", ReplyAction="http://tempuri.org/IFuneralServices/GetSocietyByIDResponse")]
        System.Threading.Tasks.Task<Funeral.Model.SocietyModel> GetSocietyByIDAsync(string UserID, System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetVendorByID", ReplyAction="http://tempuri.org/IFuneralServices/GetVendorByIDResponse")]
        Funeral.Model.VendorModel GetVendorByID(string UserID, System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetVendorByID", ReplyAction="http://tempuri.org/IFuneralServices/GetVendorByIDResponse")]
        System.Threading.Tasks.Task<Funeral.Model.VendorModel> GetVendorByIDAsync(string UserID, System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetExpensesByID", ReplyAction="http://tempuri.org/IFuneralServices/GetExpensesByIDResponse")]
        Funeral.Model.ExpensesModel GetExpensesByID(string UserID, System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetExpensesByID", ReplyAction="http://tempuri.org/IFuneralServices/GetExpensesByIDResponse")]
        System.Threading.Tasks.Task<Funeral.Model.ExpensesModel> GetExpensesByIDAsync(string UserID, System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetApplictionByParlourID", ReplyAction="http://tempuri.org/IFuneralServices/GetApplictionByParlourIDResponse")]
        Funeral.Model.ApplicationSettingsModel GetApplictionByParlourID(System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetApplictionByParlourID", ReplyAction="http://tempuri.org/IFuneralServices/GetApplictionByParlourIDResponse")]
        System.Threading.Tasks.Task<Funeral.Model.ApplicationSettingsModel> GetApplictionByParlourIDAsync(System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetApplictionByID", ReplyAction="http://tempuri.org/IFuneralServices/GetApplictionByIDResponse")]
        Funeral.Model.ApplicationSettingsModel GetApplictionByID(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetApplictionByID", ReplyAction="http://tempuri.org/IFuneralServices/GetApplictionByIDResponse")]
        System.Threading.Tasks.Task<Funeral.Model.ApplicationSettingsModel> GetApplictionByIDAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetBankingByID", ReplyAction="http://tempuri.org/IFuneralServices/GetBankingByIDResponse")]
        Funeral.Model.BankingDetailSending GetBankingByID(System.Guid ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetBankingByID", ReplyAction="http://tempuri.org/IFuneralServices/GetBankingByIDResponse")]
        System.Threading.Tasks.Task<Funeral.Model.BankingDetailSending> GetBankingByIDAsync(System.Guid ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetAgentByID", ReplyAction="http://tempuri.org/IFuneralServices/GetAgentByIDResponse")]
        Funeral.Model.AgentInfoSetupModel GetAgentByID(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetAgentByID", ReplyAction="http://tempuri.org/IFuneralServices/GetAgentByIDResponse")]
        System.Threading.Tasks.Task<Funeral.Model.AgentInfoSetupModel> GetAgentByIDAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetSecureGrouList", ReplyAction="http://tempuri.org/IFuneralServices/GetSecureGrouListResponse")]
        Funeral.Model.SecureGroupModel[] GetSecureGrouList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetSecureGrouList", ReplyAction="http://tempuri.org/IFuneralServices/GetSecureGrouListResponse")]
        System.Threading.Tasks.Task<Funeral.Model.SecureGroupModel[]> GetSecureGrouListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetAllMembers", ReplyAction="http://tempuri.org/IFuneralServices/GetAllMembersResponse")]
        Funeral.Model.MembersViewModel GetAllMembers(System.Guid ParlourId, int PageSize, int PageNum, string Keyword, string SortBy, string SortOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetAllMembers", ReplyAction="http://tempuri.org/IFuneralServices/GetAllMembersResponse")]
        System.Threading.Tasks.Task<Funeral.Model.MembersViewModel> GetAllMembersAsync(System.Guid ParlourId, int PageSize, int PageNum, string Keyword, string SortBy, string SortOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetAllDebitOrderMembers", ReplyAction="http://tempuri.org/IFuneralServices/GetAllDebitOrderMembersResponse")]
        Funeral.Model.MembersViewModel GetAllDebitOrderMembers(System.Guid ParlourId, int PageSize, int PageNum, string Keyword, string SortBy, string SortOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetAllDebitOrderMembers", ReplyAction="http://tempuri.org/IFuneralServices/GetAllDebitOrderMembersResponse")]
        System.Threading.Tasks.Task<Funeral.Model.MembersViewModel> GetAllDebitOrderMembersAsync(System.Guid ParlourId, int PageSize, int PageNum, string Keyword, string SortBy, string SortOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetAllUsers", ReplyAction="http://tempuri.org/IFuneralServices/GetAllUsersResponse")]
        Funeral.Model.SecureUsersModel[] GetAllUsers(System.Guid ParlourId, int PageSize, int PageNum, string Keyword, string SortBy, string SortOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetAllUsers", ReplyAction="http://tempuri.org/IFuneralServices/GetAllUsersResponse")]
        System.Threading.Tasks.Task<Funeral.Model.SecureUsersModel[]> GetAllUsersAsync(System.Guid ParlourId, int PageSize, int PageNum, string Keyword, string SortBy, string SortOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetAllPlans", ReplyAction="http://tempuri.org/IFuneralServices/GetAllPlansResponse")]
        Funeral.Model.PlanModel[] GetAllPlans(System.Guid ParlourId, int PageSize, int PageNum, string Keyword, string SortBy, string SortOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetAllPlans", ReplyAction="http://tempuri.org/IFuneralServices/GetAllPlansResponse")]
        System.Threading.Tasks.Task<Funeral.Model.PlanModel[]> GetAllPlansAsync(System.Guid ParlourId, int PageSize, int PageNum, string Keyword, string SortBy, string SortOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetAllCompanys", ReplyAction="http://tempuri.org/IFuneralServices/GetAllCompanysResponse")]
        Funeral.Model.ApplicationSettingsModel[] GetAllCompanys(System.Guid ParlourId, int PageSize, int PageNum, string Keyword, string SortBy, string SortOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetAllCompanys", ReplyAction="http://tempuri.org/IFuneralServices/GetAllCompanysResponse")]
        System.Threading.Tasks.Task<Funeral.Model.ApplicationSettingsModel[]> GetAllCompanysAsync(System.Guid ParlourId, int PageSize, int PageNum, string Keyword, string SortBy, string SortOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetAllAgentInfo", ReplyAction="http://tempuri.org/IFuneralServices/GetAllAgentInfoResponse")]
        Funeral.Model.AgentInfoSetupModel[] GetAllAgentInfo(System.Guid ParlourId, int PageSize, int PageNum, string Keyword, string SortBy, string SortOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetAllAgentInfo", ReplyAction="http://tempuri.org/IFuneralServices/GetAllAgentInfoResponse")]
        System.Threading.Tasks.Task<Funeral.Model.AgentInfoSetupModel[]> GetAllAgentInfoAsync(System.Guid ParlourId, int PageSize, int PageNum, string Keyword, string SortBy, string SortOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetAllBranches", ReplyAction="http://tempuri.org/IFuneralServices/GetAllBranchesResponse")]
        Funeral.Model.BranchModel[] GetAllBranches(System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetAllBranches", ReplyAction="http://tempuri.org/IFuneralServices/GetAllBranchesResponse")]
        System.Threading.Tasks.Task<Funeral.Model.BranchModel[]> GetAllBranchesAsync(System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetAllSocietyes", ReplyAction="http://tempuri.org/IFuneralServices/GetAllSocietyesResponse")]
        Funeral.Model.SocietyModel[] GetAllSocietyes(System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetAllSocietyes", ReplyAction="http://tempuri.org/IFuneralServices/GetAllSocietyesResponse")]
        System.Threading.Tasks.Task<Funeral.Model.SocietyModel[]> GetAllSocietyesAsync(System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetAllSocietye", ReplyAction="http://tempuri.org/IFuneralServices/GetAllSocietyeResponse")]
        Funeral.Model.SocietyModel[] GetAllSocietye(System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetAllSocietye", ReplyAction="http://tempuri.org/IFuneralServices/GetAllSocietyeResponse")]
        System.Threading.Tasks.Task<Funeral.Model.SocietyModel[]> GetAllSocietyeAsync(System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetAllVendores", ReplyAction="http://tempuri.org/IFuneralServices/GetAllVendoresResponse")]
        Funeral.Model.VendorModel[] GetAllVendores(System.Guid ParlourId, int PageSize, int PageNum, string Keyword, string SortBy, string SortOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetAllVendores", ReplyAction="http://tempuri.org/IFuneralServices/GetAllVendoresResponse")]
        System.Threading.Tasks.Task<Funeral.Model.VendorModel[]> GetAllVendoresAsync(System.Guid ParlourId, int PageSize, int PageNum, string Keyword, string SortBy, string SortOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetTemplateList", ReplyAction="http://tempuri.org/IFuneralServices/GetTemplateListResponse")]
        Funeral.Model.smsTempletModel[] GetTemplateList(System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetTemplateList", ReplyAction="http://tempuri.org/IFuneralServices/GetTemplateListResponse")]
        System.Threading.Tasks.Task<Funeral.Model.smsTempletModel[]> GetTemplateListAsync(System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetAllExpenseses", ReplyAction="http://tempuri.org/IFuneralServices/GetAllExpensesesResponse")]
        Funeral.Model.ExpensesModel[] GetAllExpenseses(System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetAllExpenseses", ReplyAction="http://tempuri.org/IFuneralServices/GetAllExpensesesResponse")]
        System.Threading.Tasks.Task<Funeral.Model.ExpensesModel[]> GetAllExpensesesAsync(System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetAllAddonProductes", ReplyAction="http://tempuri.org/IFuneralServices/GetAllAddonProductesResponse")]
        Funeral.Model.AddonProductsModal[] GetAllAddonProductes(System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetAllAddonProductes", ReplyAction="http://tempuri.org/IFuneralServices/GetAllAddonProductesResponse")]
        System.Threading.Tasks.Task<Funeral.Model.AddonProductsModal[]> GetAllAddonProductesAsync(System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetAllMemberCellphon", ReplyAction="http://tempuri.org/IFuneralServices/GetAllMemberCellphonResponse")]
        Funeral.Model.MembersModel[] GetAllMemberCellphon(System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetAllMemberCellphon", ReplyAction="http://tempuri.org/IFuneralServices/GetAllMemberCellphonResponse")]
        System.Threading.Tasks.Task<Funeral.Model.MembersModel[]> GetAllMemberCellphonAsync(System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetPolicyByParlourId", ReplyAction="http://tempuri.org/IFuneralServices/GetPolicyByParlourIdResponse")]
        Funeral.Model.PolicyModel[] GetPolicyByParlourId(System.Guid parlourid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetPolicyByParlourId", ReplyAction="http://tempuri.org/IFuneralServices/GetPolicyByParlourIdResponse")]
        System.Threading.Tasks.Task<Funeral.Model.PolicyModel[]> GetPolicyByParlourIdAsync(System.Guid parlourid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetInvoices", ReplyAction="http://tempuri.org/IFuneralServices/GetInvoicesResponse")]
        Funeral.Model.MemberInvoiceModel[] GetInvoices(System.Guid parlourid, int MemberId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetInvoices", ReplyAction="http://tempuri.org/IFuneralServices/GetInvoicesResponse")]
        System.Threading.Tasks.Task<Funeral.Model.MemberInvoiceModel[]> GetInvoicesAsync(System.Guid parlourid, int MemberId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SocietyByparlourId", ReplyAction="http://tempuri.org/IFuneralServices/SocietyByparlourIdResponse")]
        Funeral.Model.SocietyModel[] SocietyByparlourId(System.Guid parlourid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SocietyByparlourId", ReplyAction="http://tempuri.org/IFuneralServices/SocietyByparlourIdResponse")]
        System.Threading.Tasks.Task<Funeral.Model.SocietyModel[]> SocietyByparlourIdAsync(System.Guid parlourid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetAllSociety", ReplyAction="http://tempuri.org/IFuneralServices/GetAllSocietyResponse")]
        Funeral.Model.SocietyModel[] GetAllSociety(System.Guid parlourid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetAllSociety", ReplyAction="http://tempuri.org/IFuneralServices/GetAllSocietyResponse")]
        System.Threading.Tasks.Task<Funeral.Model.SocietyModel[]> GetAllSocietyAsync(System.Guid parlourid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/BranchByparlourId", ReplyAction="http://tempuri.org/IFuneralServices/BranchByparlourIdResponse")]
        Funeral.Model.BranchModel[] BranchByparlourId(System.Guid parlourid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/BranchByparlourId", ReplyAction="http://tempuri.org/IFuneralServices/BranchByparlourIdResponse")]
        System.Threading.Tasks.Task<Funeral.Model.BranchModel[]> BranchByparlourIdAsync(System.Guid parlourid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetAllBranch", ReplyAction="http://tempuri.org/IFuneralServices/GetAllBranchResponse")]
        Funeral.Model.BranchModel[] GetAllBranch(System.Guid Parlourid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetAllBranch", ReplyAction="http://tempuri.org/IFuneralServices/GetAllBranchResponse")]
        System.Threading.Tasks.Task<Funeral.Model.BranchModel[]> GetAllBranchAsync(System.Guid Parlourid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetAllPlanName", ReplyAction="http://tempuri.org/IFuneralServices/GetAllPlanNameResponse")]
        Funeral.Model.PlanModel[] GetAllPlanName(System.Guid Parlourid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetAllPlanName", ReplyAction="http://tempuri.org/IFuneralServices/GetAllPlanNameResponse")]
        System.Threading.Tasks.Task<Funeral.Model.PlanModel[]> GetAllPlanNameAsync(System.Guid Parlourid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetPlanSubscriptionByPlanId", ReplyAction="http://tempuri.org/IFuneralServices/GetPlanSubscriptionByPlanIdResponse")]
        Funeral.Model.PolicyModel[] GetPlanSubscriptionByPlanId(int pkiPlanID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetPlanSubscriptionByPlanId", ReplyAction="http://tempuri.org/IFuneralServices/GetPlanSubscriptionByPlanIdResponse")]
        System.Threading.Tasks.Task<Funeral.Model.PolicyModel[]> GetPlanSubscriptionByPlanIdAsync(int pkiPlanID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetWaitingPeriodByPlanId", ReplyAction="http://tempuri.org/IFuneralServices/GetWaitingPeriodByPlanIdResponse")]
        int GetWaitingPeriodByPlanId(int pkiPlanID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetWaitingPeriodByPlanId", ReplyAction="http://tempuri.org/IFuneralServices/GetWaitingPeriodByPlanIdResponse")]
        System.Threading.Tasks.Task<int> GetWaitingPeriodByPlanIdAsync(int pkiPlanID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetPlanUnderwriterByPlanId", ReplyAction="http://tempuri.org/IFuneralServices/GetPlanUnderwriterByPlanIdResponse")]
        string GetPlanUnderwriterByPlanId(int pkiPlanID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetPlanUnderwriterByPlanId", ReplyAction="http://tempuri.org/IFuneralServices/GetPlanUnderwriterByPlanIdResponse")]
        System.Threading.Tasks.Task<string> GetPlanUnderwriterByPlanIdAsync(int pkiPlanID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveMemberNote", ReplyAction="http://tempuri.org/IFuneralServices/SaveMemberNoteResponse")]
        int SaveMemberNote(Funeral.Model.MemberNotesModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveMemberNote", ReplyAction="http://tempuri.org/IFuneralServices/SaveMemberNoteResponse")]
        System.Threading.Tasks.Task<int> SaveMemberNoteAsync(Funeral.Model.MemberNotesModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetMemberNoteByMemberID", ReplyAction="http://tempuri.org/IFuneralServices/GetMemberNoteByMemberIDResponse")]
        Funeral.Model.MemberNotesModel[] GetMemberNoteByMemberID(int MemberID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/GetMemberNoteByMemberID", ReplyAction="http://tempuri.org/IFuneralServices/GetMemberNoteByMemberIDResponse")]
        System.Threading.Tasks.Task<Funeral.Model.MemberNotesModel[]> GetMemberNoteByMemberIDAsync(int MemberID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/UpdateNotesMember", ReplyAction="http://tempuri.org/IFuneralServices/UpdateNotesMemberResponse")]
        int UpdateNotesMember(Funeral.Model.MemberNotesModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/UpdateNotesMember", ReplyAction="http://tempuri.org/IFuneralServices/UpdateNotesMemberResponse")]
        System.Threading.Tasks.Task<int> UpdateNotesMemberAsync(Funeral.Model.MemberNotesModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectSupportDocumentsById", ReplyAction="http://tempuri.org/IFuneralServices/SelectSupportDocumentsByIdResponse")]
        Funeral.Model.SupportedDocumentModel SelectSupportDocumentsById(int DocumentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectSupportDocumentsById", ReplyAction="http://tempuri.org/IFuneralServices/SelectSupportDocumentsByIdResponse")]
        System.Threading.Tasks.Task<Funeral.Model.SupportedDocumentModel> SelectSupportDocumentsByIdAsync(int DocumentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectProductAddonProducts", ReplyAction="http://tempuri.org/IFuneralServices/SelectProductAddonProductsResponse")]
        Funeral.Model.AddonProductsModal[] SelectProductAddonProducts(System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SelectProductAddonProducts", ReplyAction="http://tempuri.org/IFuneralServices/SelectProductAddonProductsResponse")]
        System.Threading.Tasks.Task<Funeral.Model.AddonProductsModal[]> SelectProductAddonProductsAsync(System.Guid ParlourId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveAddonProducts", ReplyAction="http://tempuri.org/IFuneralServices/SaveAddonProductsResponse")]
        int SaveAddonProducts(Funeral.Model.MemberAddonProductsModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuneralServices/SaveAddonProducts", ReplyAction="http://tempuri.org/IFuneralServices/SaveAddonProductsResponse")]
        System.Threading.Tasks.Task<int> SaveAddonProductsAsync(Funeral.Model.MemberAddonProductsModel model);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFuneralServicesChannel : Funeral.Web.FuneralServiceReference.IFuneralServices, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FuneralServicesClient : System.ServiceModel.ClientBase<Funeral.Web.FuneralServiceReference.IFuneralServices>, Funeral.Web.FuneralServiceReference.IFuneralServices {
        
        public FuneralServicesClient() {
        }
        
        public FuneralServicesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FuneralServicesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FuneralServicesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FuneralServicesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Funeral.Model.FuneralServiceManageModel[] SelectFuneralManageServiceByParlID(System.Guid ParlourId, int PageSize, int PageNum, string Keyword, string SortBy, string SortOrder) {
            return base.Channel.SelectFuneralManageServiceByParlID(ParlourId, PageSize, PageNum, Keyword, SortBy, SortOrder);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.FuneralServiceManageModel[]> SelectFuneralManageServiceByParlIDAsync(System.Guid ParlourId, int PageSize, int PageNum, string Keyword, string SortBy, string SortOrder) {
            return base.Channel.SelectFuneralManageServiceByParlIDAsync(ParlourId, PageSize, PageNum, Keyword, SortBy, SortOrder);
        }
        
        public int SaveFuneralManageService(Funeral.Model.FuneralServiceManageModel Model1) {
            return base.Channel.SaveFuneralManageService(Model1);
        }
        
        public System.Threading.Tasks.Task<int> SaveFuneralManageServiceAsync(Funeral.Model.FuneralServiceManageModel Model1) {
            return base.Channel.SaveFuneralManageServiceAsync(Model1);
        }
        
        public Funeral.Model.FuneralServiceManageModel SelectFuneralManageServiceByParlANdID(int pkiServiceID, System.Guid ParlourId) {
            return base.Channel.SelectFuneralManageServiceByParlANdID(pkiServiceID, ParlourId);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.FuneralServiceManageModel> SelectFuneralManageServiceByParlANdIDAsync(int pkiServiceID, System.Guid ParlourId) {
            return base.Channel.SelectFuneralManageServiceByParlANdIDAsync(pkiServiceID, ParlourId);
        }
        
        public int DeleteFuneralManageServiceById(int pkiServiceID) {
            return base.Channel.DeleteFuneralManageServiceById(pkiServiceID);
        }
        
        public System.Threading.Tasks.Task<int> DeleteFuneralManageServiceByIdAsync(int pkiServiceID) {
            return base.Channel.DeleteFuneralManageServiceByIdAsync(pkiServiceID);
        }
        
        public Funeral.Model.ApplicationSettingsModel[] GetAllApplicationList(System.Guid parlourid, int param, int AppID) {
            return base.Channel.GetAllApplicationList(parlourid, param, AppID);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.ApplicationSettingsModel[]> GetAllApplicationListAsync(System.Guid parlourid, int param, int AppID) {
            return base.Channel.GetAllApplicationListAsync(parlourid, param, AppID);
        }
        
        public Funeral.Model.ApplicationSettingsModel GetAllApplicationList2(System.Guid parlourid, int param, int AppID) {
            return base.Channel.GetAllApplicationList2(parlourid, param, AppID);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.ApplicationSettingsModel> GetAllApplicationList2Async(System.Guid parlourid, int param, int AppID) {
            return base.Channel.GetAllApplicationList2Async(parlourid, param, AppID);
        }
        
        public Funeral.Model.SecureUserGroupsModel[] GetSuperUserAccessByID(int ID, System.Guid ParlourId) {
            return base.Channel.GetSuperUserAccessByID(ID, ParlourId);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.SecureUserGroupsModel[]> GetSuperUserAccessByIDAsync(int ID, System.Guid ParlourId) {
            return base.Channel.GetSuperUserAccessByIDAsync(ID, ParlourId);
        }
        
        public int SaveClaims(Funeral.Model.ClaimsModel model) {
            return base.Channel.SaveClaims(model);
        }
        
        public System.Threading.Tasks.Task<int> SaveClaimsAsync(Funeral.Model.ClaimsModel model) {
            return base.Channel.SaveClaimsAsync(model);
        }
        
        public Funeral.Model.ClaimsModel[] SelectAllClaimsByParlourId(System.Guid ParlourId, int PageSize, int PageNum, string Keyword, string SortBy, string SortOrder, System.DateTime DateFrom, System.DateTime DateTo) {
            return base.Channel.SelectAllClaimsByParlourId(ParlourId, PageSize, PageNum, Keyword, SortBy, SortOrder, DateFrom, DateTo);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.ClaimsModel[]> SelectAllClaimsByParlourIdAsync(System.Guid ParlourId, int PageSize, int PageNum, string Keyword, string SortBy, string SortOrder, System.DateTime DateFrom, System.DateTime DateTo) {
            return base.Channel.SelectAllClaimsByParlourIdAsync(ParlourId, PageSize, PageNum, Keyword, SortBy, SortOrder, DateFrom, DateTo);
        }
        
        public int ClaimsDelete(int ID, string UserName) {
            return base.Channel.ClaimsDelete(ID, UserName);
        }
        
        public System.Threading.Tasks.Task<int> ClaimsDeleteAsync(int ID, string UserName) {
            return base.Channel.ClaimsDeleteAsync(ID, UserName);
        }
        
        public Funeral.Model.ClaimsViewModel SelectAllClaimsBySearch(System.Guid ParlourId, int PageSize, int PageNum, string Keyword, string SortBy, string SortOrder, bool ClaimingForMember, bool ApplyWaitingPeriod) {
            return base.Channel.SelectAllClaimsBySearch(ParlourId, PageSize, PageNum, Keyword, SortBy, SortOrder, ClaimingForMember, ApplyWaitingPeriod);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.ClaimsViewModel> SelectAllClaimsBySearchAsync(System.Guid ParlourId, int PageSize, int PageNum, string Keyword, string SortBy, string SortOrder, bool ClaimingForMember, bool ApplyWaitingPeriod) {
            return base.Channel.SelectAllClaimsBySearchAsync(ParlourId, PageSize, PageNum, Keyword, SortBy, SortOrder, ClaimingForMember, ApplyWaitingPeriod);
        }
        
        public Funeral.Model.ClaimsModel[] GetClaimsbyMemeberNumber(int MemeberNo) {
            return base.Channel.GetClaimsbyMemeberNumber(MemeberNo);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.ClaimsModel[]> GetClaimsbyMemeberNumberAsync(int MemeberNo) {
            return base.Channel.GetClaimsbyMemeberNumberAsync(MemeberNo);
        }
        
        public Funeral.Model.ClaimsModel SelectClaimsBypkid(int ID, System.Guid ParlourId) {
            return base.Channel.SelectClaimsBypkid(ID, ParlourId);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.ClaimsModel> SelectClaimsBypkidAsync(int ID, System.Guid ParlourId) {
            return base.Channel.SelectClaimsBypkidAsync(ID, ParlourId);
        }
        
        public Funeral.Model.MembersModel[] SelectMembersAndDependencies1(System.Guid ParlourId, bool MainMem, string Keyword) {
            return base.Channel.SelectMembersAndDependencies1(ParlourId, MainMem, Keyword);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.MembersModel[]> SelectMembersAndDependencies1Async(System.Guid ParlourId, bool MainMem, string Keyword) {
            return base.Channel.SelectMembersAndDependencies1Async(ParlourId, MainMem, Keyword);
        }
        
        public Funeral.Model.FamilyDependencyModel[] SelectMembersAndDependencies2(System.Guid ParlourId, bool MainMem, string Keyword) {
            return base.Channel.SelectMembersAndDependencies2(ParlourId, MainMem, Keyword);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.FamilyDependencyModel[]> SelectMembersAndDependencies2Async(System.Guid ParlourId, bool MainMem, string Keyword) {
            return base.Channel.SelectMembersAndDependencies2Async(ParlourId, MainMem, Keyword);
        }
        
        public Funeral.Model.MembersModel selectMemberByPkidAndParlor(System.Guid ParlourId, int MemId) {
            return base.Channel.selectMemberByPkidAndParlor(ParlourId, MemId);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.MembersModel> selectMemberByPkidAndParlorAsync(System.Guid ParlourId, int MemId) {
            return base.Channel.selectMemberByPkidAndParlorAsync(ParlourId, MemId);
        }
        
        public Funeral.Model.PlanModel GetPlanDetailsByPlanId(int planid) {
            return base.Channel.GetPlanDetailsByPlanId(planid);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.PlanModel> GetPlanDetailsByPlanIdAsync(int planid) {
            return base.Channel.GetPlanDetailsByPlanIdAsync(planid);
        }
        
        public int UpdateMemberNumber(int ID, string MemberNumber, string Claimnumber) {
            return base.Channel.UpdateMemberNumber(ID, MemberNumber, Claimnumber);
        }
        
        public System.Threading.Tasks.Task<int> UpdateMemberNumberAsync(int ID, string MemberNumber, string Claimnumber) {
            return base.Channel.UpdateMemberNumberAsync(ID, MemberNumber, Claimnumber);
        }
        
        public int UpdateClaimStatus(int ID, string status) {
            return base.Channel.UpdateClaimStatus(ID, status);
        }
        
        public System.Threading.Tasks.Task<int> UpdateClaimStatusAsync(int ID, string status) {
            return base.Channel.UpdateClaimStatusAsync(ID, status);
        }
        
        public int SaveClaimSupportedDocument(Funeral.Model.ClaimDocumentModel model) {
            return base.Channel.SaveClaimSupportedDocument(model);
        }
        
        public System.Threading.Tasks.Task<int> SaveClaimSupportedDocumentAsync(Funeral.Model.ClaimDocumentModel model) {
            return base.Channel.SaveClaimSupportedDocumentAsync(model);
        }
        
        public Funeral.Model.ClaimDocumentModel[] SelectClaimDocumentsByClaimId(int fkiClaimID) {
            return base.Channel.SelectClaimDocumentsByClaimId(fkiClaimID);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.ClaimDocumentModel[]> SelectClaimDocumentsByClaimIdAsync(int fkiClaimID) {
            return base.Channel.SelectClaimDocumentsByClaimIdAsync(fkiClaimID);
        }
        
        public int DeleteClaimsdocumentById(int pkiClaimPictureID) {
            return base.Channel.DeleteClaimsdocumentById(pkiClaimPictureID);
        }
        
        public System.Threading.Tasks.Task<int> DeleteClaimsdocumentByIdAsync(int pkiClaimPictureID) {
            return base.Channel.DeleteClaimsdocumentByIdAsync(pkiClaimPictureID);
        }
        
        public Funeral.Model.ClaimDocumentModel SelectClaimsDocumentsByPKId(int DocumentId) {
            return base.Channel.SelectClaimsDocumentsByPKId(DocumentId);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.ClaimDocumentModel> SelectClaimsDocumentsByPKIdAsync(int DocumentId) {
            return base.Channel.SelectClaimsDocumentsByPKIdAsync(DocumentId);
        }
        
        public Funeral.Model.NewMemberInvoiceModel GetInvoiceByid(int InvoiceId) {
            return base.Channel.GetInvoiceByid(InvoiceId);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.NewMemberInvoiceModel> GetInvoiceByidAsync(int InvoiceId) {
            return base.Channel.GetInvoiceByidAsync(InvoiceId);
        }
        
        public System.Data.DataTable PolicyStatusPieChart(System.Guid parlourid) {
            return base.Channel.PolicyStatusPieChart(parlourid);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> PolicyStatusPieChartAsync(System.Guid parlourid) {
            return base.Channel.PolicyStatusPieChartAsync(parlourid);
        }
        
        public Funeral.Model.PolicyPremiumDashboardModel[] SelectPolicyPremiumByParlourId(System.Guid ParlourId, int PageSize, int PageNum, string Keyword, string SortBy, string SortOrder, bool isAdmin, bool isSuperUser, string UserName) {
            return base.Channel.SelectPolicyPremiumByParlourId(ParlourId, PageSize, PageNum, Keyword, SortBy, SortOrder, isAdmin, isSuperUser, UserName);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.PolicyPremiumDashboardModel[]> SelectPolicyPremiumByParlourIdAsync(System.Guid ParlourId, int PageSize, int PageNum, string Keyword, string SortBy, string SortOrder, bool isAdmin, bool isSuperUser, string UserName) {
            return base.Channel.SelectPolicyPremiumByParlourIdAsync(ParlourId, PageSize, PageNum, Keyword, SortBy, SortOrder, isAdmin, isSuperUser, UserName);
        }
        
        public int TombStonesPaymentSave(Funeral.Model.TombStonesPaymentModel model) {
            return base.Channel.TombStonesPaymentSave(model);
        }
        
        public System.Threading.Tasks.Task<int> TombStonesPaymentSaveAsync(Funeral.Model.TombStonesPaymentModel model) {
            return base.Channel.TombStonesPaymentSaveAsync(model);
        }
        
        public Funeral.Model.TombStonesPaymentModel TombStonesPaymentSelect(System.Guid ParlourId, int InvoiceId) {
            return base.Channel.TombStonesPaymentSelect(ParlourId, InvoiceId);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.TombStonesPaymentModel> TombStonesPaymentSelectAsync(System.Guid ParlourId, int InvoiceId) {
            return base.Channel.TombStonesPaymentSelectAsync(ParlourId, InvoiceId);
        }
        
        public Funeral.Model.TombStonesPaymentModel[] TombStonesPaymentSelectByTombstoneId(System.Guid ParlourId, int TombstoneId) {
            return base.Channel.TombStonesPaymentSelectByTombstoneId(ParlourId, TombstoneId);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.TombStonesPaymentModel[]> TombStonesPaymentSelectByTombstoneIdAsync(System.Guid ParlourId, int TombstoneId) {
            return base.Channel.TombStonesPaymentSelectByTombstoneIdAsync(ParlourId, TombstoneId);
        }
        
        public int GetPrintCounter(int invoiceId, System.Guid parlourId) {
            return base.Channel.GetPrintCounter(invoiceId, parlourId);
        }
        
        public System.Threading.Tasks.Task<int> GetPrintCounterAsync(int invoiceId, System.Guid parlourId) {
            return base.Channel.GetPrintCounterAsync(invoiceId, parlourId);
        }
        
        public Funeral.Model.PackageServiceModel[] GetAllPackage(System.Guid parlourId) {
            return base.Channel.GetAllPackage(parlourId);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.PackageServiceModel[]> GetAllPackageAsync(System.Guid parlourId) {
            return base.Channel.GetAllPackageAsync(parlourId);
        }
        
        public Funeral.Model.PackageServicesSelectionModel[] GetPackageService(System.Guid parlourId, string PackageName) {
            return base.Channel.GetPackageService(parlourId, PackageName);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.PackageServicesSelectionModel[]> GetPackageServiceAsync(System.Guid parlourId, string PackageName) {
            return base.Channel.GetPackageServiceAsync(parlourId, PackageName);
        }
        
        public int SavePackage(Funeral.Model.PackageServiceModel model) {
            return base.Channel.SavePackage(model);
        }
        
        public System.Threading.Tasks.Task<int> SavePackageAsync(Funeral.Model.PackageServiceModel model) {
            return base.Channel.SavePackageAsync(model);
        }
        
        public int SavePackageService(Funeral.Model.PackageServiceModel model) {
            return base.Channel.SavePackageService(model);
        }
        
        public System.Threading.Tasks.Task<int> SavePackageServiceAsync(Funeral.Model.PackageServiceModel model) {
            return base.Channel.SavePackageServiceAsync(model);
        }
        
        public void DeletePackageService(int Id) {
            base.Channel.DeletePackageService(Id);
        }
        
        public System.Threading.Tasks.Task DeletePackageServiceAsync(int Id) {
            return base.Channel.DeletePackageServiceAsync(Id);
        }
        
        public Funeral.Model.PackageServicesSelectionModel[] GetPackageServiceByPackgeId(System.Guid ParlourId, int PackgeId) {
            return base.Channel.GetPackageServiceByPackgeId(ParlourId, PackgeId);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.PackageServicesSelectionModel[]> GetPackageServiceByPackgeIdAsync(System.Guid ParlourId, int PackgeId) {
            return base.Channel.GetPackageServiceByPackgeIdAsync(ParlourId, PackgeId);
        }
        
        public Funeral.Model.TombstonePackageModel[] GetTombstoneAllPackage(System.Guid ParlourId) {
            return base.Channel.GetTombstoneAllPackage(ParlourId);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.TombstonePackageModel[]> GetTombstoneAllPackageAsync(System.Guid ParlourId) {
            return base.Channel.GetTombstoneAllPackageAsync(ParlourId);
        }
        
        public int SaveTombstonePackage(Funeral.Model.TombstonePackageModel model) {
            return base.Channel.SaveTombstonePackage(model);
        }
        
        public System.Threading.Tasks.Task<int> SaveTombstonePackageAsync(Funeral.Model.TombstonePackageModel model) {
            return base.Channel.SaveTombstonePackageAsync(model);
        }
        
        public int SaveTombstonePackageService(Funeral.Model.TombstonePackageModel model) {
            return base.Channel.SaveTombstonePackageService(model);
        }
        
        public System.Threading.Tasks.Task<int> SaveTombstonePackageServiceAsync(Funeral.Model.TombstonePackageModel model) {
            return base.Channel.SaveTombstonePackageServiceAsync(model);
        }
        
        public void DeleteTombstonePackageService(int Id) {
            base.Channel.DeleteTombstonePackageService(Id);
        }
        
        public System.Threading.Tasks.Task DeleteTombstonePackageServiceAsync(int Id) {
            return base.Channel.DeleteTombstonePackageServiceAsync(Id);
        }
        
        public Funeral.Model.TombstonePackageModel[] GetTombstonePackageServiceByPackgeId(System.Guid ParlourId, int PackgeId) {
            return base.Channel.GetTombstonePackageServiceByPackgeId(ParlourId, PackgeId);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.TombstonePackageModel[]> GetTombstonePackageServiceByPackgeIdAsync(System.Guid ParlourId, int PackgeId) {
            return base.Channel.GetTombstonePackageServiceByPackgeIdAsync(ParlourId, PackgeId);
        }
        
        public void DeletePackage(int Id, System.Guid parlourId) {
            base.Channel.DeletePackage(Id, parlourId);
        }
        
        public System.Threading.Tasks.Task DeletePackageAsync(int Id, System.Guid parlourId) {
            return base.Channel.DeletePackageAsync(Id, parlourId);
        }
        
        public Funeral.Model.JoiningFeeModel JoiningFees(int memberId, System.Guid parlourId) {
            return base.Channel.JoiningFees(memberId, parlourId);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.JoiningFeeModel> JoiningFeesAsync(int memberId, System.Guid parlourId) {
            return base.Channel.JoiningFeesAsync(memberId, parlourId);
        }
        
        public int SaveCustomDetails(Funeral.Model.CustomDetails model) {
            return base.Channel.SaveCustomDetails(model);
        }
        
        public System.Threading.Tasks.Task<int> SaveCustomDetailsAsync(Funeral.Model.CustomDetails model) {
            return base.Channel.SaveCustomDetailsAsync(model);
        }
        
        public void UpdateCustomDetails(Funeral.Model.CustomDetails model) {
            base.Channel.UpdateCustomDetails(model);
        }
        
        public System.Threading.Tasks.Task UpdateCustomDetailsAsync(Funeral.Model.CustomDetails model) {
            return base.Channel.UpdateCustomDetailsAsync(model);
        }
        
        public Funeral.Model.CustomDetails GetCustomDetails(System.Guid ParlourId, int Id, int CustomType) {
            return base.Channel.GetCustomDetails(ParlourId, Id, CustomType);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.CustomDetails> GetCustomDetailsAsync(System.Guid ParlourId, int Id, int CustomType) {
            return base.Channel.GetCustomDetailsAsync(ParlourId, Id, CustomType);
        }
        
        public Funeral.Model.CustomDetails[] GetAllCustomDetailsByParlourId(System.Guid ParlourId, int CustomType) {
            return base.Channel.GetAllCustomDetailsByParlourId(ParlourId, CustomType);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.CustomDetails[]> GetAllCustomDetailsByParlourIdAsync(System.Guid ParlourId, int CustomType) {
            return base.Channel.GetAllCustomDetailsByParlourIdAsync(ParlourId, CustomType);
        }
        
        public void DeleteCustomDetails(Funeral.Model.CustomDetails model) {
            base.Channel.DeleteCustomDetails(model);
        }
        
        public System.Threading.Tasks.Task DeleteCustomDetailsAsync(Funeral.Model.CustomDetails model) {
            return base.Channel.DeleteCustomDetailsAsync(model);
        }
        
        public Funeral.Model.RightsModel[] tblRightGetAll() {
            return base.Channel.tblRightGetAll();
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.RightsModel[]> tblRightGetAllAsync() {
            return base.Channel.tblRightGetAllAsync();
        }
        
        public int SavetblRight(Funeral.Model.RightsModel model) {
            return base.Channel.SavetblRight(model);
        }
        
        public System.Threading.Tasks.Task<int> SavetblRightAsync(Funeral.Model.RightsModel model) {
            return base.Channel.SavetblRightAsync(model);
        }
        
        public Funeral.Model.RightsModel SelecttblRightById(int ID) {
            return base.Channel.SelecttblRightById(ID);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.RightsModel> SelecttblRightByIdAsync(int ID) {
            return base.Channel.SelecttblRightByIdAsync(ID);
        }
        
        public Funeral.Model.NewRightsModel[] GetRightsByGroupId(System.Guid ParlourId, int GroupId) {
            return base.Channel.GetRightsByGroupId(ParlourId, GroupId);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.NewRightsModel[]> GetRightsByGroupIdAsync(System.Guid ParlourId, int GroupId) {
            return base.Channel.GetRightsByGroupIdAsync(ParlourId, GroupId);
        }
        
        public Funeral.Model.tblPageModel[] GetAllActiveTblPages() {
            return base.Channel.GetAllActiveTblPages();
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.tblPageModel[]> GetAllActiveTblPagesAsync() {
            return base.Channel.GetAllActiveTblPagesAsync();
        }
        
        public int SaveTblRights(Funeral.Model.NewRightsModel model) {
            return base.Channel.SaveTblRights(model);
        }
        
        public System.Threading.Tasks.Task<int> SaveTblRightsAsync(Funeral.Model.NewRightsModel model) {
            return base.Channel.SaveTblRightsAsync(model);
        }
        
        public Funeral.Model.tblPageModel[] LoadSideMenu(System.Guid ParlourId, int UserId) {
            return base.Channel.LoadSideMenu(ParlourId, UserId);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.tblPageModel[]> LoadSideMenuAsync(System.Guid ParlourId, int UserId) {
            return base.Channel.LoadSideMenuAsync(ParlourId, UserId);
        }
        
        public int OtherPaymentsSave(Funeral.Model.OtherPaymentModel model) {
            return base.Channel.OtherPaymentsSave(model);
        }
        
        public System.Threading.Tasks.Task<int> OtherPaymentsSaveAsync(Funeral.Model.OtherPaymentModel model) {
            return base.Channel.OtherPaymentsSaveAsync(model);
        }
        
        public Funeral.Model.OtherPaymentModel[] OtherPaymentSelectByMemberId(int MemberId, System.Guid Parlourid) {
            return base.Channel.OtherPaymentSelectByMemberId(MemberId, Parlourid);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.OtherPaymentModel[]> OtherPaymentSelectByMemberIdAsync(int MemberId, System.Guid Parlourid) {
            return base.Channel.OtherPaymentSelectByMemberIdAsync(MemberId, Parlourid);
        }
        
        public Funeral.Model.OtherPaymentModel GetOtherPayment(int InvoiceId, System.Guid Parlourid) {
            return base.Channel.GetOtherPayment(InvoiceId, Parlourid);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.OtherPaymentModel> GetOtherPaymentAsync(int InvoiceId, System.Guid Parlourid) {
            return base.Channel.GetOtherPaymentAsync(InvoiceId, Parlourid);
        }
        
        public Funeral.Model.UnderwriterModel[] SelectAllUnderwriterByParlourId(System.Guid ParlourId, int PageSize, int PageNum, string Keyword, string SortBy, string SortOrder) {
            return base.Channel.SelectAllUnderwriterByParlourId(ParlourId, PageSize, PageNum, Keyword, SortBy, SortOrder);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.UnderwriterModel[]> SelectAllUnderwriterByParlourIdAsync(System.Guid ParlourId, int PageSize, int PageNum, string Keyword, string SortBy, string SortOrder) {
            return base.Channel.SelectAllUnderwriterByParlourIdAsync(ParlourId, PageSize, PageNum, Keyword, SortBy, SortOrder);
        }
        
        public int SaveUnderwriter(Funeral.Model.UnderwriterModel model) {
            return base.Channel.SaveUnderwriter(model);
        }
        
        public System.Threading.Tasks.Task<int> SaveUnderwriterAsync(Funeral.Model.UnderwriterModel model) {
            return base.Channel.SaveUnderwriterAsync(model);
        }
        
        public Funeral.Model.UnderwriterModel SelectUnderwriterBypkid(int ID, System.Guid ParlourId) {
            return base.Channel.SelectUnderwriterBypkid(ID, ParlourId);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.UnderwriterModel> SelectUnderwriterBypkidAsync(int ID, System.Guid ParlourId) {
            return base.Channel.SelectUnderwriterBypkidAsync(ID, ParlourId);
        }
        
        public int DeleteUnderwriterByID(int PkiUnderwriterId, string UserName) {
            return base.Channel.DeleteUnderwriterByID(PkiUnderwriterId, UserName);
        }
        
        public System.Threading.Tasks.Task<int> DeleteUnderwriterByIDAsync(int PkiUnderwriterId, string UserName) {
            return base.Channel.DeleteUnderwriterByIDAsync(PkiUnderwriterId, UserName);
        }
        
        public Funeral.Model.UnderwriterModel SelectUnderwriterByName(string UnderwriterName, System.Guid ParlourId) {
            return base.Channel.SelectUnderwriterByName(UnderwriterName, ParlourId);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.UnderwriterModel> SelectUnderwriterByNameAsync(string UnderwriterName, System.Guid ParlourId) {
            return base.Channel.SelectUnderwriterByNameAsync(UnderwriterName, ParlourId);
        }
        
        public Funeral.Model.UnderwriterModel[] SelectUnderwriterNotDeleted() {
            return base.Channel.SelectUnderwriterNotDeleted();
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.UnderwriterModel[]> SelectUnderwriterNotDeletedAsync() {
            return base.Channel.SelectUnderwriterNotDeletedAsync();
        }
        
        public Funeral.Model.StatusModel[] GetStatus(string associatedTable) {
            return base.Channel.GetStatus(associatedTable);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.StatusModel[]> GetStatusAsync(string associatedTable) {
            return base.Channel.GetStatusAsync(associatedTable);
        }
        
        public void MemberStatusChangeReason(Funeral.Model.ChangeStatusReason model) {
            base.Channel.MemberStatusChangeReason(model);
        }
        
        public System.Threading.Tasks.Task MemberStatusChangeReasonAsync(Funeral.Model.ChangeStatusReason model) {
            return base.Channel.MemberStatusChangeReasonAsync(model);
        }
        
        public void UpdateMemberStatus(System.Guid parlourId, int id, string status) {
            base.Channel.UpdateMemberStatus(parlourId, id, status);
        }
        
        public System.Threading.Tasks.Task UpdateMemberStatusAsync(System.Guid parlourId, int id, string status) {
            return base.Channel.UpdateMemberStatusAsync(parlourId, id, status);
        }
        
        public void SaveOrderMember(Funeral.Model.MembersModel model) {
            base.Channel.SaveOrderMember(model);
        }
        
        public System.Threading.Tasks.Task SaveOrderMemberAsync(Funeral.Model.MembersModel model) {
            return base.Channel.SaveOrderMemberAsync(model);
        }
        
        public Funeral.Model.DealershipLookupModel[] GetDealershipsLookup() {
            return base.Channel.GetDealershipsLookup();
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.DealershipLookupModel[]> GetDealershipsLookupAsync() {
            return base.Channel.GetDealershipsLookupAsync();
        }
        
        public Funeral.Model.DealershipLookupModel[] GetAllDealershipsLookup() {
            return base.Channel.GetAllDealershipsLookup();
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.DealershipLookupModel[]> GetAllDealershipsLookupAsync() {
            return base.Channel.GetAllDealershipsLookupAsync();
        }
        
        public Funeral.Model.StatusTypeLookupModel[] GetStatusTypeLookup() {
            return base.Channel.GetStatusTypeLookup();
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.StatusTypeLookupModel[]> GetStatusTypeLookupAsync() {
            return base.Channel.GetStatusTypeLookupAsync();
        }
        
        public Funeral.Model.DealerTypeLookupModel[] GetDealerTypeLookup() {
            return base.Channel.GetDealerTypeLookup();
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.DealerTypeLookupModel[]> GetDealerTypeLookupAsync() {
            return base.Channel.GetDealerTypeLookupAsync();
        }
        
        public Funeral.Model.ProvinceLookpmodel[] GetProvinceDropDown() {
            return base.Channel.GetProvinceDropDown();
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.ProvinceLookpmodel[]> GetProvinceDropDownAsync() {
            return base.Channel.GetProvinceDropDownAsync();
        }
        
        public Funeral.Model.DealershipLookupModel[] GetDealershipsDropDown() {
            return base.Channel.GetDealershipsDropDown();
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.DealershipLookupModel[]> GetDealershipsDropDownAsync() {
            return base.Channel.GetDealershipsDropDownAsync();
        }
        
        public Funeral.Model.DealerCommunicationStatusTypeModel[] DealerCommStatusDropDown() {
            return base.Channel.DealerCommStatusDropDown();
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.DealerCommunicationStatusTypeModel[]> DealerCommStatusDropDownAsync() {
            return base.Channel.DealerCommStatusDropDownAsync();
        }
        
        public string CheckDealershipExists(Funeral.Model.DealershipModel model) {
            return base.Channel.CheckDealershipExists(model);
        }
        
        public System.Threading.Tasks.Task<string> CheckDealershipExistsAsync(Funeral.Model.DealershipModel model) {
            return base.Channel.CheckDealershipExistsAsync(model);
        }
        
        public Funeral.Model.DealersViewModel SelectDealer(int DealerId, int PageSize, int PageNum, string Keyword, string SortBy, string SortOrder, string Username) {
            return base.Channel.SelectDealer(DealerId, PageSize, PageNum, Keyword, SortBy, SortOrder, Username);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.DealersViewModel> SelectDealerAsync(int DealerId, int PageSize, int PageNum, string Keyword, string SortBy, string SortOrder, string Username) {
            return base.Channel.SelectDealerAsync(DealerId, PageSize, PageNum, Keyword, SortBy, SortOrder, Username);
        }
        
        public Funeral.Model.DealersViewModel GetDealersList(string Username) {
            return base.Channel.GetDealersList(Username);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.DealersViewModel> GetDealersListAsync(string Username) {
            return base.Channel.GetDealersListAsync(Username);
        }
        
        public Funeral.Model.DealersViewModel GetDailyDealers(string Username, string Date) {
            return base.Channel.GetDailyDealers(Username, Date);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.DealersViewModel> GetDailyDealersAsync(string Username, string Date) {
            return base.Channel.GetDailyDealersAsync(Username, Date);
        }
        
        public Funeral.Model.DealerModel GetDealerById(int DealerId) {
            return base.Channel.GetDealerById(DealerId);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.DealerModel> GetDealerByIdAsync(int DealerId) {
            return base.Channel.GetDealerByIdAsync(DealerId);
        }
        
        public Funeral.Model.DealershipViewModel SelectAllDealerships(string Username) {
            return base.Channel.SelectAllDealerships(Username);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.DealershipViewModel> SelectAllDealershipsAsync(string Username) {
            return base.Channel.SelectAllDealershipsAsync(Username);
        }
        
        public Funeral.Model.DealershipViewModel SelectDealership(int PageSize, int PageNum, string Keyword, string Username) {
            return base.Channel.SelectDealership(PageSize, PageNum, Keyword, Username);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.DealershipViewModel> SelectDealershipAsync(int PageSize, int PageNum, string Keyword, string Username) {
            return base.Channel.SelectDealershipAsync(PageSize, PageNum, Keyword, Username);
        }
        
        public string GetDealerTotal(string username) {
            return base.Channel.GetDealerTotal(username);
        }
        
        public System.Threading.Tasks.Task<string> GetDealerTotalAsync(string username) {
            return base.Channel.GetDealerTotalAsync(username);
        }
        
        public Funeral.Model.MemberAddonProductsModel[] SelectMemberAddonProducts(int MemberID) {
            return base.Channel.SelectMemberAddonProducts(MemberID);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.MemberAddonProductsModel[]> SelectMemberAddonProductsAsync(int MemberID) {
            return base.Channel.SelectMemberAddonProductsAsync(MemberID);
        }
        
        public void MemberAddonProductsRemove(System.Guid MemberID) {
            base.Channel.MemberAddonProductsRemove(MemberID);
        }
        
        public System.Threading.Tasks.Task MemberAddonProductsRemoveAsync(System.Guid MemberID) {
            return base.Channel.MemberAddonProductsRemoveAsync(MemberID);
        }
        
        public Funeral.Model.AddonProductsModal[] MemberListBindAddonProduct(System.Guid pkiProductID) {
            return base.Channel.MemberListBindAddonProduct(pkiProductID);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.AddonProductsModal[]> MemberListBindAddonProductAsync(System.Guid pkiProductID) {
            return base.Channel.MemberListBindAddonProductAsync(pkiProductID);
        }
        
        public Funeral.Model.MemberAddonProductsModel[] SelectMembarAddonProductBypkiMemberProductID(System.Guid MemberID) {
            return base.Channel.SelectMembarAddonProductBypkiMemberProductID(MemberID);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.MemberAddonProductsModel[]> SelectMembarAddonProductBypkiMemberProductIDAsync(System.Guid MemberID) {
            return base.Channel.SelectMembarAddonProductBypkiMemberProductIDAsync(MemberID);
        }
        
        public int AddonProductUpdateMember(Funeral.Model.MemberAddonProductsModel model) {
            return base.Channel.AddonProductUpdateMember(model);
        }
        
        public System.Threading.Tasks.Task<int> AddonProductUpdateMemberAsync(Funeral.Model.MemberAddonProductsModel model) {
            return base.Channel.AddonProductUpdateMemberAsync(model);
        }
        
        public int SaveSupportDocument(Funeral.Model.SupportedDocumentModel model) {
            return base.Channel.SaveSupportDocument(model);
        }
        
        public System.Threading.Tasks.Task<int> SaveSupportDocumentAsync(Funeral.Model.SupportedDocumentModel model) {
            return base.Channel.SaveSupportDocumentAsync(model);
        }
        
        public Funeral.Model.SupportedDocumentModel[] SelectSupportDocumentsByMemberId(int MemberID) {
            return base.Channel.SelectSupportDocumentsByMemberId(MemberID);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.SupportedDocumentModel[]> SelectSupportDocumentsByMemberIdAsync(int MemberID) {
            return base.Channel.SelectSupportDocumentsByMemberIdAsync(MemberID);
        }
        
        public Funeral.Model.FamilyDependencyTypeModel[] GetAllFamilyDependencyTypes() {
            return base.Channel.GetAllFamilyDependencyTypes();
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.FamilyDependencyTypeModel[]> GetAllFamilyDependencyTypesAsync() {
            return base.Channel.GetAllFamilyDependencyTypesAsync();
        }
        
        public int SaveVehicle(Funeral.Model.VehiclesModel model) {
            return base.Channel.SaveVehicle(model);
        }
        
        public System.Threading.Tasks.Task<int> SaveVehicleAsync(Funeral.Model.VehiclesModel model) {
            return base.Channel.SaveVehicleAsync(model);
        }
        
        public Funeral.Model.VehiclesModel GetVehicleByVinNo(string VinNo, System.Guid ParlourId, int MemberID) {
            return base.Channel.GetVehicleByVinNo(VinNo, ParlourId, MemberID);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.VehiclesModel> GetVehicleByVinNoAsync(string VinNo, System.Guid ParlourId, int MemberID) {
            return base.Channel.GetVehicleByVinNoAsync(VinNo, ParlourId, MemberID);
        }
        
        public Funeral.Model.VehiclesModel[] GetVehicleByMemberID(int MemberId) {
            return base.Channel.GetVehicleByMemberID(MemberId);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.VehiclesModel[]> GetVehicleByMemberIDAsync(int MemberId) {
            return base.Channel.GetVehicleByMemberIDAsync(MemberId);
        }
        
        public int UpdateFamilyDependency(Funeral.Model.FamilyDependencyModel model) {
            return base.Channel.UpdateFamilyDependency(model);
        }
        
        public System.Threading.Tasks.Task<int> UpdateFamilyDependencyAsync(Funeral.Model.FamilyDependencyModel model) {
            return base.Channel.UpdateFamilyDependencyAsync(model);
        }
        
        public int UpdateVehicle(Funeral.Model.VehiclesModel model) {
            return base.Channel.UpdateVehicle(model);
        }
        
        public System.Threading.Tasks.Task<int> UpdateVehicleAsync(Funeral.Model.VehiclesModel model) {
            return base.Channel.UpdateVehicleAsync(model);
        }
        
        public Funeral.Model.VehiclesModel SelectVehicleByVehicleId(int pkiVehicleID) {
            return base.Channel.SelectVehicleByVehicleId(pkiVehicleID);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.VehiclesModel> SelectVehicleByVehicleIdAsync(int pkiVehicleID) {
            return base.Channel.SelectVehicleByVehicleIdAsync(pkiVehicleID);
        }
        
        public Funeral.Model.RelationShipModel[] SelectRelationship() {
            return base.Channel.SelectRelationship();
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.RelationShipModel[]> SelectRelationshipAsync() {
            return base.Channel.SelectRelationshipAsync();
        }
        
        public bool DeleteDependentById(int dependentId) {
            return base.Channel.DeleteDependentById(dependentId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteDependentByIdAsync(int dependentId) {
            return base.Channel.DeleteDependentByIdAsync(dependentId);
        }
        
        public bool DeleteSUpportdocumentById(int DocumentId) {
            return base.Channel.DeleteSUpportdocumentById(DocumentId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteSUpportdocumentByIdAsync(int DocumentId) {
            return base.Channel.DeleteSUpportdocumentByIdAsync(DocumentId);
        }
        
        public Funeral.Model.BankModel[] GetAllBank() {
            return base.Channel.GetAllBank();
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.BankModel[]> GetAllBankAsync() {
            return base.Channel.GetAllBankAsync();
        }
        
        public Funeral.Model.BankModel SelectBankByID(int Id) {
            return base.Channel.SelectBankByID(Id);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.BankModel> SelectBankByIDAsync(int Id) {
            return base.Channel.SelectBankByIDAsync(Id);
        }
        
        public Funeral.Model.BankModel[] GetLastBank() {
            return base.Channel.GetLastBank();
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.BankModel[]> GetLastBankAsync() {
            return base.Channel.GetLastBankAsync();
        }
        
        public string GetMemberNumber(System.Guid ParlourId) {
            return base.Channel.GetMemberNumber(ParlourId);
        }
        
        public System.Threading.Tasks.Task<string> GetMemberNumberAsync(System.Guid ParlourId) {
            return base.Channel.GetMemberNumberAsync(ParlourId);
        }
        
        public Funeral.Model.AccountTypeModel[] AccountTypeSelectAll() {
            return base.Channel.AccountTypeSelectAll();
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.AccountTypeModel[]> AccountTypeSelectAllAsync() {
            return base.Channel.AccountTypeSelectAllAsync();
        }
        
        public Funeral.Model.CountryModel[] GetCountry() {
            return base.Channel.GetCountry();
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.CountryModel[]> GetCountryAsync() {
            return base.Channel.GetCountryAsync();
        }
        
        public double SumPremium(int fkiMemberid, System.Guid ParlourId) {
            return base.Channel.SumPremium(fkiMemberid, ParlourId);
        }
        
        public System.Threading.Tasks.Task<double> SumPremiumAsync(int fkiMemberid, System.Guid ParlourId) {
            return base.Channel.SumPremiumAsync(fkiMemberid, ParlourId);
        }
        
        public Funeral.Model.MembersPaymentViewModel GetAllPayentMembers(System.Guid ParlourId, string PolicyNo, string IDNumber, int PageSize, int PageNum, string SortBy, string SortOrder) {
            return base.Channel.GetAllPayentMembers(ParlourId, PolicyNo, IDNumber, PageSize, PageNum, SortBy, SortOrder);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.MembersPaymentViewModel> GetAllPayentMembersAsync(System.Guid ParlourId, string PolicyNo, string IDNumber, int PageSize, int PageNum, string SortBy, string SortOrder) {
            return base.Channel.GetAllPayentMembersAsync(ParlourId, PolicyNo, IDNumber, PageSize, PageNum, SortBy, SortOrder);
        }
        
        public Funeral.Model.MembersPaymentDetailsModel GetMemberPaymnetDetailsByID(int ID) {
            return base.Channel.GetMemberPaymnetDetailsByID(ID);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.MembersPaymentDetailsModel> GetMemberPaymnetDetailsByIDAsync(int ID) {
            return base.Channel.GetMemberPaymnetDetailsByIDAsync(ID);
        }
        
        public Funeral.Model.MembersPaymentDetailsModel GetMemberPlanDetailsWithBalance(string MemberNo, System.Guid ParlourId) {
            return base.Channel.GetMemberPlanDetailsWithBalance(MemberNo, ParlourId);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.MembersPaymentDetailsModel> GetMemberPlanDetailsWithBalanceAsync(string MemberNo, System.Guid ParlourId) {
            return base.Channel.GetMemberPlanDetailsWithBalanceAsync(MemberNo, ParlourId);
        }
        
        public Funeral.Model.MembersPaymentDetailsModel GetMemberPlanDetailsWithByMemberNo(string MemberNo) {
            return base.Channel.GetMemberPlanDetailsWithByMemberNo(MemberNo);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.MembersPaymentDetailsModel> GetMemberPlanDetailsWithByMemberNoAsync(string MemberNo) {
            return base.Channel.GetMemberPlanDetailsWithByMemberNoAsync(MemberNo);
        }
        
        public int AddPayments(Funeral.Model.MembersPaymentDetailsModel model, bool IsJoiningFee) {
            return base.Channel.AddPayments(model, IsJoiningFee);
        }
        
        public System.Threading.Tasks.Task<int> AddPaymentsAsync(Funeral.Model.MembersPaymentDetailsModel model, bool IsJoiningFee) {
            return base.Channel.AddPaymentsAsync(model, IsJoiningFee);
        }
        
        public int AddReversalPayments(int InvoiceId, string UserId, System.Guid Parlourid) {
            return base.Channel.AddReversalPayments(InvoiceId, UserId, Parlourid);
        }
        
        public System.Threading.Tasks.Task<int> AddReversalPaymentsAsync(int InvoiceId, string UserId, System.Guid Parlourid) {
            return base.Channel.AddReversalPaymentsAsync(InvoiceId, UserId, Parlourid);
        }
        
        public int AddFuneralPayments(Funeral.Model.FuneralPaymentsModel model) {
            return base.Channel.AddFuneralPayments(model);
        }
        
        public System.Threading.Tasks.Task<int> AddFuneralPaymentsAsync(Funeral.Model.FuneralPaymentsModel model) {
            return base.Channel.AddFuneralPaymentsAsync(model);
        }
        
        public Funeral.Model.FuneralPaymentsModel[] ReturnFuneralPayments(System.Guid parlourid, string pIntFnrlID) {
            return base.Channel.ReturnFuneralPayments(parlourid, pIntFnrlID);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.FuneralPaymentsModel[]> ReturnFuneralPaymentsAsync(System.Guid parlourid, string pIntFnrlID) {
            return base.Channel.ReturnFuneralPaymentsAsync(parlourid, pIntFnrlID);
        }
        
        public Funeral.Model.FuneralPaymentsModel[] ReturnMemberPayment(string intMemberID) {
            return base.Channel.ReturnMemberPayment(intMemberID);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.FuneralPaymentsModel[]> ReturnMemberPaymentAsync(string intMemberID) {
            return base.Channel.ReturnMemberPaymentAsync(intMemberID);
        }
        
        public string[] GetDistinctPolicyStatusList() {
            return base.Channel.GetDistinctPolicyStatusList();
        }
        
        public System.Threading.Tasks.Task<string[]> GetDistinctPolicyStatusListAsync() {
            return base.Channel.GetDistinctPolicyStatusListAsync();
        }
        
        public Funeral.Model.AgentModel[] GetAllAgent(System.Guid ParlourId) {
            return base.Channel.GetAllAgent(ParlourId);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.AgentModel[]> GetAllAgentAsync(System.Guid ParlourId) {
            return base.Channel.GetAllAgentAsync(ParlourId);
        }
        
        public int InsertSendReminder(Funeral.Model.SendReminderModel model) {
            return base.Channel.InsertSendReminder(model);
        }
        
        public System.Threading.Tasks.Task<int> InsertSendReminderAsync(Funeral.Model.SendReminderModel model) {
            return base.Channel.InsertSendReminderAsync(model);
        }
        
        public int SaveQuotation(Funeral.Model.QuotationModel model) {
            return base.Channel.SaveQuotation(model);
        }
        
        public System.Threading.Tasks.Task<int> SaveQuotationAsync(Funeral.Model.QuotationModel model) {
            return base.Channel.SaveQuotationAsync(model);
        }
        
        public int UpdateQuotation(Funeral.Model.QuotationModel model) {
            return base.Channel.UpdateQuotation(model);
        }
        
        public System.Threading.Tasks.Task<int> UpdateQuotationAsync(Funeral.Model.QuotationModel model) {
            return base.Channel.UpdateQuotationAsync(model);
        }
        
        public int DeleteQuotation(int ID, string UserName) {
            return base.Channel.DeleteQuotation(ID, UserName);
        }
        
        public System.Threading.Tasks.Task<int> DeleteQuotationAsync(int ID, string UserName) {
            return base.Channel.DeleteQuotationAsync(ID, UserName);
        }
        
        public Funeral.Model.QuotationModel SelectQuotationByQuotationId(int ID, System.Guid ParlourId) {
            return base.Channel.SelectQuotationByQuotationId(ID, ParlourId);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.QuotationModel> SelectQuotationByQuotationIdAsync(int ID, System.Guid ParlourId) {
            return base.Channel.SelectQuotationByQuotationIdAsync(ID, ParlourId);
        }
        
        public Funeral.Model.QuotationModel[] GetAllQuotationByParlourId(System.Guid ParlourId, int PageSize, int PageNum, string Keyword, string SortBy, string SortOrder) {
            return base.Channel.GetAllQuotationByParlourId(ParlourId, PageSize, PageNum, Keyword, SortBy, SortOrder);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.QuotationModel[]> GetAllQuotationByParlourIdAsync(System.Guid ParlourId, int PageSize, int PageNum, string Keyword, string SortBy, string SortOrder) {
            return base.Channel.GetAllQuotationByParlourIdAsync(ParlourId, PageSize, PageNum, Keyword, SortBy, SortOrder);
        }
        
        public Funeral.Model.QuotationModel[] GetQuotationNumberByID(System.Guid ParlourId) {
            return base.Channel.GetQuotationNumberByID(ParlourId);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.QuotationModel[]> GetQuotationNumberByIDAsync(System.Guid ParlourId) {
            return base.Channel.GetQuotationNumberByIDAsync(ParlourId);
        }
        
        public Funeral.Model.QuotationServicesModel[] GetAllQuotationServices(System.Guid ParlourId) {
            return base.Channel.GetAllQuotationServices(ParlourId);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.QuotationServicesModel[]> GetAllQuotationServicesAsync(System.Guid ParlourId) {
            return base.Channel.GetAllQuotationServicesAsync(ParlourId);
        }
        
        public Funeral.Model.QuotationServicesModel GetServiceByID(int ID) {
            return base.Channel.GetServiceByID(ID);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.QuotationServicesModel> GetServiceByIDAsync(int ID) {
            return base.Channel.GetServiceByIDAsync(ID);
        }
        
        public int SaveService(Funeral.Model.QuotationServicesModel model) {
            return base.Channel.SaveService(model);
        }
        
        public System.Threading.Tasks.Task<int> SaveServiceAsync(Funeral.Model.QuotationServicesModel model) {
            return base.Channel.SaveServiceAsync(model);
        }
        
        public Funeral.Model.QuotationServicesModel[] SelectServiceByQoutationID(int QuotationID) {
            return base.Channel.SelectServiceByQoutationID(QuotationID);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.QuotationServicesModel[]> SelectServiceByQoutationIDAsync(int QuotationID) {
            return base.Channel.SelectServiceByQoutationIDAsync(QuotationID);
        }
        
        public int DeleteServiceByID(int pkiQuotationSelectionID) {
            return base.Channel.DeleteServiceByID(pkiQuotationSelectionID);
        }
        
        public System.Threading.Tasks.Task<int> DeleteServiceByIDAsync(int pkiQuotationSelectionID) {
            return base.Channel.DeleteServiceByIDAsync(pkiQuotationSelectionID);
        }
        
        public Funeral.Model.QuotationModel GetQuotationNumberByID2(System.Guid ParlourId) {
            return base.Channel.GetQuotationNumberByID2(ParlourId);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.QuotationModel> GetQuotationNumberByID2Async(System.Guid ParlourId) {
            return base.Channel.GetQuotationNumberByID2Async(ParlourId);
        }
        
        public int UpdateAllData(int QuotationID, string Notes, string QuotationNumber) {
            return base.Channel.UpdateAllData(QuotationID, Notes, QuotationNumber);
        }
        
        public System.Threading.Tasks.Task<int> UpdateAllDataAsync(int QuotationID, string Notes, string QuotationNumber) {
            return base.Channel.UpdateAllDataAsync(QuotationID, Notes, QuotationNumber);
        }
        
        public int SaveDiscountAndAmount(Funeral.Model.QuotationDiscountModel model) {
            return base.Channel.SaveDiscountAndAmount(model);
        }
        
        public System.Threading.Tasks.Task<int> SaveDiscountAndAmountAsync(Funeral.Model.QuotationDiscountModel model) {
            return base.Channel.SaveDiscountAndAmountAsync(model);
        }
        
        public Funeral.Model.QuotationDiscountModel GetAllQuotationDiscounts(int QuotationID) {
            return base.Channel.GetAllQuotationDiscounts(QuotationID);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.QuotationDiscountModel> GetAllQuotationDiscountsAsync(int QuotationID) {
            return base.Channel.GetAllQuotationDiscountsAsync(QuotationID);
        }
        
        public Funeral.Model.QuotationServicesModel SelectServiceByQouAndID(int QuotationID, int pkiQuotationSelectionID) {
            return base.Channel.SelectServiceByQouAndID(QuotationID, pkiQuotationSelectionID);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.QuotationServicesModel> SelectServiceByQouAndIDAsync(int QuotationID, int pkiQuotationSelectionID) {
            return base.Channel.SelectServiceByQouAndIDAsync(QuotationID, pkiQuotationSelectionID);
        }
        
        public int SaveQuotationMessage(Funeral.Model.QuotationMessageModel model) {
            return base.Channel.SaveQuotationMessage(model);
        }
        
        public System.Threading.Tasks.Task<int> SaveQuotationMessageAsync(Funeral.Model.QuotationMessageModel model) {
            return base.Channel.SaveQuotationMessageAsync(model);
        }
        
        public Funeral.Model.QuotationMessageModel SelectQuotationMessageByID(int QuotationID) {
            return base.Channel.SelectQuotationMessageByID(QuotationID);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.QuotationMessageModel> SelectQuotationMessageByIDAsync(int QuotationID) {
            return base.Channel.SelectQuotationMessageByIDAsync(QuotationID);
        }
        
        public int SaveQuotationTaxAndDiscount(int QuotationID, decimal Tax, decimal Discount) {
            return base.Channel.SaveQuotationTaxAndDiscount(QuotationID, Tax, Discount);
        }
        
        public System.Threading.Tasks.Task<int> SaveQuotationTaxAndDiscountAsync(int QuotationID, decimal Tax, decimal Discount) {
            return base.Channel.SaveQuotationTaxAndDiscountAsync(QuotationID, Tax, Discount);
        }
        
        public int QuotationStatus(int QuotationID, System.Guid parlourid, string status) {
            return base.Channel.QuotationStatus(QuotationID, parlourid, status);
        }
        
        public System.Threading.Tasks.Task<int> QuotationStatusAsync(int QuotationID, System.Guid parlourid, string status) {
            return base.Channel.QuotationStatusAsync(QuotationID, parlourid, status);
        }
        
        public Funeral.Model.FuneralModel[] SelectAllFuneralByParlourId(System.Guid ParlourId, int PageSize, int PageNum, string Keyword, string SortBy, string SortOrder) {
            return base.Channel.SelectAllFuneralByParlourId(ParlourId, PageSize, PageNum, Keyword, SortBy, SortOrder);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.FuneralModel[]> SelectAllFuneralByParlourIdAsync(System.Guid ParlourId, int PageSize, int PageNum, string Keyword, string SortBy, string SortOrder) {
            return base.Channel.SelectAllFuneralByParlourIdAsync(ParlourId, PageSize, PageNum, Keyword, SortBy, SortOrder);
        }
        
        public int FuneralDelete(int ID, string UserName) {
            return base.Channel.FuneralDelete(ID, UserName);
        }
        
        public System.Threading.Tasks.Task<int> FuneralDeleteAsync(int ID, string UserName) {
            return base.Channel.FuneralDeleteAsync(ID, UserName);
        }
        
        public int SaveFuneral(Funeral.Model.FuneralModel model) {
            return base.Channel.SaveFuneral(model);
        }
        
        public System.Threading.Tasks.Task<int> SaveFuneralAsync(Funeral.Model.FuneralModel model) {
            return base.Channel.SaveFuneralAsync(model);
        }
        
        public Funeral.Model.FuneralModel SelectFuneralBypkid(int ID, System.Guid ParlourId) {
            return base.Channel.SelectFuneralBypkid(ID, ParlourId);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.FuneralModel> SelectFuneralBypkidAsync(int ID, System.Guid ParlourId) {
            return base.Channel.SelectFuneralBypkidAsync(ID, ParlourId);
        }
        
        public Funeral.Model.FuneralModel SelectFuneralByMemberNo(string MemberNo) {
            return base.Channel.SelectFuneralByMemberNo(MemberNo);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.FuneralModel> SelectFuneralByMemberNoAsync(string MemberNo) {
            return base.Channel.SelectFuneralByMemberNoAsync(MemberNo);
        }
        
        public int SaveFuneralService(Funeral.Model.FuneralServiceSelectModel model) {
            return base.Channel.SaveFuneralService(model);
        }
        
        public System.Threading.Tasks.Task<int> SaveFuneralServiceAsync(Funeral.Model.FuneralServiceSelectModel model) {
            return base.Channel.SaveFuneralServiceAsync(model);
        }
        
        public Funeral.Model.FuneralServiceSelectModel[] SelectServiceByFuneralID(int fkiFuneralID) {
            return base.Channel.SelectServiceByFuneralID(fkiFuneralID);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.FuneralServiceSelectModel[]> SelectServiceByFuneralIDAsync(int fkiFuneralID) {
            return base.Channel.SelectServiceByFuneralIDAsync(fkiFuneralID);
        }
        
        public Funeral.Model.FuneralServiceSelectModel SelectServiceByFunAndID(int fkiFuneralID, int pkiFuneralServiceSelectionID) {
            return base.Channel.SelectServiceByFunAndID(fkiFuneralID, pkiFuneralServiceSelectionID);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.FuneralServiceSelectModel> SelectServiceByFunAndIDAsync(int fkiFuneralID, int pkiFuneralServiceSelectionID) {
            return base.Channel.SelectServiceByFunAndIDAsync(fkiFuneralID, pkiFuneralServiceSelectionID);
        }
        
        public int DeleteFuneralServiceByID(int pkiFuneralServiceSelectionID) {
            return base.Channel.DeleteFuneralServiceByID(pkiFuneralServiceSelectionID);
        }
        
        public System.Threading.Tasks.Task<int> DeleteFuneralServiceByIDAsync(int pkiFuneralServiceSelectionID) {
            return base.Channel.DeleteFuneralServiceByIDAsync(pkiFuneralServiceSelectionID);
        }
        
        public Funeral.Model.FuneralModel GetInvoiceNumberByID(System.Guid ParlourId) {
            return base.Channel.GetInvoiceNumberByID(ParlourId);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.FuneralModel> GetInvoiceNumberByIDAsync(System.Guid ParlourId) {
            return base.Channel.GetInvoiceNumberByIDAsync(ParlourId);
        }
        
        public int UpdateAllFuneralData(int pkiFuneralID, string Notes, decimal DisCount, decimal Tax) {
            return base.Channel.UpdateAllFuneralData(pkiFuneralID, Notes, DisCount, Tax);
        }
        
        public System.Threading.Tasks.Task<int> UpdateAllFuneralDataAsync(int pkiFuneralID, string Notes, decimal DisCount, decimal Tax) {
            return base.Channel.UpdateAllFuneralDataAsync(pkiFuneralID, Notes, DisCount, Tax);
        }
        
        public int SaveFuneralSupportedDocument(Funeral.Model.FuneralDocumentModel model) {
            return base.Channel.SaveFuneralSupportedDocument(model);
        }
        
        public System.Threading.Tasks.Task<int> SaveFuneralSupportedDocumentAsync(Funeral.Model.FuneralDocumentModel model) {
            return base.Channel.SaveFuneralSupportedDocumentAsync(model);
        }
        
        public Funeral.Model.FuneralDocumentModel[] SelectFuneralDocumentsByMemberId(int fkiFuneralID) {
            return base.Channel.SelectFuneralDocumentsByMemberId(fkiFuneralID);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.FuneralDocumentModel[]> SelectFuneralDocumentsByMemberIdAsync(int fkiFuneralID) {
            return base.Channel.SelectFuneralDocumentsByMemberIdAsync(fkiFuneralID);
        }
        
        public int DeleteFuneraldocumentById(int pkiFuneralPictureID) {
            return base.Channel.DeleteFuneraldocumentById(pkiFuneralPictureID);
        }
        
        public System.Threading.Tasks.Task<int> DeleteFuneraldocumentByIdAsync(int pkiFuneralPictureID) {
            return base.Channel.DeleteFuneraldocumentByIdAsync(pkiFuneralPictureID);
        }
        
        public Funeral.Model.FuneralDocumentModel SelectFuneralDocumentsByPKId(int DocumentId) {
            return base.Channel.SelectFuneralDocumentsByPKId(DocumentId);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.FuneralDocumentModel> SelectFuneralDocumentsByPKIdAsync(int DocumentId) {
            return base.Channel.SelectFuneralDocumentsByPKIdAsync(DocumentId);
        }
        
        public int SaveTermsAndCondition(Funeral.Model.ApplicationTnCModel Model1) {
            return base.Channel.SaveTermsAndCondition(Model1);
        }
        
        public System.Threading.Tasks.Task<int> SaveTermsAndConditionAsync(Funeral.Model.ApplicationTnCModel Model1) {
            return base.Channel.SaveTermsAndConditionAsync(Model1);
        }
        
        public Funeral.Model.ApplicationTnCModel SelectApplicationTermsAndCondition(System.Guid parlourid) {
            return base.Channel.SelectApplicationTermsAndCondition(parlourid);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.ApplicationTnCModel> SelectApplicationTermsAndConditionAsync(System.Guid parlourid) {
            return base.Channel.SelectApplicationTermsAndConditionAsync(parlourid);
        }
        
        public Funeral.Model.TombStoneModel[] SelectAllTombStoneByParlourId(System.Guid ParlourId, int PageSize, int PageNum, string Keyword, string SortBy, string SortOrder) {
            return base.Channel.SelectAllTombStoneByParlourId(ParlourId, PageSize, PageNum, Keyword, SortBy, SortOrder);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.TombStoneModel[]> SelectAllTombStoneByParlourIdAsync(System.Guid ParlourId, int PageSize, int PageNum, string Keyword, string SortBy, string SortOrder) {
            return base.Channel.SelectAllTombStoneByParlourIdAsync(ParlourId, PageSize, PageNum, Keyword, SortBy, SortOrder);
        }
        
        public int TombStoneDelete(int ID, string UserName) {
            return base.Channel.TombStoneDelete(ID, UserName);
        }
        
        public System.Threading.Tasks.Task<int> TombStoneDeleteAsync(int ID, string UserName) {
            return base.Channel.TombStoneDeleteAsync(ID, UserName);
        }
        
        public int SaveTombStone(Funeral.Model.TombStoneModel model) {
            return base.Channel.SaveTombStone(model);
        }
        
        public System.Threading.Tasks.Task<int> SaveTombStoneAsync(Funeral.Model.TombStoneModel model) {
            return base.Channel.SaveTombStoneAsync(model);
        }
        
        public Funeral.Model.TombStoneModel SelectTombStoneByParlAndPki(int pkiTombstoneID, System.Guid ParlourId) {
            return base.Channel.SelectTombStoneByParlAndPki(pkiTombstoneID, ParlourId);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.TombStoneModel> SelectTombStoneByParlAndPkiAsync(int pkiTombstoneID, System.Guid ParlourId) {
            return base.Channel.SelectTombStoneByParlAndPkiAsync(pkiTombstoneID, ParlourId);
        }
        
        public int UploadTombImage(string ImageName, string ImagePath, int pkiTombstoneID, System.Guid parlourid) {
            return base.Channel.UploadTombImage(ImageName, ImagePath, pkiTombstoneID, parlourid);
        }
        
        public System.Threading.Tasks.Task<int> UploadTombImageAsync(string ImageName, string ImagePath, int pkiTombstoneID, System.Guid parlourid) {
            return base.Channel.UploadTombImageAsync(ImageName, ImagePath, pkiTombstoneID, parlourid);
        }
        
        public Funeral.Model.TombStoneModel GetInvoiceNumOfTombByParlID(System.Guid ParlourId) {
            return base.Channel.GetInvoiceNumOfTombByParlID(ParlourId);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.TombStoneModel> GetInvoiceNumOfTombByParlIDAsync(System.Guid ParlourId) {
            return base.Channel.GetInvoiceNumOfTombByParlIDAsync(ParlourId);
        }
        
        public Funeral.Model.TombStoneServiceSelectModel[] SelectServiceByTombStoneID(int fkiTombstoneID) {
            return base.Channel.SelectServiceByTombStoneID(fkiTombstoneID);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.TombStoneServiceSelectModel[]> SelectServiceByTombStoneIDAsync(int fkiTombstoneID) {
            return base.Channel.SelectServiceByTombStoneIDAsync(fkiTombstoneID);
        }
        
        public int DeleteTombstoneServiceByID(int pkiTombStoneSelectionID) {
            return base.Channel.DeleteTombstoneServiceByID(pkiTombStoneSelectionID);
        }
        
        public System.Threading.Tasks.Task<int> DeleteTombstoneServiceByIDAsync(int pkiTombStoneSelectionID) {
            return base.Channel.DeleteTombstoneServiceByIDAsync(pkiTombStoneSelectionID);
        }
        
        public Funeral.Model.TombStoneServiceSelectModel SelectServiceByTombAndID(int fkiTombstoneID, int pkiTombStoneSelectionID) {
            return base.Channel.SelectServiceByTombAndID(fkiTombstoneID, pkiTombStoneSelectionID);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.TombStoneServiceSelectModel> SelectServiceByTombAndIDAsync(int fkiTombstoneID, int pkiTombStoneSelectionID) {
            return base.Channel.SelectServiceByTombAndIDAsync(fkiTombstoneID, pkiTombStoneSelectionID);
        }
        
        public int SaveTombStoneService(Funeral.Model.TombStoneServiceSelectModel model) {
            return base.Channel.SaveTombStoneService(model);
        }
        
        public System.Threading.Tasks.Task<int> SaveTombStoneServiceAsync(Funeral.Model.TombStoneServiceSelectModel model) {
            return base.Channel.SaveTombStoneServiceAsync(model);
        }
        
        public int UpdateAllTombStoneData(int pkiTombstoneID, decimal DisCount, decimal Tax, string InvoiceNumber) {
            return base.Channel.UpdateAllTombStoneData(pkiTombstoneID, DisCount, Tax, InvoiceNumber);
        }
        
        public System.Threading.Tasks.Task<int> UpdateAllTombStoneDataAsync(int pkiTombstoneID, decimal DisCount, decimal Tax, string InvoiceNumber) {
            return base.Channel.UpdateAllTombStoneDataAsync(pkiTombstoneID, DisCount, Tax, InvoiceNumber);
        }
        
        public int UpdateAutoPolicyNo(Funeral.Model.ApplicationSettingsModel Model1) {
            return base.Channel.UpdateAutoPolicyNo(Model1);
        }
        
        public System.Threading.Tasks.Task<int> UpdateAutoPolicyNoAsync(Funeral.Model.ApplicationSettingsModel Model1) {
            return base.Channel.UpdateAutoPolicyNoAsync(Model1);
        }
        
        public Funeral.Model.AdminModel DoLogin(string UserName, string Password) {
            return base.Channel.DoLogin(UserName, Password);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.AdminModel> DoLoginAsync(string UserName, string Password) {
            return base.Channel.DoLoginAsync(UserName, Password);
        }
        
        public int SaveMember(Funeral.Model.MembersModel model) {
            return base.Channel.SaveMember(model);
        }
        
        public System.Threading.Tasks.Task<int> SaveMemberAsync(Funeral.Model.MembersModel model) {
            return base.Channel.SaveMemberAsync(model);
        }
        
        public int SaveBank(Funeral.Model.BankModel model) {
            return base.Channel.SaveBank(model);
        }
        
        public System.Threading.Tasks.Task<int> SaveBankAsync(Funeral.Model.BankModel model) {
            return base.Channel.SaveBankAsync(model);
        }
        
        public Funeral.Model.ApplicationSettingsModel SaveApplication(Funeral.Model.ApplicationSettingsModel model) {
            return base.Channel.SaveApplication(model);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.ApplicationSettingsModel> SaveApplicationAsync(Funeral.Model.ApplicationSettingsModel model) {
            return base.Channel.SaveApplicationAsync(model);
        }
        
        public Funeral.Model.AgentInfoSetupModel SaveAgentInfo(Funeral.Model.AgentInfoSetupModel model) {
            return base.Channel.SaveAgentInfo(model);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.AgentInfoSetupModel> SaveAgentInfoAsync(Funeral.Model.AgentInfoSetupModel model) {
            return base.Channel.SaveAgentInfoAsync(model);
        }
        
        public Funeral.Model.AdditionalApplicationSettingsModel SaveAdditionalApplication(Funeral.Model.AdditionalApplicationSettingsModel model) {
            return base.Channel.SaveAdditionalApplication(model);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.AdditionalApplicationSettingsModel> SaveAdditionalApplicationAsync(Funeral.Model.AdditionalApplicationSettingsModel model) {
            return base.Channel.SaveAdditionalApplicationAsync(model);
        }
        
        public Funeral.Model.BankingDetailSending SaveBankingDetail(Funeral.Model.BankingDetailSending Model) {
            return base.Channel.SaveBankingDetail(Model);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.BankingDetailSending> SaveBankingDetailAsync(Funeral.Model.BankingDetailSending Model) {
            return base.Channel.SaveBankingDetailAsync(Model);
        }
        
        public int SaveUserDetails(Funeral.Model.SecureUsersModel model) {
            return base.Channel.SaveUserDetails(model);
        }
        
        public System.Threading.Tasks.Task<int> SaveUserDetailsAsync(Funeral.Model.SecureUsersModel model) {
            return base.Channel.SaveUserDetailsAsync(model);
        }
        
        public int SavePlanDetails(Funeral.Model.PlanModel model) {
            return base.Channel.SavePlanDetails(model);
        }
        
        public System.Threading.Tasks.Task<int> SavePlanDetailsAsync(Funeral.Model.PlanModel model) {
            return base.Channel.SavePlanDetailsAsync(model);
        }
        
        public System.Guid SaveBranchDetails(Funeral.Model.BranchModel model) {
            return base.Channel.SaveBranchDetails(model);
        }
        
        public System.Threading.Tasks.Task<System.Guid> SaveBranchDetailsAsync(Funeral.Model.BranchModel model) {
            return base.Channel.SaveBranchDetailsAsync(model);
        }
        
        public int SaveSocietyDetails(Funeral.Model.SocietyModel model) {
            return base.Channel.SaveSocietyDetails(model);
        }
        
        public System.Threading.Tasks.Task<int> SaveSocietyDetailsAsync(Funeral.Model.SocietyModel model) {
            return base.Channel.SaveSocietyDetailsAsync(model);
        }
        
        public int SaveVendorDetails(Funeral.Model.VendorModel model) {
            return base.Channel.SaveVendorDetails(model);
        }
        
        public System.Threading.Tasks.Task<int> SaveVendorDetailsAsync(Funeral.Model.VendorModel model) {
            return base.Channel.SaveVendorDetailsAsync(model);
        }
        
        public int UpdatesmsTemplate(Funeral.Model.smsTempletModel model) {
            return base.Channel.UpdatesmsTemplate(model);
        }
        
        public System.Threading.Tasks.Task<int> UpdatesmsTemplateAsync(Funeral.Model.smsTempletModel model) {
            return base.Channel.UpdatesmsTemplateAsync(model);
        }
        
        public int SaveExpensesDetails(Funeral.Model.ExpensesModel model) {
            return base.Channel.SaveExpensesDetails(model);
        }
        
        public System.Threading.Tasks.Task<int> SaveExpensesDetailsAsync(Funeral.Model.ExpensesModel model) {
            return base.Channel.SaveExpensesDetailsAsync(model);
        }
        
        public int SaveUserGroupDetails(Funeral.Model.SecureUserGroupsModel model) {
            return base.Channel.SaveUserGroupDetails(model);
        }
        
        public System.Threading.Tasks.Task<int> SaveUserGroupDetailsAsync(Funeral.Model.SecureUserGroupsModel model) {
            return base.Channel.SaveUserGroupDetailsAsync(model);
        }
        
        public int SaveSmsGroupDetails(Funeral.Model.smsSendingGroupModel model) {
            return base.Channel.SaveSmsGroupDetails(model);
        }
        
        public System.Threading.Tasks.Task<int> SaveSmsGroupDetailsAsync(Funeral.Model.smsSendingGroupModel model) {
            return base.Channel.SaveSmsGroupDetailsAsync(model);
        }
        
        public System.Guid SaveAddonProductDetails(Funeral.Model.AddonProductsModal model) {
            return base.Channel.SaveAddonProductDetails(model);
        }
        
        public System.Threading.Tasks.Task<System.Guid> SaveAddonProductDetailsAsync(Funeral.Model.AddonProductsModal model) {
            return base.Channel.SaveAddonProductDetailsAsync(model);
        }
        
        public int DeleteMember(int ID) {
            return base.Channel.DeleteMember(ID);
        }
        
        public System.Threading.Tasks.Task<int> DeleteMemberAsync(int ID) {
            return base.Channel.DeleteMemberAsync(ID);
        }
        
        public int MemberDeleteLogical(int id, string UserName) {
            return base.Channel.MemberDeleteLogical(id, UserName);
        }
        
        public System.Threading.Tasks.Task<int> MemberDeleteLogicalAsync(int id, string UserName) {
            return base.Channel.MemberDeleteLogicalAsync(id, UserName);
        }
        
        public int DeleteUser(int ID) {
            return base.Channel.DeleteUser(ID);
        }
        
        public System.Threading.Tasks.Task<int> DeleteUserAsync(int ID) {
            return base.Channel.DeleteUserAsync(ID);
        }
        
        public int DeletePlan(int ID) {
            return base.Channel.DeletePlan(ID);
        }
        
        public System.Threading.Tasks.Task<int> DeletePlanAsync(int ID) {
            return base.Channel.DeletePlanAsync(ID);
        }
        
        public int DeleteCompany(int ID) {
            return base.Channel.DeleteCompany(ID);
        }
        
        public System.Threading.Tasks.Task<int> DeleteCompanyAsync(int ID) {
            return base.Channel.DeleteCompanyAsync(ID);
        }
        
        public int DeleteAgent(int ID) {
            return base.Channel.DeleteAgent(ID);
        }
        
        public System.Threading.Tasks.Task<int> DeleteAgentAsync(int ID) {
            return base.Channel.DeleteAgentAsync(ID);
        }
        
        public int DeleteBranch(System.Guid ID) {
            return base.Channel.DeleteBranch(ID);
        }
        
        public System.Threading.Tasks.Task<int> DeleteBranchAsync(System.Guid ID) {
            return base.Channel.DeleteBranchAsync(ID);
        }
        
        public int DeleteBank(int ID) {
            return base.Channel.DeleteBank(ID);
        }
        
        public System.Threading.Tasks.Task<int> DeleteBankAsync(int ID) {
            return base.Channel.DeleteBankAsync(ID);
        }
        
        public int DeleteSociety(int ID) {
            return base.Channel.DeleteSociety(ID);
        }
        
        public System.Threading.Tasks.Task<int> DeleteSocietyAsync(int ID) {
            return base.Channel.DeleteSocietyAsync(ID);
        }
        
        public int DeleteVendor(int ID) {
            return base.Channel.DeleteVendor(ID);
        }
        
        public System.Threading.Tasks.Task<int> DeleteVendorAsync(int ID) {
            return base.Channel.DeleteVendorAsync(ID);
        }
        
        public int DeleteExpenses(int ID) {
            return base.Channel.DeleteExpenses(ID);
        }
        
        public System.Threading.Tasks.Task<int> DeleteExpensesAsync(int ID) {
            return base.Channel.DeleteExpensesAsync(ID);
        }
        
        public int DeleteAddonProduct(System.Guid ID) {
            return base.Channel.DeleteAddonProduct(ID);
        }
        
        public System.Threading.Tasks.Task<int> DeleteAddonProductAsync(System.Guid ID) {
            return base.Channel.DeleteAddonProductAsync(ID);
        }
        
        public Funeral.Model.SecureUsersModel EditUserbyID(int ID, System.Guid ParlourId) {
            return base.Channel.EditUserbyID(ID, ParlourId);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.SecureUsersModel> EditUserbyIDAsync(int ID, System.Guid ParlourId) {
            return base.Channel.EditUserbyIDAsync(ID, ParlourId);
        }
        
        public Funeral.Model.PlanModel EditPlanbyID(int ID, System.Guid ParlourId) {
            return base.Channel.EditPlanbyID(ID, ParlourId);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.PlanModel> EditPlanbyIDAsync(int ID, System.Guid ParlourId) {
            return base.Channel.EditPlanbyIDAsync(ID, ParlourId);
        }
        
        public Funeral.Model.BranchModel EditBranchbyID(System.Guid ID, System.Guid ParlourId) {
            return base.Channel.EditBranchbyID(ID, ParlourId);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.BranchModel> EditBranchbyIDAsync(System.Guid ID, System.Guid ParlourId) {
            return base.Channel.EditBranchbyIDAsync(ID, ParlourId);
        }
        
        public Funeral.Model.SocietyModel EditSocietybyID(int ID, System.Guid ParlourId) {
            return base.Channel.EditSocietybyID(ID, ParlourId);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.SocietyModel> EditSocietybyIDAsync(int ID, System.Guid ParlourId) {
            return base.Channel.EditSocietybyIDAsync(ID, ParlourId);
        }
        
        public Funeral.Model.VendorModel EditVendorbyID(int ID, System.Guid ParlourId) {
            return base.Channel.EditVendorbyID(ID, ParlourId);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.VendorModel> EditVendorbyIDAsync(int ID, System.Guid ParlourId) {
            return base.Channel.EditVendorbyIDAsync(ID, ParlourId);
        }
        
        public Funeral.Model.smsTempletModel GetEmailTemplateByID(int ID, System.Guid ParlourId) {
            return base.Channel.GetEmailTemplateByID(ID, ParlourId);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.smsTempletModel> GetEmailTemplateByIDAsync(int ID, System.Guid ParlourId) {
            return base.Channel.GetEmailTemplateByIDAsync(ID, ParlourId);
        }
        
        public Funeral.Model.ExpensesModel EditExpensesbyID(int ID, System.Guid ParlourId) {
            return base.Channel.EditExpensesbyID(ID, ParlourId);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.ExpensesModel> EditExpensesbyIDAsync(int ID, System.Guid ParlourId) {
            return base.Channel.EditExpensesbyIDAsync(ID, ParlourId);
        }
        
        public Funeral.Model.SecureUserGroupsModel[] EditSecurUserbyID(int ID) {
            return base.Channel.EditSecurUserbyID(ID);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.SecureUserGroupsModel[]> EditSecurUserbyIDAsync(int ID) {
            return base.Channel.EditSecurUserbyIDAsync(ID);
        }
        
        public Funeral.Model.smsSendingGroupModel[] EditsmsGroupbyID(int ID) {
            return base.Channel.EditsmsGroupbyID(ID);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.smsSendingGroupModel[]> EditsmsGroupbyIDAsync(int ID) {
            return base.Channel.EditsmsGroupbyIDAsync(ID);
        }
        
        public Funeral.Model.smsSendingGroupModel GetsmsGroupbyID(int ID, System.Guid ParlourId) {
            return base.Channel.GetsmsGroupbyID(ID, ParlourId);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.smsSendingGroupModel> GetsmsGroupbyIDAsync(int ID, System.Guid ParlourId) {
            return base.Channel.GetsmsGroupbyIDAsync(ID, ParlourId);
        }
        
        public Funeral.Model.AddonProductsModal EditAddonProductbyID(System.Guid ID, System.Guid ParlourId) {
            return base.Channel.EditAddonProductbyID(ID, ParlourId);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.AddonProductsModal> EditAddonProductbyIDAsync(System.Guid ID, System.Guid ParlourId) {
            return base.Channel.EditAddonProductbyIDAsync(ID, ParlourId);
        }
        
        public Funeral.Model.MembersModel GetMemberByID(int ID, System.Guid ParlourId) {
            return base.Channel.GetMemberByID(ID, ParlourId);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.MembersModel> GetMemberByIDAsync(int ID, System.Guid ParlourId) {
            return base.Channel.GetMemberByIDAsync(ID, ParlourId);
        }
        
        public Funeral.Model.MembersModel GetMemberByIDNum(string ID, System.Guid ParlourId) {
            return base.Channel.GetMemberByIDNum(ID, ParlourId);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.MembersModel> GetMemberByIDNumAsync(string ID, System.Guid ParlourId) {
            return base.Channel.GetMemberByIDNumAsync(ID, ParlourId);
        }
        
        public Funeral.Model.SecureUsersModel GetUserByID(string UserID, System.Guid ParlourId) {
            return base.Channel.GetUserByID(UserID, ParlourId);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.SecureUsersModel> GetUserByIDAsync(string UserID, System.Guid ParlourId) {
            return base.Channel.GetUserByIDAsync(UserID, ParlourId);
        }
        
        public Funeral.Model.PlanModel GetPlanByID(string UserID, System.Guid ParlourId) {
            return base.Channel.GetPlanByID(UserID, ParlourId);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.PlanModel> GetPlanByIDAsync(string UserID, System.Guid ParlourId) {
            return base.Channel.GetPlanByIDAsync(UserID, ParlourId);
        }
        
        public Funeral.Model.SecureUserGroupsModel GetUserAccessByID(int UserID, System.Guid ParlourId) {
            return base.Channel.GetUserAccessByID(UserID, ParlourId);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.SecureUserGroupsModel> GetUserAccessByIDAsync(int UserID, System.Guid ParlourId) {
            return base.Channel.GetUserAccessByIDAsync(UserID, ParlourId);
        }
        
        public Funeral.Model.BranchModel GetBranchByID(string UserID, System.Guid ParlourId) {
            return base.Channel.GetBranchByID(UserID, ParlourId);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.BranchModel> GetBranchByIDAsync(string UserID, System.Guid ParlourId) {
            return base.Channel.GetBranchByIDAsync(UserID, ParlourId);
        }
        
        public Funeral.Model.AddonProductsModal GetAddonProductByID(string UserID, System.Guid ParlourId) {
            return base.Channel.GetAddonProductByID(UserID, ParlourId);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.AddonProductsModal> GetAddonProductByIDAsync(string UserID, System.Guid ParlourId) {
            return base.Channel.GetAddonProductByIDAsync(UserID, ParlourId);
        }
        
        public Funeral.Model.SocietyModel GetSocietyByID(string UserID, System.Guid ParlourId) {
            return base.Channel.GetSocietyByID(UserID, ParlourId);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.SocietyModel> GetSocietyByIDAsync(string UserID, System.Guid ParlourId) {
            return base.Channel.GetSocietyByIDAsync(UserID, ParlourId);
        }
        
        public Funeral.Model.VendorModel GetVendorByID(string UserID, System.Guid ParlourId) {
            return base.Channel.GetVendorByID(UserID, ParlourId);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.VendorModel> GetVendorByIDAsync(string UserID, System.Guid ParlourId) {
            return base.Channel.GetVendorByIDAsync(UserID, ParlourId);
        }
        
        public Funeral.Model.ExpensesModel GetExpensesByID(string UserID, System.Guid ParlourId) {
            return base.Channel.GetExpensesByID(UserID, ParlourId);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.ExpensesModel> GetExpensesByIDAsync(string UserID, System.Guid ParlourId) {
            return base.Channel.GetExpensesByIDAsync(UserID, ParlourId);
        }
        
        public Funeral.Model.ApplicationSettingsModel GetApplictionByParlourID(System.Guid ParlourId) {
            return base.Channel.GetApplictionByParlourID(ParlourId);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.ApplicationSettingsModel> GetApplictionByParlourIDAsync(System.Guid ParlourId) {
            return base.Channel.GetApplictionByParlourIDAsync(ParlourId);
        }
        
        public Funeral.Model.ApplicationSettingsModel GetApplictionByID(int ID) {
            return base.Channel.GetApplictionByID(ID);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.ApplicationSettingsModel> GetApplictionByIDAsync(int ID) {
            return base.Channel.GetApplictionByIDAsync(ID);
        }
        
        public Funeral.Model.BankingDetailSending GetBankingByID(System.Guid ID) {
            return base.Channel.GetBankingByID(ID);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.BankingDetailSending> GetBankingByIDAsync(System.Guid ID) {
            return base.Channel.GetBankingByIDAsync(ID);
        }
        
        public Funeral.Model.AgentInfoSetupModel GetAgentByID(int ID) {
            return base.Channel.GetAgentByID(ID);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.AgentInfoSetupModel> GetAgentByIDAsync(int ID) {
            return base.Channel.GetAgentByIDAsync(ID);
        }
        
        public Funeral.Model.SecureGroupModel[] GetSecureGrouList() {
            return base.Channel.GetSecureGrouList();
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.SecureGroupModel[]> GetSecureGrouListAsync() {
            return base.Channel.GetSecureGrouListAsync();
        }
        
        public Funeral.Model.MembersViewModel GetAllMembers(System.Guid ParlourId, int PageSize, int PageNum, string Keyword, string SortBy, string SortOrder) {
            return base.Channel.GetAllMembers(ParlourId, PageSize, PageNum, Keyword, SortBy, SortOrder);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.MembersViewModel> GetAllMembersAsync(System.Guid ParlourId, int PageSize, int PageNum, string Keyword, string SortBy, string SortOrder) {
            return base.Channel.GetAllMembersAsync(ParlourId, PageSize, PageNum, Keyword, SortBy, SortOrder);
        }
        
        public Funeral.Model.MembersViewModel GetAllDebitOrderMembers(System.Guid ParlourId, int PageSize, int PageNum, string Keyword, string SortBy, string SortOrder) {
            return base.Channel.GetAllDebitOrderMembers(ParlourId, PageSize, PageNum, Keyword, SortBy, SortOrder);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.MembersViewModel> GetAllDebitOrderMembersAsync(System.Guid ParlourId, int PageSize, int PageNum, string Keyword, string SortBy, string SortOrder) {
            return base.Channel.GetAllDebitOrderMembersAsync(ParlourId, PageSize, PageNum, Keyword, SortBy, SortOrder);
        }
        
        public Funeral.Model.SecureUsersModel[] GetAllUsers(System.Guid ParlourId, int PageSize, int PageNum, string Keyword, string SortBy, string SortOrder) {
            return base.Channel.GetAllUsers(ParlourId, PageSize, PageNum, Keyword, SortBy, SortOrder);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.SecureUsersModel[]> GetAllUsersAsync(System.Guid ParlourId, int PageSize, int PageNum, string Keyword, string SortBy, string SortOrder) {
            return base.Channel.GetAllUsersAsync(ParlourId, PageSize, PageNum, Keyword, SortBy, SortOrder);
        }
        
        public Funeral.Model.PlanModel[] GetAllPlans(System.Guid ParlourId, int PageSize, int PageNum, string Keyword, string SortBy, string SortOrder) {
            return base.Channel.GetAllPlans(ParlourId, PageSize, PageNum, Keyword, SortBy, SortOrder);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.PlanModel[]> GetAllPlansAsync(System.Guid ParlourId, int PageSize, int PageNum, string Keyword, string SortBy, string SortOrder) {
            return base.Channel.GetAllPlansAsync(ParlourId, PageSize, PageNum, Keyword, SortBy, SortOrder);
        }
        
        public Funeral.Model.ApplicationSettingsModel[] GetAllCompanys(System.Guid ParlourId, int PageSize, int PageNum, string Keyword, string SortBy, string SortOrder) {
            return base.Channel.GetAllCompanys(ParlourId, PageSize, PageNum, Keyword, SortBy, SortOrder);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.ApplicationSettingsModel[]> GetAllCompanysAsync(System.Guid ParlourId, int PageSize, int PageNum, string Keyword, string SortBy, string SortOrder) {
            return base.Channel.GetAllCompanysAsync(ParlourId, PageSize, PageNum, Keyword, SortBy, SortOrder);
        }
        
        public Funeral.Model.AgentInfoSetupModel[] GetAllAgentInfo(System.Guid ParlourId, int PageSize, int PageNum, string Keyword, string SortBy, string SortOrder) {
            return base.Channel.GetAllAgentInfo(ParlourId, PageSize, PageNum, Keyword, SortBy, SortOrder);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.AgentInfoSetupModel[]> GetAllAgentInfoAsync(System.Guid ParlourId, int PageSize, int PageNum, string Keyword, string SortBy, string SortOrder) {
            return base.Channel.GetAllAgentInfoAsync(ParlourId, PageSize, PageNum, Keyword, SortBy, SortOrder);
        }
        
        public Funeral.Model.BranchModel[] GetAllBranches(System.Guid ParlourId) {
            return base.Channel.GetAllBranches(ParlourId);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.BranchModel[]> GetAllBranchesAsync(System.Guid ParlourId) {
            return base.Channel.GetAllBranchesAsync(ParlourId);
        }
        
        public Funeral.Model.SocietyModel[] GetAllSocietyes(System.Guid ParlourId) {
            return base.Channel.GetAllSocietyes(ParlourId);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.SocietyModel[]> GetAllSocietyesAsync(System.Guid ParlourId) {
            return base.Channel.GetAllSocietyesAsync(ParlourId);
        }
        
        public Funeral.Model.SocietyModel[] GetAllSocietye(System.Guid ParlourId) {
            return base.Channel.GetAllSocietye(ParlourId);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.SocietyModel[]> GetAllSocietyeAsync(System.Guid ParlourId) {
            return base.Channel.GetAllSocietyeAsync(ParlourId);
        }
        
        public Funeral.Model.VendorModel[] GetAllVendores(System.Guid ParlourId, int PageSize, int PageNum, string Keyword, string SortBy, string SortOrder) {
            return base.Channel.GetAllVendores(ParlourId, PageSize, PageNum, Keyword, SortBy, SortOrder);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.VendorModel[]> GetAllVendoresAsync(System.Guid ParlourId, int PageSize, int PageNum, string Keyword, string SortBy, string SortOrder) {
            return base.Channel.GetAllVendoresAsync(ParlourId, PageSize, PageNum, Keyword, SortBy, SortOrder);
        }
        
        public Funeral.Model.smsTempletModel[] GetTemplateList(System.Guid ParlourId) {
            return base.Channel.GetTemplateList(ParlourId);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.smsTempletModel[]> GetTemplateListAsync(System.Guid ParlourId) {
            return base.Channel.GetTemplateListAsync(ParlourId);
        }
        
        public Funeral.Model.ExpensesModel[] GetAllExpenseses(System.Guid ParlourId) {
            return base.Channel.GetAllExpenseses(ParlourId);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.ExpensesModel[]> GetAllExpensesesAsync(System.Guid ParlourId) {
            return base.Channel.GetAllExpensesesAsync(ParlourId);
        }
        
        public Funeral.Model.AddonProductsModal[] GetAllAddonProductes(System.Guid ParlourId) {
            return base.Channel.GetAllAddonProductes(ParlourId);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.AddonProductsModal[]> GetAllAddonProductesAsync(System.Guid ParlourId) {
            return base.Channel.GetAllAddonProductesAsync(ParlourId);
        }
        
        public Funeral.Model.MembersModel[] GetAllMemberCellphon(System.Guid ParlourId) {
            return base.Channel.GetAllMemberCellphon(ParlourId);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.MembersModel[]> GetAllMemberCellphonAsync(System.Guid ParlourId) {
            return base.Channel.GetAllMemberCellphonAsync(ParlourId);
        }
        
        public Funeral.Model.PolicyModel[] GetPolicyByParlourId(System.Guid parlourid) {
            return base.Channel.GetPolicyByParlourId(parlourid);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.PolicyModel[]> GetPolicyByParlourIdAsync(System.Guid parlourid) {
            return base.Channel.GetPolicyByParlourIdAsync(parlourid);
        }
        
        public Funeral.Model.MemberInvoiceModel[] GetInvoices(System.Guid parlourid, int MemberId) {
            return base.Channel.GetInvoices(parlourid, MemberId);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.MemberInvoiceModel[]> GetInvoicesAsync(System.Guid parlourid, int MemberId) {
            return base.Channel.GetInvoicesAsync(parlourid, MemberId);
        }
        
        public Funeral.Model.SocietyModel[] SocietyByparlourId(System.Guid parlourid) {
            return base.Channel.SocietyByparlourId(parlourid);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.SocietyModel[]> SocietyByparlourIdAsync(System.Guid parlourid) {
            return base.Channel.SocietyByparlourIdAsync(parlourid);
        }
        
        public Funeral.Model.SocietyModel[] GetAllSociety(System.Guid parlourid) {
            return base.Channel.GetAllSociety(parlourid);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.SocietyModel[]> GetAllSocietyAsync(System.Guid parlourid) {
            return base.Channel.GetAllSocietyAsync(parlourid);
        }
        
        public Funeral.Model.BranchModel[] BranchByparlourId(System.Guid parlourid) {
            return base.Channel.BranchByparlourId(parlourid);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.BranchModel[]> BranchByparlourIdAsync(System.Guid parlourid) {
            return base.Channel.BranchByparlourIdAsync(parlourid);
        }
        
        public Funeral.Model.BranchModel[] GetAllBranch(System.Guid Parlourid) {
            return base.Channel.GetAllBranch(Parlourid);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.BranchModel[]> GetAllBranchAsync(System.Guid Parlourid) {
            return base.Channel.GetAllBranchAsync(Parlourid);
        }
        
        public Funeral.Model.PlanModel[] GetAllPlanName(System.Guid Parlourid) {
            return base.Channel.GetAllPlanName(Parlourid);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.PlanModel[]> GetAllPlanNameAsync(System.Guid Parlourid) {
            return base.Channel.GetAllPlanNameAsync(Parlourid);
        }
        
        public Funeral.Model.PolicyModel[] GetPlanSubscriptionByPlanId(int pkiPlanID) {
            return base.Channel.GetPlanSubscriptionByPlanId(pkiPlanID);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.PolicyModel[]> GetPlanSubscriptionByPlanIdAsync(int pkiPlanID) {
            return base.Channel.GetPlanSubscriptionByPlanIdAsync(pkiPlanID);
        }
        
        public int GetWaitingPeriodByPlanId(int pkiPlanID) {
            return base.Channel.GetWaitingPeriodByPlanId(pkiPlanID);
        }
        
        public System.Threading.Tasks.Task<int> GetWaitingPeriodByPlanIdAsync(int pkiPlanID) {
            return base.Channel.GetWaitingPeriodByPlanIdAsync(pkiPlanID);
        }
        
        public string GetPlanUnderwriterByPlanId(int pkiPlanID) {
            return base.Channel.GetPlanUnderwriterByPlanId(pkiPlanID);
        }
        
        public System.Threading.Tasks.Task<string> GetPlanUnderwriterByPlanIdAsync(int pkiPlanID) {
            return base.Channel.GetPlanUnderwriterByPlanIdAsync(pkiPlanID);
        }
        
        public int SaveMemberNote(Funeral.Model.MemberNotesModel model) {
            return base.Channel.SaveMemberNote(model);
        }
        
        public System.Threading.Tasks.Task<int> SaveMemberNoteAsync(Funeral.Model.MemberNotesModel model) {
            return base.Channel.SaveMemberNoteAsync(model);
        }
        
        public Funeral.Model.MemberNotesModel[] GetMemberNoteByMemberID(int MemberID) {
            return base.Channel.GetMemberNoteByMemberID(MemberID);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.MemberNotesModel[]> GetMemberNoteByMemberIDAsync(int MemberID) {
            return base.Channel.GetMemberNoteByMemberIDAsync(MemberID);
        }
        
        public int UpdateNotesMember(Funeral.Model.MemberNotesModel model) {
            return base.Channel.UpdateNotesMember(model);
        }
        
        public System.Threading.Tasks.Task<int> UpdateNotesMemberAsync(Funeral.Model.MemberNotesModel model) {
            return base.Channel.UpdateNotesMemberAsync(model);
        }
        
        public Funeral.Model.SupportedDocumentModel SelectSupportDocumentsById(int DocumentId) {
            return base.Channel.SelectSupportDocumentsById(DocumentId);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.SupportedDocumentModel> SelectSupportDocumentsByIdAsync(int DocumentId) {
            return base.Channel.SelectSupportDocumentsByIdAsync(DocumentId);
        }
        
        public Funeral.Model.AddonProductsModal[] SelectProductAddonProducts(System.Guid ParlourId) {
            return base.Channel.SelectProductAddonProducts(ParlourId);
        }
        
        public System.Threading.Tasks.Task<Funeral.Model.AddonProductsModal[]> SelectProductAddonProductsAsync(System.Guid ParlourId) {
            return base.Channel.SelectProductAddonProductsAsync(ParlourId);
        }
        
        public int SaveAddonProducts(Funeral.Model.MemberAddonProductsModel model) {
            return base.Channel.SaveAddonProducts(model);
        }
        
        public System.Threading.Tasks.Task<int> SaveAddonProductsAsync(Funeral.Model.MemberAddonProductsModel model) {
            return base.Channel.SaveAddonProductsAsync(model);
        }
    }
}
